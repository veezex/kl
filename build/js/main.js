$(document).ready(function(){if(function(i){"use strict";i.fn.emulateTransitionEnd=function(e){var t=!1,s=this;i(this).one("bsTransitionEnd",function(){t=!0});return setTimeout(function(){t||i(s).trigger(i.support.transition.end)},e),this},i(function(){i.support.transition=function(){var e=document.createElement("bootstrap"),t={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"};for(var s in t)if(void 0!==e.style[s])return{end:t[s]};return!1}(),i.support.transition&&(i.event.special.bsTransitionEnd={bindType:i.support.transition.end,delegateType:i.support.transition.end,handle:function(e){if(i(e.target).is(this))return e.handleObj.handler.apply(this,arguments)}})})}(jQuery),function(p){"use strict";var m=function(e,t){this.$element=p(e),this.$indicators=this.$element.find(".carousel-indicators"),this.options=t,this.paused=null,this.sliding=null,this.interval=null,this.$active=null,this.$items=null,this.options.keyboard&&this.$element.on("keydown.bs.carousel",p.proxy(this.keydown,this)),"hover"==this.options.pause&&!("ontouchstart"in document.documentElement)&&this.$element.on("mouseenter.bs.carousel",p.proxy(this.pause,this)).on("mouseleave.bs.carousel",p.proxy(this.cycle,this))};function l(a){return this.each(function(){var e=p(this),t=e.data("bs.carousel"),s=p.extend({},m.DEFAULTS,e.data(),"object"==typeof a&&a),i="string"==typeof a?a:s.slide;t||e.data("bs.carousel",t=new m(this,s)),"number"==typeof a?t.to(a):i?t[i]():s.interval&&t.pause().cycle()})}m.VERSION="3.3.5",m.TRANSITION_DURATION=600,m.DEFAULTS={interval:5e3,pause:"hover",wrap:!0,keyboard:!0},m.prototype.keydown=function(e){if(!/input|textarea/i.test(e.target.tagName)){switch(e.which){case 37:this.prev();break;case 39:this.next();break;default:return}e.preventDefault()}},m.prototype.cycle=function(e){return e||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(p.proxy(this.next,this),this.options.interval)),this},m.prototype.getItemIndex=function(e){return this.$items=e.parent().children(".item"),this.$items.index(e||this.$active)},m.prototype.getItemForDirection=function(e,t){var s=this.getItemIndex(t);if(("prev"==e&&0===s||"next"==e&&s==this.$items.length-1)&&!this.options.wrap)return t;var i=(s+("prev"==e?-1:1))%this.$items.length;return this.$items.eq(i)},m.prototype.to=function(e){var t=this,s=this.getItemIndex(this.$active=this.$element.find(".item.active"));if(!(e>this.$items.length-1||e<0))return this.sliding?this.$element.one("slid.bs.carousel",function(){t.to(e)}):s==e?this.pause().cycle():this.slide(s<e?"next":"prev",this.$items.eq(e))},m.prototype.pause=function(e){return e||(this.paused=!0),this.$element.find(".next, .prev").length&&p.support.transition&&(this.$element.trigger(p.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},m.prototype.next=function(){if(!this.sliding)return this.slide("next")},m.prototype.prev=function(){if(!this.sliding)return this.slide("prev")},m.prototype.slide=function(e,t){var s=this.$element.find(".item.active"),i=t||this.getItemForDirection(e,s),a=this.interval,n="next"==e?"left":"right",l=this;if(i.hasClass("active"))return this.sliding=!1;var o=i[0],r=p.Event("slide.bs.carousel",{relatedTarget:o,direction:n});if(this.$element.trigger(r),!r.isDefaultPrevented()){if(this.sliding=!0,a&&this.pause(),this.$indicators.length){this.$indicators.find(".active").removeClass("active");var d=p(this.$indicators.children()[this.getItemIndex(i)]);d&&d.addClass("active")}var c=p.Event("slid.bs.carousel",{relatedTarget:o,direction:n});return p.support.transition&&this.$element.hasClass("slide")?(i.addClass(e),i[0].offsetWidth,s.addClass(n),i.addClass(n),s.one("bsTransitionEnd",function(){i.removeClass([e,n].join(" ")).addClass("active"),s.removeClass(["active",n].join(" ")),l.sliding=!1,setTimeout(function(){l.$element.trigger(c)},0)}).emulateTransitionEnd(m.TRANSITION_DURATION)):(s.removeClass("active"),i.addClass("active"),this.sliding=!1,this.$element.trigger(c)),a&&this.cycle(),this}};var e=p.fn.carousel;p.fn.carousel=l,p.fn.carousel.Constructor=m,p.fn.carousel.noConflict=function(){return p.fn.carousel=e,this};var t=function(e){var t,s=p(this),i=p(s.attr("data-target")||(t=s.attr("href"))&&t.replace(/.*(?=#[^\s]+$)/,""));if(i.hasClass("carousel")){var a=p.extend({},i.data(),s.data()),n=s.attr("data-slide-to");n&&(a.interval=!1),l.call(i,a),n&&i.data("bs.carousel").to(n),e.preventDefault()}};p(document).on("click.bs.carousel.data-api","[data-slide]",t).on("click.bs.carousel.data-api","[data-slide-to]",t),p(window).on("load",function(){p('[data-ride="carousel"]').each(function(){var e=p(this);l.call(e,e.data())})})}(jQuery),$(".carousel-item-image .item").each(function(){for(var e=$(this),t=1;t<5;t++)(e=e.next()).length||(e=$(this).siblings(":first")),e.children(":first-child").clone().addClass("cloneditem-"+t).appendTo($(this))}),$(".carousel").carousel({interval:0}),$("#carousel-item-image").carousel({interval:0}),$(".benefits__item").on("click",function(){var e=$(this),t=e.attr("data-name");e.hasClass("isActive")?e.closest(".filter__checkbox-wrap").find("#"+t).prop("checked",!1):e.closest(".filter__checkbox-wrap").find("#"+t).prop("checked",!0)}),"undefined"==typeof jQuery)throw new Error("Bootstrap's JavaScript requires jQuery");if(function(e){"use strict";var t=jQuery.fn.jquery.split(" ")[0].split(".");if(t[0]<2&&t[1]<9||1==t[0]&&9==t[1]&&t[2]<1||3<t[0])throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 4")}(),function(l){"use strict";var o=function(e,t){this.$element=l(e),this.options=l.extend({},o.DEFAULTS,t),this.$trigger=l('[data-toggle="collapse"][href="#'+e.id+'"],[data-toggle="collapse"][data-target="#'+e.id+'"]'),this.transitioning=null,this.options.parent?this.$parent=this.getParent():this.addAriaAndCollapsedClass(this.$element,this.$trigger),this.options.toggle&&this.toggle()};function a(e){var t,s=e.attr("data-target")||(t=e.attr("href"))&&t.replace(/.*(?=#[^\s]+$)/,"");return l(s)}function r(i){return this.each(function(){var e=l(this),t=e.data("bs.collapse"),s=l.extend({},o.DEFAULTS,e.data(),"object"==typeof i&&i);!t&&s.toggle&&/show|hide/.test(i)&&(s.toggle=!1),t||e.data("bs.collapse",t=new o(this,s)),"string"==typeof i&&t[i]()})}o.VERSION="3.3.7",o.TRANSITION_DURATION=350,o.DEFAULTS={toggle:!0},o.prototype.dimension=function(){return this.$element.hasClass("width")?"width":"height"},o.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass("in")){var e,t=this.$parent&&this.$parent.children(".collapse__tab").children(".in, .collapsing");if(!(t&&t.length&&(e=t.data("bs.collapse"))&&e.transitioning)){var s=l.Event("show.bs.collapse");if(this.$element.trigger(s),!s.isDefaultPrevented()){t&&t.length&&(r.call(t,"hide"),e||t.data("bs.collapse",null));var i=this.dimension();this.$element.removeClass("collapse").addClass("collapsing")[i](0).attr("aria-expanded",!0),this.$trigger.removeClass("collapsed").attr("aria-expanded",!0),this.transitioning=1;var a=function(){this.$element.removeClass("collapsing").addClass("collapse in")[i](""),this.transitioning=0,this.$element.trigger("shown.bs.collapse")};if(!l.support.transition)return a.call(this);var n=l.camelCase(["scroll",i].join("-"));this.$element.one("bsTransitionEnd",l.proxy(a,this)).emulateTransitionEnd(o.TRANSITION_DURATION)[i](this.$element[0][n])}}}},o.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass("in")){var e=l.Event("hide.bs.collapse");if(this.$element.trigger(e),!e.isDefaultPrevented()){var t=this.dimension();this.$element[t](this.$element[t]())[0].offsetHeight,this.$element.addClass("collapsing").removeClass("collapse in").attr("aria-expanded",!1),this.$trigger.addClass("collapsed").attr("aria-expanded",!1),this.transitioning=1;var s=function(){this.transitioning=0,this.$element.removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse")};if(!l.support.transition)return s.call(this);this.$element[t](0).one("bsTransitionEnd",l.proxy(s,this)).emulateTransitionEnd(o.TRANSITION_DURATION)}}},o.prototype.toggle=function(){this[this.$element.hasClass("in")?"hide":"show"]()},o.prototype.getParent=function(){return l(this.options.parent).find('[data-toggle="collapse"][data-parent="'+this.options.parent+'"]').each(l.proxy(function(e,t){var s=l(t);this.addAriaAndCollapsedClass(a(s),s)},this)).end()},o.prototype.addAriaAndCollapsedClass=function(e,t){var s=e.hasClass("in");e.attr("aria-expanded",s),t.toggleClass("collapsed",!s).attr("aria-expanded",s)};var e=l.fn.collapse;l.fn.collapse=r,l.fn.collapse.Constructor=o,l.fn.collapse.noConflict=function(){return l.fn.collapse=e,this},l(document).on("click.bs.collapse.data-api",'[data-toggle="collapse"]',function(e){var t=l(this);t.attr("data-target")||e.preventDefault();var s=a(t),i=s.data("bs.collapse")?"toggle":t.data();r.call(s,i)})}(jQuery),$(".js-hide-filter").on("click",function(e){e.preventDefault();var t=$(this);$(".filter__input-group--add").hasClass("js-isVisible")?($(".filter__input-group--add").removeClass("js-isVisible"),t.removeClass("iSopened")):($(".filter__input-group--add").addClass("js-isVisible"),t.addClass("iSopened"))}),$("#counter").length){var t=0;$(window).scroll(function(){var e=$("#counter").offset().top-window.innerHeight;0==t&&$(window).scrollTop()>e&&($(".counter-value").each(function(){var e=$(this),t=e.attr("data-count");$({countNum:e.text()}).animate({countNum:t},{duration:2e3,easing:"swing",step:function(){e.text(Math.floor(this.countNum))},complete:function(){e.text(this.countNum),$(".statistics__card-text").addClass("isAnimated"),$(".history__card-text").addClass("isAnimated")}})}),t=1)})}if($(".js-header-menu").on("click",function(){$(".header__side").addClass("isOpened")}),$(".side-modal").on("click",function(e){$(e.target).closest(".side-modal__wrapper").length||($(".side-modal").removeClass("isOpened"),console.log("happens"))}),$(".item__img").click(function(){var e=$(this).attr("src");console.log(e),$(".image__container").css("background-image","url("+e+")")}),$("#modal-close-help").on("click",function(e){console.log("not happens"),$(this).closest(".js-modal").removeClass("isOpened")}),null!==document.getElementById("map")){function e(){var t=new ymaps.Map("map",{center:[55.76,37.64],zoom:10,controls:[]}),s=ymaps.templateLayoutFactory.createClass("<div class='map__zoom-block u-jc-sbu-fd-col'><div id='zoom-in' class='map__zoom u-jc-ce u-ai-ce'><svg class='svg' width='12px' height='12px' viewBox='0 0 12 12' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'><g id='Group' ><rect id='Rectangle-3' x='0' y='5' width='12' height='2'></rect><rect id='Rectangle-3' transform='translate(6.000000, 6.000000) rotate(90.000000) translate(-6.000000, -6.000000) ' x='0' y='5' width='12' height='2'></rect></g></svg></div><br><div id='zoom-out' class='map__zoom map__zoom--minus u-jc-ce u-ai-ce'><svg class='svg' width='8px' height='2px' viewBox='0 0 8 2' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'><rect id='map__minus' width='8' height='2'></rect></svg></div>",{build:function(){s.superclass.build.call(this),this.zoomInCallback=ymaps.util.bind(this.zoomIn,this),this.zoomOutCallback=ymaps.util.bind(this.zoomOut,this),$("#zoom-in").bind("click",this.zoomInCallback),$("#zoom-out").bind("click",this.zoomOutCallback)},clear:function(){$("#zoom-in").unbind("click",this.zoomInCallback),$("#zoom-out").unbind("click",this.zoomOutCallback),s.superclass.clear.call(this)},zoomIn:function(){var e=this.getData().control.getMap();e.setZoom(e.getZoom()+1,{checkZoomRange:!0})},zoomOut:function(){var e=this.getData().control.getMap();e.setZoom(e.getZoom()-1,{checkZoomRange:!0})}});function i(e){return{type:"FeatureCollection",features:e.map(function(e,t){return{id:t,type:"Feature",geometry:{type:"Point",coordinates:[e.lat,e.long]},properties:{iconCaption:e.serialNumber}}})}}function e(){return fetch("../js/test.json").then(function(e){return e.json()}).then(function(e){return i(e)})}$(window).on("resize",function(){var e=document.getElementById("map").offsetHeight/2-50;t.controls.remove("zoomControl"),t.controls.add("zoomControl",{layout:s,position:{left:"30px",top:e}})}).resize();var a=new ymaps.ObjectManager({clusterize:!0,gridSize:64,clusterIconLayout:"default#pieChart",clusterDisableClickZoom:!1});e().then(function(e){a.add(e)}),a.objects.options.set({iconLayout:"default#image",iconImageHref:"images/map__baloon.png",iconImageSize:[57,51],iconImageOffset:[-37,-50]}),t.geoObjects.add(a)}ymaps.ready(e)}else if(null!==document.getElementById("item-map")){ymaps.ready(e);var i=$("#item-map").attr("data-lng"),a=$("#item-map").attr("data-lat");function e(){var t=new ymaps.Map("item-map",{center:[i,a],zoom:13,controls:[]}),e=new ymaps.Placemark([i,a],{},{iconLayout:"default#image",iconImageHref:"images/map__baloon.png",iconImageSize:[57,51],iconImageOffset:[-37,-50]}),s=ymaps.templateLayoutFactory.createClass("<div class='map__zoom-block u-jc-sbu-fd-col'><div id='zoom-in' class='map__zoom u-jc-ce u-ai-ce'><svg class='svg' width='12px' height='12px' viewBox='0 0 12 12' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'><g id='Group' ><rect id='Rectangle-3' x='0' y='5' width='12' height='2'></rect><rect id='Rectangle-3' transform='translate(6.000000, 6.000000) rotate(90.000000) translate(-6.000000, -6.000000) ' x='0' y='5' width='12' height='2'></rect></g></svg></div><br><div id='zoom-out' class='map__zoom map__zoom--minus u-jc-ce u-ai-ce'><svg class='svg' width='8px' height='2px' viewBox='0 0 8 2' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'><rect id='map__minus' width='8' height='2'></rect></svg></div>",{build:function(){s.superclass.build.call(this),this.zoomInCallback=ymaps.util.bind(this.zoomIn,this),this.zoomOutCallback=ymaps.util.bind(this.zoomOut,this),$("#zoom-in").bind("click",this.zoomInCallback),$("#zoom-out").bind("click",this.zoomOutCallback)},clear:function(){$("#zoom-in").unbind("click",this.zoomInCallback),$("#zoom-out").unbind("click",this.zoomOutCallback),s.superclass.clear.call(this)},zoomIn:function(){var e=this.getData().control.getMap();e.setZoom(e.getZoom()+1,{checkZoomRange:!0})},zoomOut:function(){var e=this.getData().control.getMap();e.setZoom(e.getZoom()-1,{checkZoomRange:!0})}});$(window).on("resize",function(){var e=document.getElementById("item-map").offsetHeight/2-50;t.controls.remove("zoomControl"),t.controls.add("zoomControl",{layout:s,position:{left:"30px",top:e}})}).resize(),t.geoObjects.add(e)}}$("#modal-close-btn").on("click",function(){$(this).closest(".js-modal").removeClass("isOpened")}),$(".js-modal__btn").on("click",function(e){var t=$(this).attr("data-modal");$("#"+t).addClass("isOpened")}),$(window).on("resize",function(){if(null!==$(".scrollable-inner"))for(var e=0;e<$(".scrollable-inner").length;e++){var t=$(".scrollable-inner")[e],s=$(t).attr("data-iscroll"),i=$('.scrollable-parent[data-pscroll="'+s+'"]'),a=t.clientHeight;i.height(a)}}).resize(),$(window).on("scroll load",function(){var e=$(".js-header");60<=$(window).scrollTop()?e.addClass("sticked"):e.removeClass("sticked")}),$(".js-tab__item").on("click",function(e){var t=$(this);t.closest(".tab").find(".js-tab__item").removeClass("js-active"),t.addClass("js-active");var s=t.attr("data-tab");t.closest(".tab").find(".tab__block").removeClass("js-active"),$('[data-content="'+s+'"]').addClass("js-active")}),$.ajax({url:"./js/theme.json",dataType:"json",success:function(e){$(".side-modal__content").append('<ul class="side-modal__list"></ul>'),$.each(e,function(e,t){$(".side-modal__list").append('<li class="side-modal__theme"><a href="javascript:;" data-link="subtheme'+t.id+'" class="side-modal__theme-link js-open-subtheme">'+t.theme+"</a></li>")})}}),$(".js-toggle-item").click(function(){$(this).toggleClass("isActive")}),$(".js-select-btn").on("click",function(){var e=$(this),t=e.closest(".filter__input-block").find(".js-select-block");t.hasClass("isOpen")?(e.addClass("isClosed"),e.removeClass("isOpen"),t.removeClass("isOpen")):($(".js-select-block").removeClass("isOpen"),$(".js-select-btn").removeClass("isOpen"),e.addClass("isOpen"),t.addClass("isOpen"));var s=e.closest(".filter__input-block");s.find(".filter__empty").length||s.find(".js-filter-hidden").prop("required")&&(s.find(".js-filter-hidden").val()?(s.find(".filter__empty").remove(),e.removeClass("filter__danger")):(s.find(".filter__input-wrap").append("<span class='filter__empty'>Поле обязательно для заполнения</span>"),e.addClass("filter__danger")))}),$(".js-select-item").on("click",function(){var e=$(this);e.addClass("js-selected");var t=e.text(),s=e.attr("data-group");$('.js-select-btn[data-group="'+s+'"]').text(t),e.closest(".filter__input-block").find(".js-select-label").addClass("floated"),$(".js-select-btn.isOpen").addClass("isClosed"),$(".js-select-block.isOpen").removeClass("isOpen"),$(".js-select-btn.isOpen").removeClass("isOpen"),$('.js-filter-hidden[data-group="'+s+'"]').val(t);var i=e.closest(".filter__input-block");if(i.find(".js-filter-hidden").prop("required")){i.find(".js-filter-hidden").val()?(i.find(".filter__empty").remove(),$('.js-select-btn[data-group="'+s+'"]').removeClass("filter__danger")):(i.find(".filter__input-wrap").append("<span class='filter__empty'>Поле обязательно для заполнения</span>"),$('.js-select-btn[data-group="'+s+'"]').addClass("filter__danger"))}}),$(".js-select-btn.isOpen")&&$(document).on("click",function(e){if(!$(e.target).closest(".js-select-block.isOpen").length&&!$(e.target).closest(".js-select-btn.isOpen").length){$(".js-select-btn.isOpen").addClass("isClosed"),$(".js-select-block.isOpen").removeClass("isOpen"),$(".js-select-btn.isOpen").removeClass("isOpen");var t=$(".js-select-btn.isClosed").closest(".filter__input-block");t.find(".filter__empty").length||t.find(".js-filter-hidden").prop("required")&&(t.find(".js-filter-hidden").val()?(t.find(".filter__empty").remove(),$(".js-select-btn.isClosed").removeClass("filter__danger")):(t.find(".filter__input-wrap").append("<span class='filter__empty'>Поле обязательно для заполнения</span>"),$(".js-select-btn.isClosed").addClass("filter__danger")))}}),$(".filter__input").on("focus",function(){$(this).closest(".filter__input-wrap").find(".filter__floating-label").addClass("floated")}),$(".filter__input").on("blur",function(){var e,t,s=$(this),i=s.closest(".filter__input-wrap"),a=i.find(".filter__input");if(s.val()){var n=a.attr("name");if("name"===n)if(-1<a.val().indexOf(" "))i.addClass("validated"),a.hasClass("filter__danger")&&(a.removeClass("filter__danger"),i.find(".filter__empty").remove());else{i.removeClass("validated"),i.find(".filter__empty").remove();l="<span class='filter__empty'>Поле должно содержать Имя и Фамилию через пробел</span>";a.addClass("filter__danger"),i.append(l)}else if("email"===n)if(t=a.val(),/^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/.test(t))i.addClass("validated"),a.hasClass("filter__danger")&&(a.removeClass("filter__danger"),i.find(".filter__empty").remove());else{i.removeClass("validated"),i.find(".filter__empty").remove();l="<span class='filter__empty'>Email должен содержать латинские буквы, символы @ и .</span>";a.addClass("filter__danger"),i.append(l)}else if("tel"===n)if(e=a.val(),/^((8|\+7)[\- ]?)?(\(?\d{3}\)?[\- ]?)?[\d\- ]{10,14}$/.test(e))i.addClass("validated"),a.hasClass("filter__danger")&&(a.removeClass("filter__danger"),i.find(".filter__empty").remove());else{i.removeClass("validated"),i.find(".filter__empty").remove();l="<span class='filter__empty'>Номер телефона должен содержать от 10 до 14 цифр</span>";a.addClass("filter__danger"),i.append(l)}else a.removeClass("filter__danger"),i.find(".filter__empty").remove()}else{var l="<span class='filter__empty'>Поле обязательно для заполнения</span>";i.removeClass("validated"),i.find(".filter__floating-label").removeClass("floated"),s.prop("required")&&(a.hasClass("filter__danger")||(a.addClass("filter__danger"),i.append(l)))}})}),$(document).ajaxComplete(function(){$(".js-select-btn").on("click",function(){var e=$(this),t=e.closest(".filter__input-block").find(".js-select-block");t.hasClass("isOpen")?(e.addClass("isClosed"),e.removeClass("isOpen"),t.removeClass("isOpen")):($(".js-select-block").removeClass("isOpen"),$(".js-select-btn").removeClass("isOpen"),e.addClass("isOpen"),t.addClass("isOpen"));var s=e.closest(".filter__input-block");s.find(".filter__empty").length||s.find(".js-filter-hidden").prop("required")&&(s.find(".js-filter-hidden").val()?(s.find(".filter__empty").remove(),e.removeClass("filter__danger")):(s.find(".filter__input-wrap").append("<span class='filter__empty'>Поле обязательно для заполнения</span>"),e.addClass("filter__danger")))}),$(".js-select-item").on("click",function(){var e=$(this);e.addClass("js-selected");var t=e.text(),s=e.attr("data-group");$('.js-select-btn[data-group="'+s+'"]').text(t),e.closest(".filter__input-block").find(".js-select-label").addClass("floated"),$(".js-select-btn.isOpen").addClass("isClosed"),$(".js-select-block.isOpen").removeClass("isOpen"),$(".js-select-btn.isOpen").removeClass("isOpen"),$('.js-filter-hidden[data-group="'+s+'"]').val(t);var i=e.closest(".filter__input-block");if(i.find(".js-filter-hidden").prop("required")){i.find(".js-filter-hidden").val()?(i.find(".filter__empty").remove(),$('.js-select-btn[data-group="'+s+'"]').removeClass("filter__danger")):(i.find(".filter__input-wrap").append("<span class='filter__empty'>Поле обязательно для заполнения</span>"),$('.js-select-btn[data-group="'+s+'"]').addClass("filter__danger"))}}),$(".js-select-btn.isOpen")&&$(document).on("click",function(e){if(!$(e.target).closest(".js-select-block.isOpen").length&&!$(e.target).closest(".js-select-btn.isOpen").length){$(".js-select-btn.isOpen").addClass("isClosed"),$(".js-select-block.isOpen").removeClass("isOpen"),$(".js-select-btn.isOpen").removeClass("isOpen");var t=$(".js-select-btn.isClosed").closest(".filter__input-block");t.find(".filter__empty").length||t.find(".js-filter-hidden").prop("required")&&(t.find(".js-filter-hidden").val()?(t.find(".filter__empty").remove(),$(".js-select-btn.isClosed").removeClass("filter__danger")):(t.find(".filter__input-wrap").append("<span class='filter__empty'>Поле обязательно для заполнения</span>"),$(".js-select-btn.isClosed").addClass("filter__danger")))}}),$(".filter__input").on("focus",function(){$(this).closest(".filter__input-wrap").find(".filter__floating-label").addClass("floated")}),$(".filter__input").on("blur",function(){var e,t,s=$(this),i=s.closest(".filter__input-wrap"),a=i.find(".filter__input");if(s.val()){var n=a.attr("name");if("name"===n)if(-1<a.val().indexOf(" "))i.addClass("validated"),a.hasClass("filter__danger")&&(a.removeClass("filter__danger"),i.find(".filter__empty").remove());else{i.removeClass("validated"),i.find(".filter__empty").remove();l="<span class='filter__empty'>Поле должно содержать Имя и Фамилию через пробел</span>";a.addClass("filter__danger"),i.append(l)}else if("email"===n)if(t=a.val(),/^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/.test(t))i.addClass("validated"),a.hasClass("filter__danger")&&(a.removeClass("filter__danger"),i.find(".filter__empty").remove());else{i.removeClass("validated"),i.find(".filter__empty").remove();l="<span class='filter__empty'>Email должен содержать латинские буквы, символы @ и .</span>";a.addClass("filter__danger"),i.append(l)}else if("tel"===n)if(e=a.val(),/^((8|\+7)[\- ]?)?(\(?\d{3}\)?[\- ]?)?[\d\- ]{10,14}$/.test(e))i.addClass("validated"),a.hasClass("filter__danger")&&(a.removeClass("filter__danger"),i.find(".filter__empty").remove());else{i.removeClass("validated"),i.find(".filter__empty").remove();l="<span class='filter__empty'>Номер телефона должен содержать от 10 до 14 цифр</span>";a.addClass("filter__danger"),i.append(l)}else a.removeClass("filter__danger"),i.find(".filter__empty").remove()}else{var l="<span class='filter__empty'>Поле обязательно для заполнения</span>";i.removeClass("validated"),i.find(".filter__floating-label").removeClass("floated"),s.prop("required")&&(a.hasClass("filter__danger")||(a.addClass("filter__danger"),i.append(l)))}}),$(".js-open-subtheme-content").on("click",function(){var e=$(this),t=e.attr("data-link"),s=e.text();$(".side-modal__breadcrumbs").append('<li class="breadcrumbs__item"><a href="#" class="breadcrumbs__link">'+s+"</a></li>"),$.ajax({url:"./"+t+".html",dataType:"html",success:function(e){$(".side-modal__content").html(e)}})}),$(".js-open-subtheme").on("click",function(){var e=$(this),t=e.attr("data-link"),s=e.text();$(".side-modal__header-wrapper").html('<ul class="breadcrumbs__list side-modal__breadcrumbs u-jc-fs"><li class="breadcrumbs__item"><a href="#" class="breadcrumbs__link">Юридическая помощь</a></li></ul>'),$(".side-modal__breadcrumbs").append('<li class="breadcrumbs__item"><a href="#" class="breadcrumbs__link">'+s+"</a></li>"),$.ajax({url:"./js/"+t+".json",dataType:"json",success:function(e){$(".side-modal__content").html('<ul class="side-modal__list"></ul>'),$.each(e,function(e,t){$(".side-modal__list").append('<li class="side-modal__theme"><a href="javascript:;" data-link="subtheme'+t.id+'" class="side-modal__theme-link js-open-subtheme-content">'+t.theme+"</a></li>")})}})}),$(".js-btn-yes").on("click",function(){$.ajax({url:"./subtheme_yes.html",dataType:"html",success:function(e){$(".subtheme__block").html(e)}})}),$(".js-btn-no").on("click",function(){$.ajax({url:"./subtheme_form.html",dataType:"html",success:function(e){$(".subtheme__block").html(e)}})})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
