$(document).ready(function(){if(function(a){"use strict";a.fn.emulateTransitionEnd=function(e){var t=!1,s=this;a(this).one("bsTransitionEnd",function(){t=!0});return setTimeout(function(){t||a(s).trigger(a.support.transition.end)},e),this},a(function(){a.support.transition=function(){var e=document.createElement("bootstrap"),t={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"};for(var s in t)if(void 0!==e.style[s])return{end:t[s]};return!1}(),a.support.transition&&(a.event.special.bsTransitionEnd={bindType:a.support.transition.end,delegateType:a.support.transition.end,handle:function(e){if(a(e.target).is(this))return e.handleObj.handler.apply(this,arguments)}})})}(jQuery),function(m){"use strict";var p=function(e,t){this.$element=m(e),this.$indicators=this.$element.find(".carousel-indicators"),this.options=t,this.paused=null,this.sliding=null,this.interval=null,this.$active=null,this.$items=null,this.options.keyboard&&this.$element.on("keydown.bs.carousel",m.proxy(this.keydown,this)),"hover"==this.options.pause&&!("ontouchstart"in document.documentElement)&&this.$element.on("mouseenter.bs.carousel",m.proxy(this.pause,this)).on("mouseleave.bs.carousel",m.proxy(this.cycle,this))};function l(i){return this.each(function(){var e=m(this),t=e.data("bs.carousel"),s=m.extend({},p.DEFAULTS,e.data(),"object"==typeof i&&i),a="string"==typeof i?i:s.slide;t||e.data("bs.carousel",t=new p(this,s)),"number"==typeof i?t.to(i):a?t[a]():s.interval&&t.pause().cycle()})}p.VERSION="3.3.5",p.TRANSITION_DURATION=600,p.DEFAULTS={interval:5e3,pause:"hover",wrap:!0,keyboard:!0},p.prototype.keydown=function(e){if(!/input|textarea/i.test(e.target.tagName)){switch(e.which){case 37:this.prev();break;case 39:this.next();break;default:return}e.preventDefault()}},p.prototype.cycle=function(e){return e||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(m.proxy(this.next,this),this.options.interval)),this},p.prototype.getItemIndex=function(e){return this.$items=e.parent().children(".item"),this.$items.index(e||this.$active)},p.prototype.getItemForDirection=function(e,t){var s=this.getItemIndex(t);if(("prev"==e&&0===s||"next"==e&&s==this.$items.length-1)&&!this.options.wrap)return t;var a=(s+("prev"==e?-1:1))%this.$items.length;return this.$items.eq(a)},p.prototype.to=function(e){var t=this,s=this.getItemIndex(this.$active=this.$element.find(".item.active"));if(!(e>this.$items.length-1||e<0))return this.sliding?this.$element.one("slid.bs.carousel",function(){t.to(e)}):s==e?this.pause().cycle():this.slide(s<e?"next":"prev",this.$items.eq(e))},p.prototype.pause=function(e){return e||(this.paused=!0),this.$element.find(".next, .prev").length&&m.support.transition&&(this.$element.trigger(m.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},p.prototype.next=function(){if(!this.sliding)return this.slide("next")},p.prototype.prev=function(){if(!this.sliding)return this.slide("prev")},p.prototype.slide=function(e,t){var s=this.$element.find(".item.active"),a=t||this.getItemForDirection(e,s),i=this.interval,n="next"==e?"left":"right",l=this;if(a.hasClass("active"))return this.sliding=!1;var o=a[0],r=m.Event("slide.bs.carousel",{relatedTarget:o,direction:n});if(this.$element.trigger(r),!r.isDefaultPrevented()){if(this.sliding=!0,i&&this.pause(),this.$indicators.length){this.$indicators.find(".active").removeClass("active");var d=m(this.$indicators.children()[this.getItemIndex(a)]);d&&d.addClass("active")}var c=m.Event("slid.bs.carousel",{relatedTarget:o,direction:n});return m.support.transition&&this.$element.hasClass("slide")?(a.addClass(e),a[0].offsetWidth,s.addClass(n),a.addClass(n),s.one("bsTransitionEnd",function(){a.removeClass([e,n].join(" ")).addClass("active"),s.removeClass(["active",n].join(" ")),l.sliding=!1,setTimeout(function(){l.$element.trigger(c)},0)}).emulateTransitionEnd(p.TRANSITION_DURATION)):(s.removeClass("active"),a.addClass("active"),this.sliding=!1,this.$element.trigger(c)),i&&this.cycle(),this}};var e=m.fn.carousel;m.fn.carousel=l,m.fn.carousel.Constructor=p,m.fn.carousel.noConflict=function(){return m.fn.carousel=e,this};var t=function(e){var t,s=m(this),a=m(s.attr("data-target")||(t=s.attr("href"))&&t.replace(/.*(?=#[^\s]+$)/,""));if(a.hasClass("carousel")){var i=m.extend({},a.data(),s.data()),n=s.attr("data-slide-to");n&&(i.interval=!1),l.call(a,i),n&&a.data("bs.carousel").to(n),e.preventDefault()}};m(document).on("click.bs.carousel.data-api","[data-slide]",t).on("click.bs.carousel.data-api","[data-slide-to]",t),m(window).on("load",function(){m('[data-ride="carousel"]').each(function(){var e=m(this);l.call(e,e.data())})})}(jQuery),$(".carousel-item-image .item").each(function(){for(var e=$(this),t=1;t<5;t++)(e=e.next()).length||(e=$(this).siblings(":first")),e.children(":first-child").clone().addClass("cloneditem-"+t).appendTo($(this))}),$(".carousel").carousel({interval:0}),$("#carousel-item-image").carousel({interval:0}),$(".benefits__item").on("click",function(){var e=$(this),t=e.attr("data-name"),s=e.closest(".filter__checkbox-wrap").find("#"+t);e.hasClass("isActive")?s.val(s.data("y")):s.val(s.data("n"))}),"undefined"==typeof jQuery)throw new Error("Bootstrap's JavaScript requires jQuery");if(function(e){"use strict";var t=jQuery.fn.jquery.split(" ")[0].split(".");if(t[0]<2&&t[1]<9||1==t[0]&&9==t[1]&&t[2]<1||3<t[0])throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 4")}(),function(l){"use strict";var o=function(e,t){this.$element=l(e),this.options=l.extend({},o.DEFAULTS,t),this.$trigger=l('[data-toggle="collapse"][href="#'+e.id+'"],[data-toggle="collapse"][data-target="#'+e.id+'"]'),this.transitioning=null,this.options.parent?this.$parent=this.getParent():this.addAriaAndCollapsedClass(this.$element,this.$trigger),this.options.toggle&&this.toggle()};function i(e){var t,s=e.attr("data-target")||(t=e.attr("href"))&&t.replace(/.*(?=#[^\s]+$)/,"");return l(s)}function r(a){return this.each(function(){var e=l(this),t=e.data("bs.collapse"),s=l.extend({},o.DEFAULTS,e.data(),"object"==typeof a&&a);!t&&s.toggle&&/show|hide/.test(a)&&(s.toggle=!1),t||e.data("bs.collapse",t=new o(this,s)),"string"==typeof a&&t[a]()})}o.VERSION="3.3.7",o.TRANSITION_DURATION=350,o.DEFAULTS={toggle:!0},o.prototype.dimension=function(){return this.$element.hasClass("width")?"width":"height"},o.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass("in")){var e,t=this.$parent&&this.$parent.children(".collapse__tab").children(".in, .collapsing");if(!(t&&t.length&&(e=t.data("bs.collapse"))&&e.transitioning)){var s=l.Event("show.bs.collapse");if(this.$element.trigger(s),!s.isDefaultPrevented()){t&&t.length&&(r.call(t,"hide"),e||t.data("bs.collapse",null));var a=this.dimension();this.$element.removeClass("collapse").addClass("collapsing")[a](0).attr("aria-expanded",!0),this.$trigger.removeClass("collapsed").attr("aria-expanded",!0),this.transitioning=1;var i=function(){this.$element.removeClass("collapsing").addClass("collapse in")[a](""),this.transitioning=0,this.$element.trigger("shown.bs.collapse")};if(!l.support.transition)return i.call(this);var n=l.camelCase(["scroll",a].join("-"));this.$element.one("bsTransitionEnd",l.proxy(i,this)).emulateTransitionEnd(o.TRANSITION_DURATION)[a](this.$element[0][n])}}}},o.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass("in")){var e=l.Event("hide.bs.collapse");if(this.$element.trigger(e),!e.isDefaultPrevented()){var t=this.dimension();this.$element[t](this.$element[t]())[0].offsetHeight,this.$element.addClass("collapsing").removeClass("collapse in").attr("aria-expanded",!1),this.$trigger.addClass("collapsed").attr("aria-expanded",!1),this.transitioning=1;var s=function(){this.transitioning=0,this.$element.removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse")};if(!l.support.transition)return s.call(this);this.$element[t](0).one("bsTransitionEnd",l.proxy(s,this)).emulateTransitionEnd(o.TRANSITION_DURATION)}}},o.prototype.toggle=function(){this[this.$element.hasClass("in")?"hide":"show"]()},o.prototype.getParent=function(){return l(this.options.parent).find('[data-toggle="collapse"][data-parent="'+this.options.parent+'"]').each(l.proxy(function(e,t){var s=l(t);this.addAriaAndCollapsedClass(i(s),s)},this)).end()},o.prototype.addAriaAndCollapsedClass=function(e,t){var s=e.hasClass("in");e.attr("aria-expanded",s),t.toggleClass("collapsed",!s).attr("aria-expanded",s)};var e=l.fn.collapse;l.fn.collapse=r,l.fn.collapse.Constructor=o,l.fn.collapse.noConflict=function(){return l.fn.collapse=e,this},l(document).on("click.bs.collapse.data-api",'[data-toggle="collapse"]',function(e){var t=l(this);t.attr("data-target")||e.preventDefault();var s=i(t),a=s.data("bs.collapse")?"toggle":t.data();r.call(s,a)})}(jQuery),$(".js-hide-filter").on("click",function(e){e.preventDefault();var t=$(this);$(".filter__input-group--add").hasClass("js-isVisible")?($(".filter__input-group--add").removeClass("js-isVisible"),t.removeClass("iSopened")):($(".filter__input-group--add").addClass("js-isVisible"),t.addClass("iSopened"))}),$("#counter").length){var t=0;$(window).scroll(function(){var e=$("#counter").offset().top-window.innerHeight;0==t&&$(window).scrollTop()>e&&($(".counter-value").each(function(){var e=$(this),t=e.attr("data-count");$({countNum:e.text()}).animate({countNum:t},{duration:2e3,easing:"swing",step:function(){e.text(Math.floor(this.countNum))},complete:function(){e.text(this.countNum),$(".statistics__card-text").addClass("isAnimated"),$(".history__card-text").addClass("isAnimated")}})}),t=1)})}if(function(){function a(s,a){$.ajax({data:{item:s,action:a},url:config.favoriteMod,dataType:"json",method:"POST",success:function(e){if(e.success){var t=$(".js-add_favorite[data-item="+s+"]");"add"==a&&t.addClass("is-favorite"),"remove"==a&&t.removeClass("is-favorite"),$(".js-top_show_izbrannoe")[e.empty?"removeClass":"addClass"]("hover")}}})}$("body").on("click",".js-remove_favorite",function(e){e.preventDefault();var t=$(this);a(t.data("item"),"remove"),t.closest(".line").remove(),$("#izbrannoe .line").length||$(".js-izbrannoe_empty").show()}),$('.js-modal__btn[data-modal="izbrannoe"]').on("click",function(){$.ajax({url:config.favoriteList,dataType:"html",success:function(e){$('#izbrannoe .tab__block[data-content="list"]').html(e)}})}),$("body").on("click",".js-add_favorite",function(e){e.preventDefault();var t=$(this);if(t.hasClass("is-favorite"))var s="remove";else s="add";a(t.data("item"),s)})}(),$("#form-egrn").off("submit").on("submit",function(e){$("#egrn").addClass("isOpened"),e.preventDefault();var t=this;$.ajax({data:$(t).serialize(),method:t.method,url:t.action,dataType:"html",success:function(e){$("#egrn .modal__content").html(e),t.reset()}})}),$('.js-modal__btn[data-modal="employee"]').on("click",function(){var e=$(this).attr("data-name");$.ajax({url:config.empName+e,dataType:"html",success:function(e){$(".modal__content").html(e)}})}),$("#consult form,#form-otzyv,#sell form").off("submit").on("submit",function(e){e.preventDefault();var t=this;return $.ajax({data:$(t).serialize(),method:t.method,url:t.action,dataType:"html",success:function(e){$($(t).data("cont")+" .modal__content").html(e)},error:function(e){$($(t).data("cont")+" .modal__content").html(data)}}),!1}),$("#contacts").off("submit").on("submit",function(e){$("#contacts-modal").addClass("isOpened"),e.preventDefault();var t=this;$.ajax({data:$(t).serialize(),method:t.method,url:t.action,dataType:"html",success:function(e){$(".modal__content").html(e),t.reset()}})}),$("#help_sidebar_form").off("submit").on("submit",function(e){$("#help-modal").addClass("isOpened"),e.preventDefault();var t=this;$.ajax({data:$(t).serialize(),method:t.method,url:t.action,dataType:"html",success:function(e){$(".modal__content").html(e),t.reset()}})}),$(".dropzone-images").each(function(){var e=$(this),a=e.data("param");e.addClass("dropzone").dropzone({addRemoveLinks:!0,acceptedFiles:"image/*",clickable:!0,thumbnailWidth:120,thumbnailHeight:120,maxFiles:e.data("maxfiles"),createImageThumbnails:!0,paramName:"file",url:e.data("upload"),dictRemoveFile:"Удаление фотографии",dictDefaultMessage:"Перетащите сюда фотографии или кликните<br> для загрузки файлов<br><br>              (максимум "+e.data("maxfiles")+" фотографий)",dictFileTooBig:"Превышен допустимый размер файла: {{maxFilesize}} Мб",dictMaxFilesExceeded:"Превышено максимальное кол-во фотографий для загрузки: {{maxFiles}}",dictInvalidFileType:"Вы не можете добавить файлы этого типа",dictCancelUpload:"Отменить загрузку",dictUploadCanceled:"Загрузка отменена",maxFilesize:2,success:function(e,t){var s=$(e.previewElement);t.added.forEach(function(e){s.append('<input type="hidden" name="'+a+'[]" value="'+e+'">')})}})}),$(".js-tab-change-value").on("click",function(){var e=$(this);e.closest(".tab").find(".js-tab-change-value").removeClass("js-active"),e.addClass("js-active"),$(e.data("form")).removeClass().addClass("mode-"+e.data("value")).find(e.data("input")).val(e.data("value"))}),$(".js-header-menu").on("click",function(){$(".header__side").addClass("isOpened")}),$(".side-modal").on("click",function(e){$(e.target).closest(".side-modal__wrapper").length||$(".side-modal").removeClass("isOpened")}),$("#modal-close-menu").on("click",function(e){$(this).closest(".side-modal").removeClass("isOpened")}),$(".history__wrapper").length){var s=0,e=function(){var e=$(".history__wrapper").offset().top-window.innerHeight;0==s&&$(window).scrollTop()>e&&(setTimeout(function(){$(".history__card-header").addClass("isAnimated"),setTimeout(function(){$(".history__card-text").addClass("isAnimated")},1e3)},500),s=1)};$(window).scroll(e),e()}if($(".js-select-btn").each(function(){var t=$(this),s=t.closest(".filter__input-wrap"),a=s.find("input").val();s.find(".js-select-block .js-select-item").removeClass("js-selected").each(function(){var e=$(this);if(a==e.data("value"))return t.text(e.text()),e.addClass("js-selected"),s.find(".filter__floating-label").addClass("floated"),!1})}),$(".js-select-btn").on("click",function(){var e=$(this),t=e.closest(".filter__input-block").find(".js-select-block");t.hasClass("isOpen")?(e.addClass("isClosed"),e.removeClass("isOpen"),t.removeClass("isOpen")):($(".js-select-block").removeClass("isOpen"),$(".js-select-btn").removeClass("isOpen"),e.addClass("isOpen"),t.addClass("isOpen"));var s=e.closest(".filter__input-block");s.find(".filter__empty").length||s.find(".js-filter-hidden").prop("required")&&(s.find(".js-filter-hidden").val()?(s.find(".filter__empty").remove(),e.removeClass("filter__danger")):(s.find(".filter__input-wrap").append("<span class='filter__empty'>Поле обязательно для заполнения</span>"),e.addClass("filter__danger")))}),$(".js-select-item").on("click",function(){var e=$(this);e.addClass("js-selected");var t=e.text(),s=e.data("value"),a=e.attr("data-group");$('.js-select-btn[data-group="'+a+'"]').text(t),e.closest(".filter__input-block").find(".js-select-label").addClass("floated"),$(".js-select-btn.isOpen").addClass("isClosed"),$(".js-select-block.isOpen").removeClass("isOpen"),$(".js-select-btn.isOpen").removeClass("isOpen"),$('.js-filter-hidden[data-group="'+a+'"]').val(s);var i=e.closest(".filter__input-block");if(i.find(".js-filter-hidden").prop("required")){i.find(".js-filter-hidden").val()?(i.find(".filter__empty").remove(),$('.js-select-btn[data-group="'+a+'"]').removeClass("filter__danger")):(i.find(".filter__input-wrap").append("<span class='filter__empty'>Поле обязательно для заполнения</span>"),$('.js-select-btn[data-group="'+a+'"]').addClass("filter__danger"))}}),0<$(".js-select-btn.isOpen").length&&$(document).on("click",function(e){if(!$(e.target).closest(".js-select-block.isOpen").length&&!$(e.target).closest(".js-select-btn.isOpen").length){$(".js-select-btn.isOpen").addClass("isClosed"),$(".js-select-block.isOpen").removeClass("isOpen"),$(".js-select-btn.isOpen").removeClass("isOpen");var t=$(".js-select-btn.isClosed").closest(".filter__input-block");t.find(".filter__empty").length||t.find(".js-filter-hidden").prop("required")&&(t.find(".js-filter-hidden").val()?(t.find(".filter__empty").remove(),$(".js-select-btn.isClosed").removeClass("filter__danger")):(t.find(".filter__input-wrap").append("<span class='filter__empty'>Поле обязательно для заполнения</span>"),$(".js-select-btn.isClosed").addClass("filter__danger")))}}),$("body").on("focus",".filter__input",function(){$(this).closest(".filter__input-wrap").find(".filter__floating-label").addClass("floated")}),$("body").on("blur",".filter__input",function(){var e,t,s=$(this),a=s.closest(".filter__input-wrap"),i=a.find(".filter__input");if(s.val()){var n=i.data("validate");if("name"===n)if(-1<i.val().indexOf(" "))a.addClass("validated"),i.hasClass("filter__danger")&&(i.removeClass("filter__danger"),a.find(".filter__empty").remove());else{a.removeClass("validated"),a.find(".filter__empty").remove();l="<span class='filter__empty'>Поле должно содержать Имя и Фамилию через пробел</span>";i.addClass("filter__danger"),a.append(l)}else if("email"===n)if(t=i.val(),/^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/.test(t))a.addClass("validated"),i.hasClass("filter__danger")&&(i.removeClass("filter__danger"),a.find(".filter__empty").remove());else{a.removeClass("validated"),a.find(".filter__empty").remove();l="<span class='filter__empty'>Email должен содержать латинские буквы, символы @ и .</span>";i.addClass("filter__danger"),a.append(l)}else if("tel"===n)if(e=i.val(),/^((8|\+7)[\- ]?)?(\(?\d{3}\)?[\- ]?)?[\d\- ]{10,14}$/.test(e))a.addClass("validated"),i.hasClass("filter__danger")&&(i.removeClass("filter__danger"),a.find(".filter__empty").remove());else{a.removeClass("validated"),a.find(".filter__empty").remove();l="<span class='filter__empty'>Номер телефона должен содержать от 10 до 14 цифр</span>";i.addClass("filter__danger"),a.append(l)}else i.removeClass("filter__danger"),a.find(".filter__empty").remove()}else{var l="<span class='filter__empty'>Поле обязательно для заполнения</span>";a.removeClass("validated"),a.find(".filter__floating-label").removeClass("floated"),s.prop("required")&&(i.hasClass("filter__danger")||(i.addClass("filter__danger"),a.append(l)))}}),$(".item__img").click(function(){var e=$(this).attr("src");$(".image__container").css("background-image","url("+e+")")}),$("#modal-close-help").on("click",function(e){$(this).closest(".js-modal").removeClass("isOpened")}),null!==document.getElementById("map")){var a=$("#map").attr("data-lng"),i=$("#map").attr("data-lat");function n(){var n=new ymaps.Map("map",{center:[a,i],zoom:10,controls:[]}),t=ymaps.templateLayoutFactory.createClass("<div class='map__zoom-block u-jc-sbu-fd-col'><div id='zoom-in' class='map__zoom u-jc-ce u-ai-ce'><svg class='svg' width='12px' height='12px' viewBox='0 0 12 12' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'><g id='Group' ><rect id='Rectangle-3' x='0' y='5' width='12' height='2'></rect><rect id='Rectangle-3' transform='translate(6.000000, 6.000000) rotate(90.000000) translate(-6.000000, -6.000000) ' x='0' y='5' width='12' height='2'></rect></g></svg></div><br><div id='zoom-out' class='map__zoom map__zoom--minus u-jc-ce u-ai-ce'><svg class='svg' width='8px' height='2px' viewBox='0 0 8 2' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'><rect id='map__minus' width='8' height='2'></rect></svg></div>",{build:function(){t.superclass.build.call(this),this.zoomInCallback=ymaps.util.bind(this.zoomIn,this),this.zoomOutCallback=ymaps.util.bind(this.zoomOut,this),$("#zoom-in").bind("click",this.zoomInCallback),$("#zoom-out").bind("click",this.zoomOutCallback)},clear:function(){$("#zoom-in").unbind("click",this.zoomInCallback),$("#zoom-out").unbind("click",this.zoomOutCallback),t.superclass.clear.call(this)},zoomIn:function(){var e=this.getData().control.getMap();e.setZoom(e.getZoom()+1,{checkZoomRange:!0})},zoomOut:function(){var e=this.getData().control.getMap();e.setZoom(e.getZoom()-1,{checkZoomRange:!0})}});function s(s,a){function t(e){return{type:"FeatureCollection",features:e.map(function(e,t){return{id:t,type:"Feature",geometry:{type:"Point",coordinates:[e.lat,e.long]},properties:{iconCaption:e.serialNumber,balloonContent:'<a target="_blank" class="" href="'+e.link+'"><div class="balloon__image-block"><div class="balloon__image" style="background-image:url('+e.image+')"></div></div><div class="balloon__inner"><p class="balloon__price">'+e.price+'</p><ul class="balloon__list"><li class="balloon__item ">'+e.rooms+'</li><li class="balloon__item ">'+e.square+'&nbsp;м<sup>2</sup></li><li class="balloon__item ">'+e.floor+'</li></ul><p class="balloon__address">'+e.address+"</p></div></a>"}}})}}function e(){return new Promise(function(e,t){$.ajax({data:a,method:"GET",url:s,dataType:"json",success:e,error:t})}).then(function(e){return t(e)})}var i=new ymaps.ObjectManager({clusterize:!0,gridSize:64,clusterIconLayout:"default#pieChart",clusterDisableClickZoom:!1});e().then(function(e){i.add(e)}),i.objects.options.set({iconLayout:"default#image",iconImageHref:config.mapBaloon,iconImageSize:[57,51],iconImageOffset:[-18,-45]}),n.geoObjects.add(i)}$(window).on("resize",function(){var e=document.getElementById("map").offsetHeight/2-50;n.controls.remove("zoomControl"),n.controls.add("zoomControl",{layout:t,position:{left:"30px",top:e}})}).resize(),s(config.mapLinks,null),$(".js-map-filter-form").submit(function(){var e=config.mapNewLinks,t=$(this).serialize();return n.geoObjects.removeAll(),s(e,t),!1})}ymaps.ready(n)}else if(null!==document.getElementById("item-map")){ymaps.ready(n);a=$("#item-map").attr("data-lng"),i=$("#item-map").attr("data-lat");function n(){var t=new ymaps.Map("item-map",{center:[a,i],zoom:13,controls:[]}),e=new ymaps.Placemark([a,i],{},{iconLayout:"default#image",iconImageHref:config.mapBaloon,iconImageSize:[57,51],iconImageOffset:[-37,-50]}),s=ymaps.templateLayoutFactory.createClass("<div class='map__zoom-block u-jc-sbu-fd-col'><div id='zoom-in' class='map__zoom u-jc-ce u-ai-ce'><svg class='svg' width='12px' height='12px' viewBox='0 0 12 12' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'><g id='Group' ><rect id='Rectangle-3' x='0' y='5' width='12' height='2'></rect><rect id='Rectangle-3' transform='translate(6.000000, 6.000000) rotate(90.000000) translate(-6.000000, -6.000000) ' x='0' y='5' width='12' height='2'></rect></g></svg></div><br><div id='zoom-out' class='map__zoom map__zoom--minus u-jc-ce u-ai-ce'><svg class='svg' width='8px' height='2px' viewBox='0 0 8 2' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'><rect id='map__minus' width='8' height='2'></rect></svg></div>",{build:function(){s.superclass.build.call(this),this.zoomInCallback=ymaps.util.bind(this.zoomIn,this),this.zoomOutCallback=ymaps.util.bind(this.zoomOut,this),$("#zoom-in").bind("click",this.zoomInCallback),$("#zoom-out").bind("click",this.zoomOutCallback)},clear:function(){$("#zoom-in").unbind("click",this.zoomInCallback),$("#zoom-out").unbind("click",this.zoomOutCallback),s.superclass.clear.call(this)},zoomIn:function(){var e=this.getData().control.getMap();e.setZoom(e.getZoom()+1,{checkZoomRange:!0})},zoomOut:function(){var e=this.getData().control.getMap();e.setZoom(e.getZoom()-1,{checkZoomRange:!0})}});$(window).on("resize",function(){var e=document.getElementById("item-map").offsetHeight/2-50;t.controls.remove("zoomControl"),t.controls.add("zoomControl",{layout:s,position:{left:"30px",top:e}})}).resize(),t.geoObjects.add(e)}}$(".js-modal-close-btn").on("click",function(){$(this).closest(".js-modal").removeClass("isOpened")}),$(".js-modal__btn").on("click",function(e){var t=$(this).attr("data-modal");$("#"+t).addClass("isOpened")}),$(window).on("resize",function(){if(null!==$(".scrollable-inner"))for(var e=0;e<$(".scrollable-inner").length;e++){var t=$(".scrollable-inner")[e],s=$(t).attr("data-iscroll"),a=$('.scrollable-parent[data-pscroll="'+s+'"]'),i=t.clientHeight;a.height(i)}}).resize(),$(window).on("scroll load",function(){var e=$(".js-header");60<=$(window).scrollTop()?e.addClass("sticked"):e.removeClass("sticked")}),$(".js-tab__item").on("click",function(e){var t=$(this);t.closest(".tab").find(".js-tab__item").removeClass("js-active"),t.addClass("js-active");var s=t.attr("data-tab");t.closest(".tab").find(".tab__block").removeClass("js-active"),$('[data-content="'+s+'"]').addClass("js-active")}),$('.js-modal__btn[data-modal="help"]').on("click",function(){$.ajax({url:config.themesList,dataType:"json",success:function(e){$(".side-modal__content").empty(),$(".side-modal__content").append('<ul class="side-modal__list side-modal__list--help"></ul>'),$.each(e,function(e,t){$(".side-modal__list--help").append('<li class="side-modal__theme js-open-subtheme" data-attr="'+config.themeLink+t.id+'"><a href="javascript:;" class="side-modal__theme-link">'+t.theme+"</a></li>")})}})}),$(".js-toggle-item").click(function(){$(this).toggleClass("isActive")})}),$(document).ajaxComplete(function(){$(".js-select-btn").off("click").on("click",function(){var e=$(this),t=e.closest(".filter__input-block").find(".js-select-block");t.hasClass("isOpen")?(e.addClass("isClosed"),e.removeClass("isOpen"),t.removeClass("isOpen")):($(".js-select-block").removeClass("isOpen"),$(".js-select-btn").removeClass("isOpen"),e.addClass("isOpen"),t.addClass("isOpen"));var s=e.closest(".filter__input-block");s.find(".filter__empty").length||s.find(".js-filter-hidden").prop("required")&&(s.find(".js-filter-hidden").val()?(s.find(".filter__empty").remove(),e.removeClass("filter__danger")):(s.find(".filter__input-wrap").append("<span class='filter__empty'>Поле обязательно для заполнения</span>"),e.addClass("filter__danger")))}),$(".js-select-item").off("click").on("click",function(){var e=$(this);e.addClass("js-selected");var t=e.text(),s=e.data("value"),a=e.attr("data-group");$('.js-select-btn[data-group="'+a+'"]').text(t),e.closest(".filter__input-block").find(".js-select-label").addClass("floated"),$(".js-select-btn.isOpen").addClass("isClosed"),$(".js-select-block.isOpen").removeClass("isOpen"),$(".js-select-btn.isOpen").removeClass("isOpen"),$('.js-filter-hidden[data-group="'+a+'"]').val(s);var i=e.closest(".filter__input-block");if(i.find(".js-filter-hidden").prop("required")){i.find(".js-filter-hidden").val()?(i.find(".filter__empty").remove(),$('.js-select-btn[data-group="'+a+'"]').removeClass("filter__danger")):(i.find(".filter__input-wrap").append("<span class='filter__empty'>Поле обязательно для заполнения</span>"),$('.js-select-btn[data-group="'+a+'"]').addClass("filter__danger"))}}),0<$(".js-select-btn.isOpen").length&&$(document).on("click",function(e){if(!$(e.target).closest(".js-select-block.isOpen").length&&!$(e.target).closest(".js-select-btn.isOpen").length){$(".js-select-btn.isOpen").addClass("isClosed"),$(".js-select-block.isOpen").removeClass("isOpen"),$(".js-select-btn.isOpen").removeClass("isOpen");var t=$(".js-select-btn.isClosed").closest(".filter__input-block");t.find(".filter__empty").length||t.find(".js-filter-hidden").prop("required")&&(t.find(".js-filter-hidden").val()?(t.find(".filter__empty").remove(),$(".js-select-btn.isClosed").removeClass("filter__danger")):(t.find(".filter__input-wrap").append("<span class='filter__empty'>Поле обязательно для заполнения</span>"),$(".js-select-btn.isClosed").addClass("filter__danger")))}}),$(".filter__input").on("focus",function(){$(this).closest(".filter__input-wrap").find(".filter__floating-label").addClass("floated")}),$(".filter__input").on("blur",function(){var e,t,s=$(this),a=s.closest(".filter__input-wrap"),i=a.find(".filter__input");if(s.val()){var n=i.attr("name");if("name"===n||"name_buy"===n)if(-1<i.val().indexOf(" "))a.addClass("validated"),i.hasClass("filter__danger")&&(i.removeClass("filter__danger"),a.find(".filter__empty").remove());else{a.removeClass("validated"),a.find(".filter__empty").remove();l="<span class='filter__empty'>Поле должно содержать Имя и Фамилию через пробел</span>";i.addClass("filter__danger"),a.append(l)}else if("email"===n||"email_buy"===n)if(t=i.val(),/^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/.test(t))a.addClass("validated"),i.hasClass("filter__danger")&&(i.removeClass("filter__danger"),a.find(".filter__empty").remove());else{a.removeClass("validated"),a.find(".filter__empty").remove();l="<span class='filter__empty'>Email должен содержать латинские буквы, символы @ и .</span>";i.addClass("filter__danger"),a.append(l)}else if("tel"===n||"tel_buy"===n)if(e=i.val(),/^((8|\+7)[\- ]?)?(\(?\d{3}\)?[\- ]?)?[\d\- ]{10,14}$/.test(e))a.addClass("validated"),i.hasClass("filter__danger")&&(i.removeClass("filter__danger"),a.find(".filter__empty").remove());else{a.removeClass("validated"),a.find(".filter__empty").remove();l="<span class='filter__empty'>Номер телефона должен содержать от 10 до 14 цифр</span>";i.addClass("filter__danger"),a.append(l)}else i.removeClass("filter__danger"),a.find(".filter__empty").remove()}else{var l="<span class='filter__empty'>Поле обязательно для заполнения</span>";a.removeClass("validated"),a.find(".filter__floating-label").removeClass("floated"),s.prop("required")&&(i.hasClass("filter__danger")||(i.addClass("filter__danger"),a.append(l)))}}),$(".js-open-subtheme-content").on("click",function(){var e=$(this),t=e.attr("data-attr"),s=e.text();$(".side-modal__breadcrumbs").append('<li class="breadcrumbs__item"><a href="#" class="breadcrumbs__link breadcrumbs__link--modal">'+s+"</a></li>"),$.ajax({url:config.subthemeContent+t,dataType:"html",success:function(e){$(".side-modal__content").html(e)}})}),$(".js-open-subtheme").on("click",function(){var e=$(this),t=e.attr("data-attr"),s=e.text();$(".side-modal__header-wrapper").html('<ul class="breadcrumbs__list side-modal__breadcrumbs u-jc-fs"><li class="breadcrumbs__item"><a href="javascript:;" class="breadcrumbs__link js-breadcrumbs__link-main breadcrumbs__link--modal">Юридическая помощь</a></li></ul>'),$(".side-modal__breadcrumbs").append('<li class="breadcrumbs__item"><a href="#" class="breadcrumbs__link breadcrumbs__link--modal js-breadcrumbs__link-topic" data-prev="'+t+'">'+s+"</a></li>"),$.ajax({url:config.subthemeList+t,dataType:"json",success:function(e){$(".side-modal__content").html('<ul class="side-modal__list side-modal__list--help"></ul>'),$.each(e,function(e,t){$(".side-modal__list--help").append('<li class="side-modal__theme js-open-subtheme-content" data-attr="'+config.subthemeLink+t.id+'"><a href="javascript:;" class="side-modal__theme-link ">'+t.theme+"</a></li>")})}})}),$(".js-breadcrumbs__link-main").on("click",function(){$.ajax({url:config.themesList,dataType:"json",success:function(e){$(".side-modal__content").empty(),$(".side-modal__content").append('<ul class="side-modal__list side-modal__list--help"></ul>'),$.each(e,function(e,t){$(".side-modal__list--help").append('<li class="side-modal__theme js-open-subtheme" data-attr="'+config.themeLink+t.id+'"><a href="javascript:;" class="side-modal__theme-link">'+t.theme+"</a></li>")}),$(".side-modal__breadcrumbs").html('<li class="breadcrumbs__item"><span class="breadcrumbs__link js-breadcrumbs__link-main breadcrumbs__link--modal">Юридическая помощь</span></li>')}})}),$(".js-btn-yes").on("click",function(){$.ajax({url:config.formHelpYes,dataType:"html",success:function(e){$(".subtheme__block").html(e)}})}),$(".js-btn-no").on("click",function(){$.ajax({url:config.formHelpForm,dataType:"html",success:function(e){$(".subtheme__block").html(e)}})}),$(".js-breadcrumbs__link-topic").on("click",function(){var e=$(this),t=e.text(),s=e.attr("data-prev");$.ajax({url:config.subthemeList+s+".json",dataType:"json",success:function(e){$(".side-modal__content").html('<ul class="side-modal__list side-modal__list--help"></ul>'),$.each(e,function(e,t){$(".side-modal__list--help").append('<li class="side-modal__theme js-open-subtheme-content" data-attr="'+config.subthemeLink+t.id+'"><a href="javascript:;" class="side-modal__theme-link ">'+t.theme+"</a></li>")});$(".side-modal__header-wrapper").html('<ul class="breadcrumbs__list side-modal__breadcrumbs u-jc-fs"><li class="breadcrumbs__item"><a href="javascript:;" class="breadcrumbs__link js-breadcrumbs__link-main breadcrumbs__link--modal">Юридическая помощь</a></li></ul>'),$(".side-modal__breadcrumbs").append('<li class="breadcrumbs__item"><a href="#" class="breadcrumbs__link breadcrumbs__link--modal js-breadcrumbs__link-topic" data-prev="'+s+'">'+t+"</a></li>")}})}),$(".js-tab__item").on("click",function(e){var t=$(this);t.closest(".tab").find(".js-tab__item").removeClass("js-active"),t.addClass("js-active");var s=t.attr("data-tab");t.closest(".tab").find(".tab__block").removeClass("js-active"),$('[data-content="'+s+'"]').addClass("js-active")}),$("#contacts").off("submit").on("submit",function(e){$("#contacts-modal").addClass("isOpened"),e.preventDefault();var t=this;$.ajax({data:$(t).serialize(),method:t.method,url:t.action,dataType:"html",success:function(e){$(".modal__content").html(e),t.reset()}})}),$("#help_sidebar_form").off("submit").on("submit",function(e){$("#help-modal").addClass("isOpened"),e.preventDefault();var t=this;$.ajax({data:$(t).serialize(),method:t.method,url:t.action,dataType:"html",success:function(e){$(".modal__content").html(e),t.reset()}})})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiJCIsImRvY3VtZW50IiwicmVhZHkiLCJmbiIsImVtdWxhdGVUcmFuc2l0aW9uRW5kIiwiZHVyYXRpb24iLCJjYWxsZWQiLCIkZWwiLCJ0aGlzIiwib25lIiwic2V0VGltZW91dCIsInRyaWdnZXIiLCJzdXBwb3J0IiwidHJhbnNpdGlvbiIsImVuZCIsImVsIiwiY3JlYXRlRWxlbWVudCIsInRyYW5zRW5kRXZlbnROYW1lcyIsIldlYmtpdFRyYW5zaXRpb24iLCJNb3pUcmFuc2l0aW9uIiwiT1RyYW5zaXRpb24iLCJuYW1lIiwidW5kZWZpbmVkIiwic3R5bGUiLCJ0cmFuc2l0aW9uRW5kIiwiZXZlbnQiLCJzcGVjaWFsIiwiYnNUcmFuc2l0aW9uRW5kIiwiYmluZFR5cGUiLCJkZWxlZ2F0ZVR5cGUiLCJoYW5kbGUiLCJlIiwidGFyZ2V0IiwiaXMiLCJoYW5kbGVPYmoiLCJoYW5kbGVyIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJqUXVlcnkiLCJDYXJvdXNlbCIsImVsZW1lbnQiLCJvcHRpb25zIiwiJGVsZW1lbnQiLCIkaW5kaWNhdG9ycyIsImZpbmQiLCJwYXVzZWQiLCJzbGlkaW5nIiwiaW50ZXJ2YWwiLCIkYWN0aXZlIiwiJGl0ZW1zIiwia2V5Ym9hcmQiLCJvbiIsInByb3h5Iiwia2V5ZG93biIsInBhdXNlIiwiZG9jdW1lbnRFbGVtZW50IiwiY3ljbGUiLCJQbHVnaW4iLCJvcHRpb24iLCJlYWNoIiwiJHRoaXMiLCJkYXRhIiwiZXh0ZW5kIiwiREVGQVVMVFMiLCJhY3Rpb24iLCJzbGlkZSIsInRvIiwiVkVSU0lPTiIsIlRSQU5TSVRJT05fRFVSQVRJT04iLCJ3cmFwIiwicHJvdG90eXBlIiwidGVzdCIsInRhZ05hbWUiLCJ3aGljaCIsInByZXYiLCJuZXh0IiwicHJldmVudERlZmF1bHQiLCJjbGVhckludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJnZXRJdGVtSW5kZXgiLCJpdGVtIiwicGFyZW50IiwiY2hpbGRyZW4iLCJpbmRleCIsImdldEl0ZW1Gb3JEaXJlY3Rpb24iLCJkaXJlY3Rpb24iLCJhY3RpdmUiLCJhY3RpdmVJbmRleCIsImxlbmd0aCIsIml0ZW1JbmRleCIsImVxIiwicG9zIiwidGhhdCIsInR5cGUiLCIkbmV4dCIsImlzQ3ljbGluZyIsImhhc0NsYXNzIiwicmVsYXRlZFRhcmdldCIsInNsaWRlRXZlbnQiLCJFdmVudCIsImlzRGVmYXVsdFByZXZlbnRlZCIsInJlbW92ZUNsYXNzIiwiJG5leHRJbmRpY2F0b3IiLCJhZGRDbGFzcyIsInNsaWRFdmVudCIsIm9mZnNldFdpZHRoIiwiam9pbiIsIm9sZCIsImNhcm91c2VsIiwiQ29uc3RydWN0b3IiLCJub0NvbmZsaWN0IiwiY2xpY2tIYW5kbGVyIiwiaHJlZiIsIiR0YXJnZXQiLCJhdHRyIiwicmVwbGFjZSIsInNsaWRlSW5kZXgiLCJjYWxsIiwid2luZG93IiwiJGNhcm91c2VsIiwiaXRlbVRvQ2xvbmUiLCJpIiwic2libGluZ3MiLCJjbG9uZSIsImFwcGVuZFRvIiwiY2hlY2tlZCIsImlucHV0IiwiY2xvc2VzdCIsInZhbCIsIkVycm9yIiwidmVyc2lvbiIsImpxdWVyeSIsInNwbGl0IiwiQ29sbGFwc2UiLCIkdHJpZ2dlciIsImlkIiwidHJhbnNpdGlvbmluZyIsIiRwYXJlbnQiLCJnZXRQYXJlbnQiLCJhZGRBcmlhQW5kQ29sbGFwc2VkQ2xhc3MiLCJ0b2dnbGUiLCJnZXRUYXJnZXRGcm9tVHJpZ2dlciIsImRpbWVuc2lvbiIsInNob3ciLCJhY3RpdmVzRGF0YSIsImFjdGl2ZXMiLCJzdGFydEV2ZW50IiwiY29tcGxldGUiLCJzY3JvbGxTaXplIiwiY2FtZWxDYXNlIiwiaGlkZSIsIm9mZnNldEhlaWdodCIsImlzT3BlbiIsInRvZ2dsZUNsYXNzIiwiY29sbGFwc2UiLCJhIiwic2Nyb2xsIiwib1RvcCIsIm9mZnNldCIsInRvcCIsImlubmVySGVpZ2h0Iiwic2Nyb2xsVG9wIiwiY291bnRUbyIsImNvdW50TnVtIiwidGV4dCIsImFuaW1hdGUiLCJlYXNpbmciLCJzdGVwIiwiTWF0aCIsImZsb29yIiwibW9kQWN0aW9uIiwiYWpheCIsInVybCIsImNvbmZpZyIsImZhdm9yaXRlTW9kIiwiZGF0YVR5cGUiLCJtZXRob2QiLCJzdWNjZXNzIiwiZWxzIiwiZW1wdHkiLCJyZW1vdmUiLCJmYXZvcml0ZUxpc3QiLCJodG1sIiwib2ZmIiwiZm9ybSIsInNlcmlhbGl6ZSIsInJlc2V0IiwiZW1wTmFtZSIsImVycm9yIiwiZXJyIiwiYXJlYSIsInBhcmFtIiwiZHJvcHpvbmUiLCJhZGRSZW1vdmVMaW5rcyIsImFjY2VwdGVkRmlsZXMiLCJjbGlja2FibGUiLCJ0aHVtYm5haWxXaWR0aCIsInRodW1ibmFpbEhlaWdodCIsIm1heEZpbGVzIiwiY3JlYXRlSW1hZ2VUaHVtYm5haWxzIiwicGFyYW1OYW1lIiwiZGljdFJlbW92ZUZpbGUiLCJkaWN0RGVmYXVsdE1lc3NhZ2UiLCJkaWN0RmlsZVRvb0JpZyIsImRpY3RNYXhGaWxlc0V4Y2VlZGVkIiwiZGljdEludmFsaWRGaWxlVHlwZSIsImRpY3RDYW5jZWxVcGxvYWQiLCJkaWN0VXBsb2FkQ2FuY2VsZWQiLCJtYXhGaWxlc2l6ZSIsImZpbGUiLCJyZXNwb25zZSIsInBlIiwicHJldmlld0VsZW1lbnQiLCJhZGRlZCIsImZvckVhY2giLCJhcHBlbmQiLCJheCIsImJ1dHRvbiIsIndyYXBwZXIiLCJ2YWx1ZSIsInN5YmxpbmciLCIkYmxvY2siLCJwcm9wIiwiZ3JvdXAiLCIkcGhvbmUiLCIkZW1haWwiLCIkaW5wdXQiLCJpbmRleE9mIiwiY2xpY2siLCJpbWdTcmMiLCJjc3MiLCJnZXRFbGVtZW50QnlJZCIsImxuZyIsImxhdCIsImluaXQiLCJteU1hcCIsInltYXBzIiwiTWFwIiwiY2VudGVyIiwiem9vbSIsImNvbnRyb2xzIiwiWm9vbUxheW91dCIsInRlbXBsYXRlTGF5b3V0RmFjdG9yeSIsImNyZWF0ZUNsYXNzIiwiYnVpbGQiLCJzdXBlcmNsYXNzIiwiem9vbUluQ2FsbGJhY2siLCJ1dGlsIiwiYmluZCIsInpvb21JbiIsInpvb21PdXRDYWxsYmFjayIsInpvb21PdXQiLCJjbGVhciIsInVuYmluZCIsIm1hcCIsImdldERhdGEiLCJjb250cm9sIiwiZ2V0TWFwIiwic2V0Wm9vbSIsImdldFpvb20iLCJjaGVja1pvb21SYW5nZSIsImFkZE9iamVjdHMiLCJsaW5rIiwiZmlsdGVyRGF0YSIsIm1hcFNlcnZlckRhdGEiLCJzZXJ2ZXJEYXRhIiwiZmVhdHVyZXMiLCJvYmoiLCJnZW9tZXRyeSIsImNvb3JkaW5hdGVzIiwibG9uZyIsInByb3BlcnRpZXMiLCJpY29uQ2FwdGlvbiIsInNlcmlhbE51bWJlciIsImJhbGxvb25Db250ZW50IiwiaW1hZ2UiLCJwcmljZSIsInJvb21zIiwic3F1YXJlIiwiYWRkcmVzcyIsImxvYWRMaXN0IiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJ0aGVuIiwib2JqZWN0TWFuYWdlciIsIk9iamVjdE1hbmFnZXIiLCJjbHVzdGVyaXplIiwiZ3JpZFNpemUiLCJjbHVzdGVySWNvbkxheW91dCIsImNsdXN0ZXJEaXNhYmxlQ2xpY2tab29tIiwiYWRkIiwib2JqZWN0cyIsInNldCIsImljb25MYXlvdXQiLCJpY29uSW1hZ2VIcmVmIiwibWFwQmFsb29uIiwiaWNvbkltYWdlU2l6ZSIsImljb25JbWFnZU9mZnNldCIsImdlb09iamVjdHMiLCJjZW50ZXJQb3MiLCJsYXlvdXQiLCJwb3NpdGlvbiIsImxlZnQiLCJyZXNpemUiLCJtYXBMaW5rcyIsInN1Ym1pdCIsImxpbmtUb05ld09iamVjdHMiLCJtYXBOZXdMaW5rcyIsInJlbW92ZUFsbCIsInBsYWNlbWFyayIsIlBsYWNlbWFyayIsInNjckluIiwic2NyRWwiLCJzY3JQYXIiLCJzY3JIZWlnaHQiLCJjbGllbnRIZWlnaHQiLCJoZWlnaHQiLCJzdGlja2Jsb2NrIiwidGhlbWVzTGlzdCIsInRoZW1lTGluayIsInRoZW1lIiwiYWpheENvbXBsZXRlIiwic3VidGhlbWVDb250ZW50Iiwic3VidGhlbWVMaXN0Iiwic3VidGhlbWVMaW5r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ZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIkKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbiAoKSB7XG4gIC8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgKiBCb290c3RyYXA6IHRyYW5zaXRpb24uanMgdjMuMy41XG4gICAqIGh0dHBzOi8vZ2V0Ym9vdHN0cmFwLmNvbS9qYXZhc2NyaXB0LyN0cmFuc2l0aW9uc1xuICAgKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICogQ29weXJpZ2h0IDIwMTEtMjAxNSBUd2l0dGVyLCBJbmMuXG4gICAqIExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvbWFzdGVyL0xJQ0VOU0UpXG4gICAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuICBcbiAgXG4gICtmdW5jdGlvbiAoJCkge1xuICAgICd1c2Ugc3RyaWN0JztcbiAgXG4gICAgLy8gQ1NTIFRSQU5TSVRJT04gU1VQUE9SVCAoU2hvdXRvdXQ6IGh0dHBzOi8vd3d3Lm1vZGVybml6ci5jb20vKVxuICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICBcbiAgICBmdW5jdGlvbiB0cmFuc2l0aW9uRW5kKCkge1xuICAgICAgdmFyIGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYm9vdHN0cmFwJylcbiAgXG4gICAgICB2YXIgdHJhbnNFbmRFdmVudE5hbWVzID0ge1xuICAgICAgICBXZWJraXRUcmFuc2l0aW9uIDogJ3dlYmtpdFRyYW5zaXRpb25FbmQnLFxuICAgICAgICBNb3pUcmFuc2l0aW9uICAgIDogJ3RyYW5zaXRpb25lbmQnLFxuICAgICAgICBPVHJhbnNpdGlvbiAgICAgIDogJ29UcmFuc2l0aW9uRW5kIG90cmFuc2l0aW9uZW5kJyxcbiAgICAgICAgdHJhbnNpdGlvbiAgICAgICA6ICd0cmFuc2l0aW9uZW5kJ1xuICAgICAgfVxuICBcbiAgICAgIGZvciAodmFyIG5hbWUgaW4gdHJhbnNFbmRFdmVudE5hbWVzKSB7XG4gICAgICAgIGlmIChlbC5zdHlsZVtuYW1lXSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgcmV0dXJuIHsgZW5kOiB0cmFuc0VuZEV2ZW50TmFtZXNbbmFtZV0gfVxuICAgICAgICB9XG4gICAgICB9XG4gIFxuICAgICAgcmV0dXJuIGZhbHNlIC8vIGV4cGxpY2l0IGZvciBpZTggKCAgLl8uKVxuICAgIH1cbiAgXG4gICAgLy8gaHR0cDovL2Jsb2cuYWxleG1hY2Nhdy5jb20vY3NzLXRyYW5zaXRpb25zXG4gICAgJC5mbi5lbXVsYXRlVHJhbnNpdGlvbkVuZCA9IGZ1bmN0aW9uIChkdXJhdGlvbikge1xuICAgICAgdmFyIGNhbGxlZCA9IGZhbHNlXG4gICAgICB2YXIgJGVsID0gdGhpc1xuICAgICAgJCh0aGlzKS5vbmUoJ2JzVHJhbnNpdGlvbkVuZCcsIGZ1bmN0aW9uICgpIHsgY2FsbGVkID0gdHJ1ZSB9KVxuICAgICAgdmFyIGNhbGxiYWNrID0gZnVuY3Rpb24gKCkgeyBpZiAoIWNhbGxlZCkgJCgkZWwpLnRyaWdnZXIoJC5zdXBwb3J0LnRyYW5zaXRpb24uZW5kKSB9XG4gICAgICBzZXRUaW1lb3V0KGNhbGxiYWNrLCBkdXJhdGlvbilcbiAgICAgIHJldHVybiB0aGlzXG4gICAgfVxuICBcbiAgICAkKGZ1bmN0aW9uICgpIHtcbiAgICAgICQuc3VwcG9ydC50cmFuc2l0aW9uID0gdHJhbnNpdGlvbkVuZCgpXG4gIFxuICAgICAgaWYgKCEkLnN1cHBvcnQudHJhbnNpdGlvbikgcmV0dXJuXG4gIFxuICAgICAgJC5ldmVudC5zcGVjaWFsLmJzVHJhbnNpdGlvbkVuZCA9IHtcbiAgICAgICAgYmluZFR5cGU6ICQuc3VwcG9ydC50cmFuc2l0aW9uLmVuZCxcbiAgICAgICAgZGVsZWdhdGVUeXBlOiAkLnN1cHBvcnQudHJhbnNpdGlvbi5lbmQsXG4gICAgICAgIGhhbmRsZTogZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICBpZiAoJChlLnRhcmdldCkuaXModGhpcykpIHJldHVybiBlLmhhbmRsZU9iai5oYW5kbGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cylcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gIFxuICB9KGpRdWVyeSk7XG4gIFxuICAvKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICogQm9vdHN0cmFwOiBjYXJvdXNlbC5qcyB2My4zLjVcbiAgICogaHR0cHM6Ly9nZXRib290c3RyYXAuY29tL2phdmFzY3JpcHQvI2Nhcm91c2VsXG4gICAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgKiBDb3B5cmlnaHQgMjAxMS0yMDE1IFR3aXR0ZXIsIEluYy5cbiAgICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYXN0ZXIvTElDRU5TRSlcbiAgICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4gIFxuICBcbiAgK2Z1bmN0aW9uICgkKSB7XG4gICAgJ3VzZSBzdHJpY3QnO1xuICBcbiAgICAvLyBDQVJPVVNFTCBDTEFTUyBERUZJTklUSU9OXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PVxuICBcbiAgICB2YXIgQ2Fyb3VzZWwgPSBmdW5jdGlvbiAoZWxlbWVudCwgb3B0aW9ucykge1xuICAgICAgdGhpcy4kZWxlbWVudCAgICA9ICQoZWxlbWVudClcbiAgICAgIHRoaXMuJGluZGljYXRvcnMgPSB0aGlzLiRlbGVtZW50LmZpbmQoJy5jYXJvdXNlbC1pbmRpY2F0b3JzJylcbiAgICAgIHRoaXMub3B0aW9ucyAgICAgPSBvcHRpb25zXG4gICAgICB0aGlzLnBhdXNlZCAgICAgID0gbnVsbFxuICAgICAgdGhpcy5zbGlkaW5nICAgICA9IG51bGxcbiAgICAgIHRoaXMuaW50ZXJ2YWwgICAgPSBudWxsXG4gICAgICB0aGlzLiRhY3RpdmUgICAgID0gbnVsbFxuICAgICAgdGhpcy4kaXRlbXMgICAgICA9IG51bGxcbiAgXG4gICAgICB0aGlzLm9wdGlvbnMua2V5Ym9hcmQgJiYgdGhpcy4kZWxlbWVudC5vbigna2V5ZG93bi5icy5jYXJvdXNlbCcsICQucHJveHkodGhpcy5rZXlkb3duLCB0aGlzKSlcbiAgXG4gICAgICB0aGlzLm9wdGlvbnMucGF1c2UgPT0gJ2hvdmVyJyAmJiAhKCdvbnRvdWNoc3RhcnQnIGluIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCkgJiYgdGhpcy4kZWxlbWVudFxuICAgICAgICAub24oJ21vdXNlZW50ZXIuYnMuY2Fyb3VzZWwnLCAkLnByb3h5KHRoaXMucGF1c2UsIHRoaXMpKVxuICAgICAgICAub24oJ21vdXNlbGVhdmUuYnMuY2Fyb3VzZWwnLCAkLnByb3h5KHRoaXMuY3ljbGUsIHRoaXMpKVxuICAgIH1cbiAgXG4gICAgQ2Fyb3VzZWwuVkVSU0lPTiAgPSAnMy4zLjUnXG4gIFxuICAgIENhcm91c2VsLlRSQU5TSVRJT05fRFVSQVRJT04gPSA2MDBcbiAgXG4gICAgQ2Fyb3VzZWwuREVGQVVMVFMgPSB7XG4gICAgICBpbnRlcnZhbDogNTAwMCxcbiAgICAgIHBhdXNlOiAnaG92ZXInLFxuICAgICAgd3JhcDogdHJ1ZSxcbiAgICAgIGtleWJvYXJkOiB0cnVlXG4gICAgfVxuICBcbiAgICBDYXJvdXNlbC5wcm90b3R5cGUua2V5ZG93biA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICBpZiAoL2lucHV0fHRleHRhcmVhL2kudGVzdChlLnRhcmdldC50YWdOYW1lKSkgcmV0dXJuXG4gICAgICBzd2l0Y2ggKGUud2hpY2gpIHtcbiAgICAgICAgY2FzZSAzNzogdGhpcy5wcmV2KCk7IGJyZWFrXG4gICAgICAgIGNhc2UgMzk6IHRoaXMubmV4dCgpOyBicmVha1xuICAgICAgICBkZWZhdWx0OiByZXR1cm5cbiAgICAgIH1cbiAgXG4gICAgICBlLnByZXZlbnREZWZhdWx0KClcbiAgICB9XG4gIFxuICAgIENhcm91c2VsLnByb3RvdHlwZS5jeWNsZSA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICBlIHx8ICh0aGlzLnBhdXNlZCA9IGZhbHNlKVxuICBcbiAgICAgIHRoaXMuaW50ZXJ2YWwgJiYgY2xlYXJJbnRlcnZhbCh0aGlzLmludGVydmFsKVxuICBcbiAgICAgIHRoaXMub3B0aW9ucy5pbnRlcnZhbFxuICAgICAgICAmJiAhdGhpcy5wYXVzZWRcbiAgICAgICAgJiYgKHRoaXMuaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCgkLnByb3h5KHRoaXMubmV4dCwgdGhpcyksIHRoaXMub3B0aW9ucy5pbnRlcnZhbCkpXG4gIFxuICAgICAgcmV0dXJuIHRoaXNcbiAgICB9XG4gIFxuICAgIENhcm91c2VsLnByb3RvdHlwZS5nZXRJdGVtSW5kZXggPSBmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdGhpcy4kaXRlbXMgPSBpdGVtLnBhcmVudCgpLmNoaWxkcmVuKCcuaXRlbScpXG4gICAgICByZXR1cm4gdGhpcy4kaXRlbXMuaW5kZXgoaXRlbSB8fCB0aGlzLiRhY3RpdmUpXG4gICAgfVxuICBcbiAgICBDYXJvdXNlbC5wcm90b3R5cGUuZ2V0SXRlbUZvckRpcmVjdGlvbiA9IGZ1bmN0aW9uIChkaXJlY3Rpb24sIGFjdGl2ZSkge1xuICAgICAgdmFyIGFjdGl2ZUluZGV4ID0gdGhpcy5nZXRJdGVtSW5kZXgoYWN0aXZlKVxuICAgICAgdmFyIHdpbGxXcmFwID0gKGRpcmVjdGlvbiA9PSAncHJldicgJiYgYWN0aXZlSW5kZXggPT09IDApXG4gICAgICAgICAgICAgICAgICB8fCAoZGlyZWN0aW9uID09ICduZXh0JyAmJiBhY3RpdmVJbmRleCA9PSAodGhpcy4kaXRlbXMubGVuZ3RoIC0gMSkpXG4gICAgICBpZiAod2lsbFdyYXAgJiYgIXRoaXMub3B0aW9ucy53cmFwKSByZXR1cm4gYWN0aXZlXG4gICAgICB2YXIgZGVsdGEgPSBkaXJlY3Rpb24gPT0gJ3ByZXYnID8gLTEgOiAxXG4gICAgICB2YXIgaXRlbUluZGV4ID0gKGFjdGl2ZUluZGV4ICsgZGVsdGEpICUgdGhpcy4kaXRlbXMubGVuZ3RoXG4gICAgICByZXR1cm4gdGhpcy4kaXRlbXMuZXEoaXRlbUluZGV4KVxuICAgIH1cbiAgXG4gICAgQ2Fyb3VzZWwucHJvdG90eXBlLnRvID0gZnVuY3Rpb24gKHBvcykge1xuICAgICAgdmFyIHRoYXQgICAgICAgID0gdGhpc1xuICAgICAgdmFyIGFjdGl2ZUluZGV4ID0gdGhpcy5nZXRJdGVtSW5kZXgodGhpcy4kYWN0aXZlID0gdGhpcy4kZWxlbWVudC5maW5kKCcuaXRlbS5hY3RpdmUnKSlcbiAgXG4gICAgICBpZiAocG9zID4gKHRoaXMuJGl0ZW1zLmxlbmd0aCAtIDEpIHx8IHBvcyA8IDApIHJldHVyblxuICBcbiAgICAgIGlmICh0aGlzLnNsaWRpbmcpICAgICAgIHJldHVybiB0aGlzLiRlbGVtZW50Lm9uZSgnc2xpZC5icy5jYXJvdXNlbCcsIGZ1bmN0aW9uICgpIHsgdGhhdC50byhwb3MpIH0pIC8vIHllcywgXCJzbGlkXCJcbiAgICAgIGlmIChhY3RpdmVJbmRleCA9PSBwb3MpIHJldHVybiB0aGlzLnBhdXNlKCkuY3ljbGUoKVxuICBcbiAgICAgIHJldHVybiB0aGlzLnNsaWRlKHBvcyA+IGFjdGl2ZUluZGV4ID8gJ25leHQnIDogJ3ByZXYnLCB0aGlzLiRpdGVtcy5lcShwb3MpKVxuICAgIH1cbiAgXG4gICAgQ2Fyb3VzZWwucHJvdG90eXBlLnBhdXNlID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgIGUgfHwgKHRoaXMucGF1c2VkID0gdHJ1ZSlcbiAgXG4gICAgICBpZiAodGhpcy4kZWxlbWVudC5maW5kKCcubmV4dCwgLnByZXYnKS5sZW5ndGggJiYgJC5zdXBwb3J0LnRyYW5zaXRpb24pIHtcbiAgICAgICAgdGhpcy4kZWxlbWVudC50cmlnZ2VyKCQuc3VwcG9ydC50cmFuc2l0aW9uLmVuZClcbiAgICAgICAgdGhpcy5jeWNsZSh0cnVlKVxuICAgICAgfVxuICBcbiAgICAgIHRoaXMuaW50ZXJ2YWwgPSBjbGVhckludGVydmFsKHRoaXMuaW50ZXJ2YWwpXG4gIFxuICAgICAgcmV0dXJuIHRoaXNcbiAgICB9XG4gIFxuICAgIENhcm91c2VsLnByb3RvdHlwZS5uZXh0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKHRoaXMuc2xpZGluZykgcmV0dXJuXG4gICAgICByZXR1cm4gdGhpcy5zbGlkZSgnbmV4dCcpXG4gICAgfVxuICBcbiAgICBDYXJvdXNlbC5wcm90b3R5cGUucHJldiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmICh0aGlzLnNsaWRpbmcpIHJldHVyblxuICAgICAgcmV0dXJuIHRoaXMuc2xpZGUoJ3ByZXYnKVxuICAgIH1cbiAgXG4gICAgQ2Fyb3VzZWwucHJvdG90eXBlLnNsaWRlID0gZnVuY3Rpb24gKHR5cGUsIG5leHQpIHtcbiAgICAgIHZhciAkYWN0aXZlICAgPSB0aGlzLiRlbGVtZW50LmZpbmQoJy5pdGVtLmFjdGl2ZScpXG4gICAgICB2YXIgJG5leHQgICAgID0gbmV4dCB8fCB0aGlzLmdldEl0ZW1Gb3JEaXJlY3Rpb24odHlwZSwgJGFjdGl2ZSlcbiAgICAgIHZhciBpc0N5Y2xpbmcgPSB0aGlzLmludGVydmFsXG4gICAgICB2YXIgZGlyZWN0aW9uID0gdHlwZSA9PSAnbmV4dCcgPyAnbGVmdCcgOiAncmlnaHQnXG4gICAgICB2YXIgdGhhdCAgICAgID0gdGhpc1xuICBcbiAgICAgIGlmICgkbmV4dC5oYXNDbGFzcygnYWN0aXZlJykpIHJldHVybiAodGhpcy5zbGlkaW5nID0gZmFsc2UpXG4gIFxuICAgICAgdmFyIHJlbGF0ZWRUYXJnZXQgPSAkbmV4dFswXVxuICAgICAgdmFyIHNsaWRlRXZlbnQgPSAkLkV2ZW50KCdzbGlkZS5icy5jYXJvdXNlbCcsIHtcbiAgICAgICAgcmVsYXRlZFRhcmdldDogcmVsYXRlZFRhcmdldCxcbiAgICAgICAgZGlyZWN0aW9uOiBkaXJlY3Rpb25cbiAgICAgIH0pXG4gICAgICB0aGlzLiRlbGVtZW50LnRyaWdnZXIoc2xpZGVFdmVudClcbiAgICAgIGlmIChzbGlkZUV2ZW50LmlzRGVmYXVsdFByZXZlbnRlZCgpKSByZXR1cm5cbiAgXG4gICAgICB0aGlzLnNsaWRpbmcgPSB0cnVlXG4gIFxuICAgICAgaXNDeWNsaW5nICYmIHRoaXMucGF1c2UoKVxuICBcbiAgICAgIGlmICh0aGlzLiRpbmRpY2F0b3JzLmxlbmd0aCkge1xuICAgICAgICB0aGlzLiRpbmRpY2F0b3JzLmZpbmQoJy5hY3RpdmUnKS5yZW1vdmVDbGFzcygnYWN0aXZlJylcbiAgICAgICAgdmFyICRuZXh0SW5kaWNhdG9yID0gJCh0aGlzLiRpbmRpY2F0b3JzLmNoaWxkcmVuKClbdGhpcy5nZXRJdGVtSW5kZXgoJG5leHQpXSlcbiAgICAgICAgJG5leHRJbmRpY2F0b3IgJiYgJG5leHRJbmRpY2F0b3IuYWRkQ2xhc3MoJ2FjdGl2ZScpXG4gICAgICB9XG4gIFxuICAgICAgdmFyIHNsaWRFdmVudCA9ICQuRXZlbnQoJ3NsaWQuYnMuY2Fyb3VzZWwnLCB7IHJlbGF0ZWRUYXJnZXQ6IHJlbGF0ZWRUYXJnZXQsIGRpcmVjdGlvbjogZGlyZWN0aW9uIH0pIC8vIHllcywgXCJzbGlkXCJcbiAgICAgIGlmICgkLnN1cHBvcnQudHJhbnNpdGlvbiAmJiB0aGlzLiRlbGVtZW50Lmhhc0NsYXNzKCdzbGlkZScpKSB7XG4gICAgICAgICRuZXh0LmFkZENsYXNzKHR5cGUpXG4gICAgICAgICRuZXh0WzBdLm9mZnNldFdpZHRoIC8vIGZvcmNlIHJlZmxvd1xuICAgICAgICAkYWN0aXZlLmFkZENsYXNzKGRpcmVjdGlvbilcbiAgICAgICAgJG5leHQuYWRkQ2xhc3MoZGlyZWN0aW9uKVxuICAgICAgICAkYWN0aXZlXG4gICAgICAgICAgLm9uZSgnYnNUcmFuc2l0aW9uRW5kJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgJG5leHQucmVtb3ZlQ2xhc3MoW3R5cGUsIGRpcmVjdGlvbl0uam9pbignICcpKS5hZGRDbGFzcygnYWN0aXZlJylcbiAgICAgICAgICAgICRhY3RpdmUucmVtb3ZlQ2xhc3MoWydhY3RpdmUnLCBkaXJlY3Rpb25dLmpvaW4oJyAnKSlcbiAgICAgICAgICAgIHRoYXQuc2xpZGluZyA9IGZhbHNlXG4gICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgdGhhdC4kZWxlbWVudC50cmlnZ2VyKHNsaWRFdmVudClcbiAgICAgICAgICAgIH0sIDApXG4gICAgICAgICAgfSlcbiAgICAgICAgICAuZW11bGF0ZVRyYW5zaXRpb25FbmQoQ2Fyb3VzZWwuVFJBTlNJVElPTl9EVVJBVElPTilcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgICRhY3RpdmUucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpXG4gICAgICAgICRuZXh0LmFkZENsYXNzKCdhY3RpdmUnKVxuICAgICAgICB0aGlzLnNsaWRpbmcgPSBmYWxzZVxuICAgICAgICB0aGlzLiRlbGVtZW50LnRyaWdnZXIoc2xpZEV2ZW50KVxuICAgICAgfVxuICBcbiAgICAgIGlzQ3ljbGluZyAmJiB0aGlzLmN5Y2xlKClcbiAgXG4gICAgICByZXR1cm4gdGhpc1xuICAgIH1cbiAgXG4gIFxuICAgIC8vIENBUk9VU0VMIFBMVUdJTiBERUZJTklUSU9OXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgXG4gICAgZnVuY3Rpb24gUGx1Z2luKG9wdGlvbikge1xuICAgICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciAkdGhpcyAgID0gJCh0aGlzKVxuICAgICAgICB2YXIgZGF0YSAgICA9ICR0aGlzLmRhdGEoJ2JzLmNhcm91c2VsJylcbiAgICAgICAgdmFyIG9wdGlvbnMgPSAkLmV4dGVuZCh7fSwgQ2Fyb3VzZWwuREVGQVVMVFMsICR0aGlzLmRhdGEoKSwgdHlwZW9mIG9wdGlvbiA9PSAnb2JqZWN0JyAmJiBvcHRpb24pXG4gICAgICAgIHZhciBhY3Rpb24gID0gdHlwZW9mIG9wdGlvbiA9PSAnc3RyaW5nJyA/IG9wdGlvbiA6IG9wdGlvbnMuc2xpZGVcbiAgXG4gICAgICAgIGlmICghZGF0YSkgJHRoaXMuZGF0YSgnYnMuY2Fyb3VzZWwnLCAoZGF0YSA9IG5ldyBDYXJvdXNlbCh0aGlzLCBvcHRpb25zKSkpXG4gICAgICAgIGlmICh0eXBlb2Ygb3B0aW9uID09ICdudW1iZXInKSBkYXRhLnRvKG9wdGlvbilcbiAgICAgICAgZWxzZSBpZiAoYWN0aW9uKSBkYXRhW2FjdGlvbl0oKVxuICAgICAgICBlbHNlIGlmIChvcHRpb25zLmludGVydmFsKSBkYXRhLnBhdXNlKCkuY3ljbGUoKVxuICAgICAgfSlcbiAgICB9XG4gIFxuICAgIHZhciBvbGQgPSAkLmZuLmNhcm91c2VsXG4gIFxuICAgICQuZm4uY2Fyb3VzZWwgICAgICAgICAgICAgPSBQbHVnaW5cbiAgICAkLmZuLmNhcm91c2VsLkNvbnN0cnVjdG9yID0gQ2Fyb3VzZWxcbiAgXG4gIFxuICAgIC8vIENBUk9VU0VMIE5PIENPTkZMSUNUXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PT1cbiAgXG4gICAgJC5mbi5jYXJvdXNlbC5ub0NvbmZsaWN0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgJC5mbi5jYXJvdXNlbCA9IG9sZFxuICAgICAgcmV0dXJuIHRoaXNcbiAgICB9XG4gIFxuICBcbiAgICAvLyBDQVJPVVNFTCBEQVRBLUFQSVxuICAgIC8vID09PT09PT09PT09PT09PT09XG4gIFxuICAgIHZhciBjbGlja0hhbmRsZXIgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgdmFyIGhyZWZcbiAgICAgIHZhciAkdGhpcyAgID0gJCh0aGlzKVxuICAgICAgdmFyICR0YXJnZXQgPSAkKCR0aGlzLmF0dHIoJ2RhdGEtdGFyZ2V0JykgfHwgKGhyZWYgPSAkdGhpcy5hdHRyKCdocmVmJykpICYmIGhyZWYucmVwbGFjZSgvLiooPz0jW15cXHNdKyQpLywgJycpKSAvLyBzdHJpcCBmb3IgaWU3XG4gICAgICBpZiAoISR0YXJnZXQuaGFzQ2xhc3MoJ2Nhcm91c2VsJykpIHJldHVyblxuICAgICAgdmFyIG9wdGlvbnMgPSAkLmV4dGVuZCh7fSwgJHRhcmdldC5kYXRhKCksICR0aGlzLmRhdGEoKSlcbiAgICAgIHZhciBzbGlkZUluZGV4ID0gJHRoaXMuYXR0cignZGF0YS1zbGlkZS10bycpXG4gICAgICBpZiAoc2xpZGVJbmRleCkgb3B0aW9ucy5pbnRlcnZhbCA9IGZhbHNlXG4gIFxuICAgICAgUGx1Z2luLmNhbGwoJHRhcmdldCwgb3B0aW9ucylcbiAgXG4gICAgICBpZiAoc2xpZGVJbmRleCkge1xuICAgICAgICAkdGFyZ2V0LmRhdGEoJ2JzLmNhcm91c2VsJykudG8oc2xpZGVJbmRleClcbiAgICAgIH1cbiAgXG4gICAgICBlLnByZXZlbnREZWZhdWx0KClcbiAgICB9XG4gIFxuICAgICQoZG9jdW1lbnQpXG4gICAgICAub24oJ2NsaWNrLmJzLmNhcm91c2VsLmRhdGEtYXBpJywgJ1tkYXRhLXNsaWRlXScsIGNsaWNrSGFuZGxlcilcbiAgICAgIC5vbignY2xpY2suYnMuY2Fyb3VzZWwuZGF0YS1hcGknLCAnW2RhdGEtc2xpZGUtdG9dJywgY2xpY2tIYW5kbGVyKVxuICBcbiAgICAkKHdpbmRvdykub24oJ2xvYWQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAkKCdbZGF0YS1yaWRlPVwiY2Fyb3VzZWxcIl0nKS5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyICRjYXJvdXNlbCA9ICQodGhpcylcbiAgICAgICAgUGx1Z2luLmNhbGwoJGNhcm91c2VsLCAkY2Fyb3VzZWwuZGF0YSgpKVxuICAgICAgfSlcbiAgICB9KVxuICBcbiAgfShqUXVlcnkpO1xuICBcbiAgK2Z1bmN0aW9uKCl7XG4gICAgJCgnLmNhcm91c2VsLWl0ZW0taW1hZ2UgLml0ZW0nKS5lYWNoKGZ1bmN0aW9uKCl7XG4gICAgICB2YXIgaXRlbVRvQ2xvbmUgPSAkKHRoaXMpO1xuICBcbiAgICAgIGZvciAodmFyIGk9MTtpPDU7aSsrKSB7XG4gICAgICAgIGl0ZW1Ub0Nsb25lID0gaXRlbVRvQ2xvbmUubmV4dCgpO1xuICBcbiAgICAgICAgLy8gd3JhcCBhcm91bmQgaWYgYXQgZW5kIG9mIGl0ZW0gY29sbGVjdGlvblxuICAgICAgICBpZiAoIWl0ZW1Ub0Nsb25lLmxlbmd0aCkge1xuICAgICAgICAgIGl0ZW1Ub0Nsb25lID0gJCh0aGlzKS5zaWJsaW5ncygnOmZpcnN0Jyk7XG4gICAgICAgIH1cbiAgXG4gICAgICAgIC8vIGdyYWIgaXRlbSwgY2xvbmUsIGFkZCBtYXJrZXIgY2xhc3MsIGFkZCB0byBjb2xsZWN0aW9uXG4gICAgICAgIGl0ZW1Ub0Nsb25lLmNoaWxkcmVuKCc6Zmlyc3QtY2hpbGQnKS5jbG9uZSgpXG4gICAgICAgICAgLmFkZENsYXNzKFwiY2xvbmVkaXRlbS1cIisoaSkpXG4gICAgICAgICAgLmFwcGVuZFRvKCQodGhpcykpO1xuICAgICAgfVxuICAgIH0pO1xuICB9KCk7XG4gIFxuICAkKCcuY2Fyb3VzZWwnKS5jYXJvdXNlbCh7XG4gIFx0aW50ZXJ2YWw6IDAgLy90ZW1wXG4gIH0pO1xuICBcbiAgJCgnI2Nhcm91c2VsLWl0ZW0taW1hZ2UnKS5jYXJvdXNlbCh7IFxuICAgIGludGVydmFsOiAwIC8vdGVtcFxuICB9KTtcbiAgJCgnLmJlbmVmaXRzX19pdGVtJykub24oJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gICAgdmFyICR0aGlzID0gJCggdGhpcyApO1xuICAgIHZhciBjaGVja2VkID0gJHRoaXMuYXR0cignZGF0YS1uYW1lJyk7XG4gIFxuICAgIHZhciBpbnB1dCA9ICR0aGlzLmNsb3Nlc3QoJy5maWx0ZXJfX2NoZWNrYm94LXdyYXAnKS5maW5kKCcjJysgY2hlY2tlZCk7XG4gICAgaWYgKCAhJHRoaXMuaGFzQ2xhc3MoJ2lzQWN0aXZlJykpIHtcbiAgICAgIGlucHV0LnZhbChpbnB1dC5kYXRhKCduJykpO1xuICAgIH0gZWxzZSB7XG4gICAgICBpbnB1dC52YWwoaW5wdXQuZGF0YSgneScpKTtcbiAgICB9XG4gICAgLy8gY29uc29sZS5sb2coJCgnI3NjaG9vbCcpLmlzKCc6Y2hlY2tlZCcpKTtcbiAgICAvLyBjb25zb2xlLmxvZygkKCcja2luZGVyJykuaXMoJzpjaGVja2VkJykpO1xuICAgIC8vIGNvbnNvbGUubG9nKCQoJyNkcnVnc3RvcmUnKS5pcygnOmNoZWNrZWQnKSk7XG4gICAgLy8gY29uc29sZS5sb2coJCgnI2hvc3BpdGFsJykuaXMoJzpjaGVja2VkJykpO1xuICAgIC8vIGNvbnNvbGUubG9nKCQoJyNzaG9wJykuaXMoJzpjaGVja2VkJykpO1xuICAgIC8vIGNvbnNvbGUubG9nKCQoJyNiYW5rJykuaXMoJzpjaGVja2VkJykpO1xuICAgIC8vIGNvbnNvbGUubG9nKCQoJyNjYWZlJykuaXMoJzpjaGVja2VkJykpO1xuICAgIC8vIGNvbnNvbGUubG9nKCQoJyNyZXN0JykuaXMoJzpjaGVja2VkJykpO1xuICB9KVxuICAvKiFcbiAgICogQm9vdHN0cmFwIHYzLjMuNyAoaHR0cDovL2dldGJvb3RzdHJhcC5jb20pXG4gICAqIENvcHlyaWdodCAyMDExLTIwMTggVHdpdHRlciwgSW5jLlxuICAgKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21hc3Rlci9MSUNFTlNFKVxuICAgKi9cbiAgXG4gIC8qIVxuICAgKiBHZW5lcmF0ZWQgdXNpbmcgdGhlIEJvb3RzdHJhcCBDdXN0b21pemVyICg8bm9uZT4pXG4gICAqIENvbmZpZyBzYXZlZCB0byBjb25maWcuanNvbiBhbmQgPG5vbmU+XG4gICAqL1xuICBpZiAodHlwZW9mIGpRdWVyeSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0Jvb3RzdHJhcFxcJ3MgSmF2YVNjcmlwdCByZXF1aXJlcyBqUXVlcnknKVxuICB9XG4gICtmdW5jdGlvbiAoJCkge1xuICAgICd1c2Ugc3RyaWN0JztcbiAgICB2YXIgdmVyc2lvbiA9ICQuZm4uanF1ZXJ5LnNwbGl0KCcgJylbMF0uc3BsaXQoJy4nKVxuICAgIGlmICgodmVyc2lvblswXSA8IDIgJiYgdmVyc2lvblsxXSA8IDkpIHx8ICh2ZXJzaW9uWzBdID09IDEgJiYgdmVyc2lvblsxXSA9PSA5ICYmIHZlcnNpb25bMl0gPCAxKSB8fCAodmVyc2lvblswXSA+IDMpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Jvb3RzdHJhcFxcJ3MgSmF2YVNjcmlwdCByZXF1aXJlcyBqUXVlcnkgdmVyc2lvbiAxLjkuMSBvciBoaWdoZXIsIGJ1dCBsb3dlciB0aGFuIHZlcnNpb24gNCcpXG4gICAgfVxuICB9KGpRdWVyeSk7XG4gIFxuICAvKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICogQm9vdHN0cmFwOiBjb2xsYXBzZS5qcyB2My4zLjdcbiAgICogaHR0cDovL2dldGJvb3RzdHJhcC5jb20vamF2YXNjcmlwdC8jY29sbGFwc2VcbiAgICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAqIENvcHlyaWdodCAyMDExLTIwMTYgVHdpdHRlciwgSW5jLlxuICAgKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21hc3Rlci9MSUNFTlNFKVxuICAgKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbiAgXG4gIC8qIGpzaGludCBsYXRlZGVmOiBmYWxzZSAqL1xuICBcbiAgK2Z1bmN0aW9uICgkKSB7XG4gICAgJ3VzZSBzdHJpY3QnO1xuICBcbiAgICAvLyBDT0xMQVBTRSBQVUJMSUMgQ0xBU1MgREVGSU5JVElPTlxuICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gIFxuICAgIHZhciBDb2xsYXBzZSA9IGZ1bmN0aW9uIChlbGVtZW50LCBvcHRpb25zKSB7XG4gICAgICB0aGlzLiRlbGVtZW50ICAgICAgPSAkKGVsZW1lbnQpXG4gICAgICB0aGlzLm9wdGlvbnMgICAgICAgPSAkLmV4dGVuZCh7fSwgQ29sbGFwc2UuREVGQVVMVFMsIG9wdGlvbnMpXG4gICAgICB0aGlzLiR0cmlnZ2VyICAgICAgPSAkKCdbZGF0YS10b2dnbGU9XCJjb2xsYXBzZVwiXVtocmVmPVwiIycgKyBlbGVtZW50LmlkICsgJ1wiXSwnICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1tkYXRhLXRvZ2dsZT1cImNvbGxhcHNlXCJdW2RhdGEtdGFyZ2V0PVwiIycgKyBlbGVtZW50LmlkICsgJ1wiXScpXG4gICAgICB0aGlzLnRyYW5zaXRpb25pbmcgPSBudWxsXG4gIFxuICAgICAgaWYgKHRoaXMub3B0aW9ucy5wYXJlbnQpIHtcbiAgICAgICAgdGhpcy4kcGFyZW50ID0gdGhpcy5nZXRQYXJlbnQoKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5hZGRBcmlhQW5kQ29sbGFwc2VkQ2xhc3ModGhpcy4kZWxlbWVudCwgdGhpcy4kdHJpZ2dlcilcbiAgICAgIH1cbiAgXG4gICAgICBpZiAodGhpcy5vcHRpb25zLnRvZ2dsZSkgdGhpcy50b2dnbGUoKVxuICAgIH1cbiAgXG4gICAgQ29sbGFwc2UuVkVSU0lPTiAgPSAnMy4zLjcnXG4gIFxuICAgIENvbGxhcHNlLlRSQU5TSVRJT05fRFVSQVRJT04gPSAzNTBcbiAgXG4gICAgQ29sbGFwc2UuREVGQVVMVFMgPSB7XG4gICAgICB0b2dnbGU6IHRydWVcbiAgICB9XG4gIFxuICAgIENvbGxhcHNlLnByb3RvdHlwZS5kaW1lbnNpb24gPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgaGFzV2lkdGggPSB0aGlzLiRlbGVtZW50Lmhhc0NsYXNzKCd3aWR0aCcpXG4gICAgICByZXR1cm4gaGFzV2lkdGggPyAnd2lkdGgnIDogJ2hlaWdodCdcbiAgICB9XG4gIFxuICAgIENvbGxhcHNlLnByb3RvdHlwZS5zaG93ID0gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKHRoaXMudHJhbnNpdGlvbmluZyB8fCB0aGlzLiRlbGVtZW50Lmhhc0NsYXNzKCdpbicpKSByZXR1cm5cbiAgXG4gICAgICB2YXIgYWN0aXZlc0RhdGFcbiAgICAgIHZhciBhY3RpdmVzID0gdGhpcy4kcGFyZW50ICYmIHRoaXMuJHBhcmVudC5jaGlsZHJlbignLmNvbGxhcHNlX190YWInKS5jaGlsZHJlbignLmluLCAuY29sbGFwc2luZycpXG4gIFxuICAgICAgaWYgKGFjdGl2ZXMgJiYgYWN0aXZlcy5sZW5ndGgpIHtcbiAgICAgICAgYWN0aXZlc0RhdGEgPSBhY3RpdmVzLmRhdGEoJ2JzLmNvbGxhcHNlJylcbiAgICAgICAgaWYgKGFjdGl2ZXNEYXRhICYmIGFjdGl2ZXNEYXRhLnRyYW5zaXRpb25pbmcpIHJldHVyblxuICAgICAgfVxuICBcbiAgICAgIHZhciBzdGFydEV2ZW50ID0gJC5FdmVudCgnc2hvdy5icy5jb2xsYXBzZScpXG4gICAgICB0aGlzLiRlbGVtZW50LnRyaWdnZXIoc3RhcnRFdmVudClcbiAgICAgIGlmIChzdGFydEV2ZW50LmlzRGVmYXVsdFByZXZlbnRlZCgpKSByZXR1cm5cbiAgXG4gICAgICBpZiAoYWN0aXZlcyAmJiBhY3RpdmVzLmxlbmd0aCkge1xuICAgICAgICBQbHVnaW4uY2FsbChhY3RpdmVzLCAnaGlkZScpXG4gICAgICAgIGFjdGl2ZXNEYXRhIHx8IGFjdGl2ZXMuZGF0YSgnYnMuY29sbGFwc2UnLCBudWxsKVxuICAgICAgfVxuICBcbiAgICAgIHZhciBkaW1lbnNpb24gPSB0aGlzLmRpbWVuc2lvbigpXG4gIFxuICAgICAgdGhpcy4kZWxlbWVudFxuICAgICAgICAucmVtb3ZlQ2xhc3MoJ2NvbGxhcHNlJylcbiAgICAgICAgLmFkZENsYXNzKCdjb2xsYXBzaW5nJylbZGltZW5zaW9uXSgwKVxuICAgICAgICAuYXR0cignYXJpYS1leHBhbmRlZCcsIHRydWUpXG4gIFxuICAgICAgdGhpcy4kdHJpZ2dlclxuICAgICAgICAucmVtb3ZlQ2xhc3MoJ2NvbGxhcHNlZCcpXG4gICAgICAgIC5hdHRyKCdhcmlhLWV4cGFuZGVkJywgdHJ1ZSlcbiAgXG4gICAgICB0aGlzLnRyYW5zaXRpb25pbmcgPSAxXG4gIFxuICAgICAgdmFyIGNvbXBsZXRlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLiRlbGVtZW50XG4gICAgICAgICAgLnJlbW92ZUNsYXNzKCdjb2xsYXBzaW5nJylcbiAgICAgICAgICAuYWRkQ2xhc3MoJ2NvbGxhcHNlIGluJylbZGltZW5zaW9uXSgnJylcbiAgICAgICAgdGhpcy50cmFuc2l0aW9uaW5nID0gMFxuICAgICAgICB0aGlzLiRlbGVtZW50XG4gICAgICAgICAgLnRyaWdnZXIoJ3Nob3duLmJzLmNvbGxhcHNlJylcbiAgICAgIH1cbiAgXG4gICAgICBpZiAoISQuc3VwcG9ydC50cmFuc2l0aW9uKSByZXR1cm4gY29tcGxldGUuY2FsbCh0aGlzKVxuICBcbiAgICAgIHZhciBzY3JvbGxTaXplID0gJC5jYW1lbENhc2UoWydzY3JvbGwnLCBkaW1lbnNpb25dLmpvaW4oJy0nKSlcbiAgXG4gICAgICB0aGlzLiRlbGVtZW50XG4gICAgICAgIC5vbmUoJ2JzVHJhbnNpdGlvbkVuZCcsICQucHJveHkoY29tcGxldGUsIHRoaXMpKVxuICAgICAgICAuZW11bGF0ZVRyYW5zaXRpb25FbmQoQ29sbGFwc2UuVFJBTlNJVElPTl9EVVJBVElPTilbZGltZW5zaW9uXSh0aGlzLiRlbGVtZW50WzBdW3Njcm9sbFNpemVdKVxuICAgIH1cbiAgXG4gICAgQ29sbGFwc2UucHJvdG90eXBlLmhpZGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAodGhpcy50cmFuc2l0aW9uaW5nIHx8ICF0aGlzLiRlbGVtZW50Lmhhc0NsYXNzKCdpbicpKSByZXR1cm5cbiAgXG4gICAgICB2YXIgc3RhcnRFdmVudCA9ICQuRXZlbnQoJ2hpZGUuYnMuY29sbGFwc2UnKVxuICAgICAgdGhpcy4kZWxlbWVudC50cmlnZ2VyKHN0YXJ0RXZlbnQpXG4gICAgICBpZiAoc3RhcnRFdmVudC5pc0RlZmF1bHRQcmV2ZW50ZWQoKSkgcmV0dXJuXG4gIFxuICAgICAgdmFyIGRpbWVuc2lvbiA9IHRoaXMuZGltZW5zaW9uKClcbiAgXG4gICAgICB0aGlzLiRlbGVtZW50W2RpbWVuc2lvbl0odGhpcy4kZWxlbWVudFtkaW1lbnNpb25dKCkpWzBdLm9mZnNldEhlaWdodFxuICBcbiAgICAgIHRoaXMuJGVsZW1lbnRcbiAgICAgICAgLmFkZENsYXNzKCdjb2xsYXBzaW5nJylcbiAgICAgICAgLnJlbW92ZUNsYXNzKCdjb2xsYXBzZSBpbicpXG4gICAgICAgIC5hdHRyKCdhcmlhLWV4cGFuZGVkJywgZmFsc2UpXG4gIFxuICAgICAgdGhpcy4kdHJpZ2dlclxuICAgICAgICAuYWRkQ2xhc3MoJ2NvbGxhcHNlZCcpXG4gICAgICAgIC5hdHRyKCdhcmlhLWV4cGFuZGVkJywgZmFsc2UpXG4gIFxuICAgICAgdGhpcy50cmFuc2l0aW9uaW5nID0gMVxuICBcbiAgICAgIHZhciBjb21wbGV0ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy50cmFuc2l0aW9uaW5nID0gMFxuICAgICAgICB0aGlzLiRlbGVtZW50XG4gICAgICAgICAgLnJlbW92ZUNsYXNzKCdjb2xsYXBzaW5nJylcbiAgICAgICAgICAuYWRkQ2xhc3MoJ2NvbGxhcHNlJylcbiAgICAgICAgICAudHJpZ2dlcignaGlkZGVuLmJzLmNvbGxhcHNlJylcbiAgICAgIH1cbiAgXG4gICAgICBpZiAoISQuc3VwcG9ydC50cmFuc2l0aW9uKSByZXR1cm4gY29tcGxldGUuY2FsbCh0aGlzKVxuICBcbiAgICAgIHRoaXMuJGVsZW1lbnRcbiAgICAgICAgW2RpbWVuc2lvbl0oMClcbiAgICAgICAgLm9uZSgnYnNUcmFuc2l0aW9uRW5kJywgJC5wcm94eShjb21wbGV0ZSwgdGhpcykpXG4gICAgICAgIC5lbXVsYXRlVHJhbnNpdGlvbkVuZChDb2xsYXBzZS5UUkFOU0lUSU9OX0RVUkFUSU9OKVxuICAgIH1cbiAgXG4gICAgQ29sbGFwc2UucHJvdG90eXBlLnRvZ2dsZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHRoaXNbdGhpcy4kZWxlbWVudC5oYXNDbGFzcygnaW4nKSA/ICdoaWRlJyA6ICdzaG93J10oKVxuICAgIH1cbiAgXG4gICAgQ29sbGFwc2UucHJvdG90eXBlLmdldFBhcmVudCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiAkKHRoaXMub3B0aW9ucy5wYXJlbnQpXG4gICAgICAgIC5maW5kKCdbZGF0YS10b2dnbGU9XCJjb2xsYXBzZVwiXVtkYXRhLXBhcmVudD1cIicgKyB0aGlzLm9wdGlvbnMucGFyZW50ICsgJ1wiXScpXG4gICAgICAgIC5lYWNoKCQucHJveHkoZnVuY3Rpb24gKGksIGVsZW1lbnQpIHtcbiAgICAgICAgICB2YXIgJGVsZW1lbnQgPSAkKGVsZW1lbnQpXG4gICAgICAgICAgdGhpcy5hZGRBcmlhQW5kQ29sbGFwc2VkQ2xhc3MoZ2V0VGFyZ2V0RnJvbVRyaWdnZXIoJGVsZW1lbnQpLCAkZWxlbWVudClcbiAgICAgICAgfSwgdGhpcykpXG4gICAgICAgIC5lbmQoKVxuICAgIH1cbiAgXG4gICAgQ29sbGFwc2UucHJvdG90eXBlLmFkZEFyaWFBbmRDb2xsYXBzZWRDbGFzcyA9IGZ1bmN0aW9uICgkZWxlbWVudCwgJHRyaWdnZXIpIHtcbiAgICAgIHZhciBpc09wZW4gPSAkZWxlbWVudC5oYXNDbGFzcygnaW4nKVxuICBcbiAgICAgICRlbGVtZW50LmF0dHIoJ2FyaWEtZXhwYW5kZWQnLCBpc09wZW4pXG4gICAgICAkdHJpZ2dlclxuICAgICAgICAudG9nZ2xlQ2xhc3MoJ2NvbGxhcHNlZCcsICFpc09wZW4pXG4gICAgICAgIC5hdHRyKCdhcmlhLWV4cGFuZGVkJywgaXNPcGVuKVxuICAgIH1cbiAgXG4gICAgZnVuY3Rpb24gZ2V0VGFyZ2V0RnJvbVRyaWdnZXIoJHRyaWdnZXIpIHtcbiAgICAgIHZhciBocmVmXG4gICAgICB2YXIgdGFyZ2V0ID0gJHRyaWdnZXIuYXR0cignZGF0YS10YXJnZXQnKVxuICAgICAgICB8fCAoaHJlZiA9ICR0cmlnZ2VyLmF0dHIoJ2hyZWYnKSkgJiYgaHJlZi5yZXBsYWNlKC8uKig/PSNbXlxcc10rJCkvLCAnJykgLy8gc3RyaXAgZm9yIGllN1xuICBcbiAgICAgIHJldHVybiAkKHRhcmdldClcbiAgICB9XG4gIFxuICBcbiAgICAvLyBDT0xMQVBTRSBQTFVHSU4gREVGSU5JVElPTlxuICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09XG4gIFxuICAgIGZ1bmN0aW9uIFBsdWdpbihvcHRpb24pIHtcbiAgICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgJHRoaXMgICA9ICQodGhpcylcbiAgICAgICAgdmFyIGRhdGEgICAgPSAkdGhpcy5kYXRhKCdicy5jb2xsYXBzZScpXG4gICAgICAgIHZhciBvcHRpb25zID0gJC5leHRlbmQoe30sIENvbGxhcHNlLkRFRkFVTFRTLCAkdGhpcy5kYXRhKCksIHR5cGVvZiBvcHRpb24gPT0gJ29iamVjdCcgJiYgb3B0aW9uKVxuICBcbiAgICAgICAgaWYgKCFkYXRhICYmIG9wdGlvbnMudG9nZ2xlICYmIC9zaG93fGhpZGUvLnRlc3Qob3B0aW9uKSkgb3B0aW9ucy50b2dnbGUgPSBmYWxzZVxuICAgICAgICBpZiAoIWRhdGEpICR0aGlzLmRhdGEoJ2JzLmNvbGxhcHNlJywgKGRhdGEgPSBuZXcgQ29sbGFwc2UodGhpcywgb3B0aW9ucykpKVxuICAgICAgICBpZiAodHlwZW9mIG9wdGlvbiA9PSAnc3RyaW5nJykgZGF0YVtvcHRpb25dKClcbiAgICAgIH0pXG4gICAgfVxuICBcbiAgICB2YXIgb2xkID0gJC5mbi5jb2xsYXBzZVxuICBcbiAgICAkLmZuLmNvbGxhcHNlICAgICAgICAgICAgID0gUGx1Z2luXG4gICAgJC5mbi5jb2xsYXBzZS5Db25zdHJ1Y3RvciA9IENvbGxhcHNlXG4gIFxuICBcbiAgICAvLyBDT0xMQVBTRSBOTyBDT05GTElDVFxuICAgIC8vID09PT09PT09PT09PT09PT09PT09XG4gIFxuICAgICQuZm4uY29sbGFwc2Uubm9Db25mbGljdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICQuZm4uY29sbGFwc2UgPSBvbGRcbiAgICAgIHJldHVybiB0aGlzXG4gICAgfVxuICBcbiAgXG4gICAgLy8gQ09MTEFQU0UgREFUQS1BUElcbiAgICAvLyA9PT09PT09PT09PT09PT09PVxuICBcbiAgICAkKGRvY3VtZW50KS5vbignY2xpY2suYnMuY29sbGFwc2UuZGF0YS1hcGknLCAnW2RhdGEtdG9nZ2xlPVwiY29sbGFwc2VcIl0nLCBmdW5jdGlvbiAoZSkge1xuICAgICAgdmFyICR0aGlzICAgPSAkKHRoaXMpXG4gIFxuICAgICAgaWYgKCEkdGhpcy5hdHRyKCdkYXRhLXRhcmdldCcpKSBlLnByZXZlbnREZWZhdWx0KClcbiAgXG4gICAgICB2YXIgJHRhcmdldCA9IGdldFRhcmdldEZyb21UcmlnZ2VyKCR0aGlzKVxuICAgICAgdmFyIGRhdGEgICAgPSAkdGFyZ2V0LmRhdGEoJ2JzLmNvbGxhcHNlJylcbiAgICAgIHZhciBvcHRpb24gID0gZGF0YSA/ICd0b2dnbGUnIDogJHRoaXMuZGF0YSgpXG4gIFxuICAgICAgUGx1Z2luLmNhbGwoJHRhcmdldCwgb3B0aW9uKVxuICAgIH0pXG4gIFxuICB9KGpRdWVyeSk7XG4gICQoJy5qcy1oaWRlLWZpbHRlcicpLm9uKCdjbGljaycsZnVuY3Rpb24oZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB2YXIgJHRoaXMgPSAkKCB0aGlzICk7XG4gICAgaWYgKCAkKCcuZmlsdGVyX19pbnB1dC1ncm91cC0tYWRkJykuaGFzQ2xhc3MoJ2pzLWlzVmlzaWJsZScpICkge1xuICAgICAgJCgnLmZpbHRlcl9faW5wdXQtZ3JvdXAtLWFkZCcpLnJlbW92ZUNsYXNzKCdqcy1pc1Zpc2libGUnKTtcbiAgICAgICR0aGlzLnJlbW92ZUNsYXNzKCdpU29wZW5lZCcpO1xuICAgIH0gZWxzZSB7XG4gICAgICAkKCcuZmlsdGVyX19pbnB1dC1ncm91cC0tYWRkJykuYWRkQ2xhc3MoJ2pzLWlzVmlzaWJsZScpOyAgICAgIFxuICAgICAgJHRoaXMuYWRkQ2xhc3MoJ2lTb3BlbmVkJyk7XG4gICAgfVxuICB9KTtcbiAgaWYgKCQoJyNjb3VudGVyJykubGVuZ3RoICkge1xuICAgIHZhciBhID0gMDtcbiAgICAkKHdpbmRvdykuc2Nyb2xsKGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIG9Ub3AgPSAkKCcjY291bnRlcicpLm9mZnNldCgpLnRvcCAtIHdpbmRvdy5pbm5lckhlaWdodDtcbiAgICAgIGlmIChhID09IDAgJiYgJCh3aW5kb3cpLnNjcm9sbFRvcCgpID4gb1RvcCkge1xuICAgICAgICAkKCcuY291bnRlci12YWx1ZScpLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgdmFyICR0aGlzID0gJCh0aGlzKSwgY291bnRUbyA9ICR0aGlzLmF0dHIoJ2RhdGEtY291bnQnKTtcbiAgICAgICAgICAkKHtjb3VudE51bTogJHRoaXMudGV4dCgpfSkuYW5pbWF0ZSh7IGNvdW50TnVtOiBjb3VudFRvfSwge1xuICAgICAgICAgICAgICBkdXJhdGlvbjogMjAwMCxcbiAgICAgICAgICAgICAgZWFzaW5nOiAnc3dpbmcnLFxuICAgICAgICAgICAgICBzdGVwOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAkdGhpcy50ZXh0KE1hdGguZmxvb3IodGhpcy5jb3VudE51bSkpO1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBjb21wbGV0ZTogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgJHRoaXMudGV4dCh0aGlzLmNvdW50TnVtKTtcbiAgICAgICAgICAgICAgICAvL2FsZXJ0KCdmaW5pc2hlZCcpO1xuICAgICAgICAgICAgICAgICQoJy5zdGF0aXN0aWNzX19jYXJkLXRleHQnKS5hZGRDbGFzcygnaXNBbmltYXRlZCcpO1xuICAgICAgICAgICAgICAgICQoJy5oaXN0b3J5X19jYXJkLXRleHQnKS5hZGRDbGFzcygnaXNBbmltYXRlZCcpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgICBhID0gMTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICArZnVuY3Rpb24oKXtcbiAgXG4gICAgICBmdW5jdGlvbiBtb2RBY3Rpb24oaXRlbSwgYWN0aW9uKSB7XG4gICAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICAgICAgaXRlbTogaXRlbSxcbiAgICAgICAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHVybDogY29uZmlnLmZhdm9yaXRlTW9kLFxuICAgICAgICAgICAgICBkYXRhVHlwZTogJ2pzb24nLFxuICAgICAgICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgICAgICAgICAgaWYgKGRhdGEuc3VjY2Vzcykge1xuICAgICAgICAgICAgICAgICAgICAgIHZhciBlbHMgPSAkKCcuanMtYWRkX2Zhdm9yaXRlW2RhdGEtaXRlbT0nICsgaXRlbSArICddJyk7XG4gICAgICBcbiAgICAgICAgICAgICAgICAgICAgICBpZiAoYWN0aW9uID09ICdhZGQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGVscy5hZGRDbGFzcygnaXMtZmF2b3JpdGUnKTtcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICBcbiAgICAgICAgICAgICAgICAgICAgICBpZiAoYWN0aW9uID09ICdyZW1vdmUnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGVscy5yZW1vdmVDbGFzcygnaXMtZmF2b3JpdGUnKTtcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gIFxuICAgICAgICAgICAgICAgICAgICAgICQoJy5qcy10b3Bfc2hvd19pemJyYW5ub2UnKVsgZGF0YS5lbXB0eSA/ICdyZW1vdmVDbGFzcycgOiAnYWRkQ2xhc3MnIF0oJ2hvdmVyJyk7XG4gICAgICAgICAgICAgICAgICB9XG4gIFxuICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgIH1cbiAgXG4gICAgICBmdW5jdGlvbiB1cGRhdGVMaXN0KCkge1xuICAgICAgICAgICQuYWpheCh7XG4gICAgICAgICAgdXJsOiBjb25maWcuZmF2b3JpdGVMaXN0LCAgICAgICAgICAgICBcbiAgICAgICAgICBkYXRhVHlwZSA6IFwiaHRtbFwiLCAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgJCgnI2l6YnJhbm5vZSAudGFiX19ibG9ja1tkYXRhLWNvbnRlbnQ9XCJsaXN0XCJdJykuaHRtbCggZGF0YSApO1xuICAgICAgICAgIH0gXG4gICAgICAgICAgfSk7IFxuICAgICAgfVxuICBcbiAgICAgIC8vINGD0LTQsNC70LXQvdC40LUg0LjQtyDQuNC30LHRgNCw0L3QvdC+0LPQviAo0LjQtyDQstGB0L/Qu9GL0LLQsNGI0LrQuClcbiAgICAgICQoJ2JvZHknKS5vbignY2xpY2snLCAnLmpzLXJlbW92ZV9mYXZvcml0ZScsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgdmFyIGVsID0gJCh0aGlzKTtcbiAgICAgICAgICB2YXIgaXRlbSA9IGVsLmRhdGEoJ2l0ZW0nKTtcbiAgXG4gICAgICAgICAgbW9kQWN0aW9uKGl0ZW0sICdyZW1vdmUnKTtcbiAgICAgICAgICBlbC5jbG9zZXN0KCcubGluZScpLnJlbW92ZSgpO1xuICBcbiAgICAgICAgICBpZiAoISQoJyNpemJyYW5ub2UgLmxpbmUnKS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgJCgnLmpzLWl6YnJhbm5vZV9lbXB0eScpLnNob3coKTtcbiAgICAgICAgICB9XG4gICAgICB9KTtcbiAgXG4gICAgICAvLyDQv9C+0LrQsNC3INCy0YHQv9C70YvQstCw0YjQutC4XG4gICAgICAkKCcuanMtbW9kYWxfX2J0bltkYXRhLW1vZGFsPVwiaXpicmFubm9lXCJdJykub24oJ2NsaWNrJywgdXBkYXRlTGlzdCk7XG4gIFxuICAgICAgLy8g0LrQvdC+0L/QutCwINC00L7QsdCw0LLQu9C10L3QuNGPINCyINC40LfQsdGA0LDQvdC90L7QtVxuICAgICAgJCgnYm9keScpLm9uKCdjbGljaycsICcuanMtYWRkX2Zhdm9yaXRlJywgZnVuY3Rpb24oZSkge1xuICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICB2YXIgZWwgPSAkKHRoaXMpO1xuICBcbiAgICAgICAgICBpZiAoZWwuaGFzQ2xhc3MoJ2lzLWZhdm9yaXRlJykpIHtcbiAgICAgICAgICAgICAgdmFyIGFjdGlvbiA9ICdyZW1vdmUnO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHZhciBhY3Rpb24gPSAnYWRkJztcbiAgICAgICAgICB9XG4gICAgICAgICAgdmFyIGl0ZW0gPSBlbC5kYXRhKCdpdGVtJyk7XG4gIFxuICAgICAgICAgIG1vZEFjdGlvbihpdGVtLCBhY3Rpb24pO1xuICAgICAgfSk7XG4gIH0oKTtcbiAgXG4gIFxuICAkKCcjZm9ybS1lZ3JuJykub2ZmKCdzdWJtaXQnKS5vbignc3VibWl0JywgZnVuY3Rpb24oZSkge1xuICAgICQoJyNlZ3JuJykuYWRkQ2xhc3MoJ2lzT3BlbmVkJyk7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHZhciBmb3JtID0gdGhpcztcbiAgXG4gICAgJC5hamF4KHtcbiAgICAgIGRhdGE6ICQoZm9ybSkuc2VyaWFsaXplKCksXG4gICAgICBtZXRob2Q6IGZvcm0ubWV0aG9kLFxuICAgICAgdXJsOiBmb3JtLmFjdGlvbiwgICAgICAgICAgICAgXG4gICAgICBkYXRhVHlwZSA6IFwiaHRtbFwiLCAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgJCgnI2Vncm4gLm1vZGFsX19jb250ZW50JykuaHRtbCggZGF0YSApO1xuICAgICAgICBmb3JtLnJlc2V0KCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH0pO1xuICBcbiAgXG4gICQoJy5qcy1tb2RhbF9fYnRuW2RhdGEtbW9kYWw9XCJlbXBsb3llZVwiXScpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCl7XG4gICAgdmFyICR0aGlzID0gJCggdGhpcyApO1xuICAgIHZhciBuYW1lID0gJHRoaXMuYXR0cihcImRhdGEtbmFtZVwiKTtcbiAgICAkLmFqYXgoe1xuICAgICAgdXJsOiBjb25maWcuZW1wTmFtZSArIG5hbWUsICAgICAgICAgICAgIFxuICAgICAgZGF0YVR5cGUgOiBcImh0bWxcIiwgICAgICAgICAgICAgICAgICAgIFxuICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgJCgnLm1vZGFsX19jb250ZW50JykuaHRtbCggZGF0YSApO1xuICAgICAgfVxuICAgIH0pO1xuICB9KTtcbiAgXG4gIFxuICAkKFwiI2NvbnN1bHQgZm9ybSwjZm9ybS1vdHp5diwjc2VsbCBmb3JtXCIpLm9mZignc3VibWl0Jykub24oJ3N1Ym1pdCcsIGZ1bmN0aW9uKGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgdmFyIGZvcm0gPSB0aGlzO1xuICBcbiAgICAkLmFqYXgoe1xuICAgICAgZGF0YTogJChmb3JtKS5zZXJpYWxpemUoKSxcbiAgICAgIG1ldGhvZDogZm9ybS5tZXRob2QsXG4gICAgICB1cmw6IGZvcm0uYWN0aW9uLCAgICAgXG4gICAgICBkYXRhVHlwZTogXCJodG1sXCIsXG4gICAgICBzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7XG4gIFxuICAgICAgICAkKCQoZm9ybSkuZGF0YSgnY29udCcpICsgJyAubW9kYWxfX2NvbnRlbnQnKS5odG1sKCBkYXRhICk7XG4gICAgICB9LFxuICAgICAgZXJyb3I6IGZ1bmN0aW9uIChlcnIpIHsgXG4gICAgICAgICQoJChmb3JtKS5kYXRhKCdjb250JykgKyAnIC5tb2RhbF9fY29udGVudCcpLmh0bWwoIGRhdGEgKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH0pXG4gICQoJyNjb250YWN0cycpLm9mZignc3VibWl0Jykub24oJ3N1Ym1pdCcsIGZ1bmN0aW9uKGUpIHtcbiAgICAkKCcjY29udGFjdHMtbW9kYWwnKS5hZGRDbGFzcygnaXNPcGVuZWQnKTtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgdmFyIGZvcm0gPSB0aGlzO1xuICBcbiAgICAkLmFqYXgoe1xuICAgICAgZGF0YTogJChmb3JtKS5zZXJpYWxpemUoKSxcbiAgICAgIG1ldGhvZDogZm9ybS5tZXRob2QsXG4gICAgICB1cmw6IGZvcm0uYWN0aW9uLCAgICAgICAgICAgICBcbiAgICAgIGRhdGFUeXBlIDogXCJodG1sXCIsICAgICAgICAgICAgICAgICAgICBcbiAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICQoJy5tb2RhbF9fY29udGVudCcpLmh0bWwoIGRhdGEgKTtcbiAgICAgICAgZm9ybS5yZXNldCgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9KTsgXG4gIFxuICAkKCcjaGVscF9zaWRlYmFyX2Zvcm0nKS5vZmYoJ3N1Ym1pdCcpLm9uKCdzdWJtaXQnLCBmdW5jdGlvbihlKSB7XG4gICAgJCgnI2hlbHAtbW9kYWwnKS5hZGRDbGFzcygnaXNPcGVuZWQnKTtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgdmFyIGZvcm0gPSB0aGlzO1xuICBcbiAgICAkLmFqYXgoe1xuICAgICAgZGF0YTogJChmb3JtKS5zZXJpYWxpemUoKSxcbiAgICAgIG1ldGhvZDogZm9ybS5tZXRob2QsXG4gICAgICB1cmw6IGZvcm0uYWN0aW9uLCAgICAgICAgICAgICBcbiAgICAgIGRhdGFUeXBlIDogXCJodG1sXCIsICAgICAgICAgICAgICAgICAgICBcbiAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICQoJy5tb2RhbF9fY29udGVudCcpLmh0bWwoIGRhdGEgKTtcbiAgICAgICAgZm9ybS5yZXNldCgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9KTtcbiAgLy9kcm9wem9uZS1wcmV2aWV3c1xuICAkKCcuZHJvcHpvbmUtaW1hZ2VzJykuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgIHZhciBhcmVhID0gJCh0aGlzKTtcbiAgICAgIHZhciBwYXJhbSA9IGFyZWEuZGF0YSgncGFyYW0nKTtcbiAgXG4gICAgICBhcmVhLmFkZENsYXNzKFwiZHJvcHpvbmVcIikuZHJvcHpvbmUoe1xuICAgICAgICAgIGFkZFJlbW92ZUxpbmtzOiB0cnVlLCBcbiAgICAgICAgICBhY2NlcHRlZEZpbGVzOiAnaW1hZ2UvKicsXG4gICAgICAgICAgY2xpY2thYmxlOiB0cnVlLFxuICAgICAgICAgIHRodW1ibmFpbFdpZHRoOiAxMjAsXG4gICAgICAgICAgdGh1bWJuYWlsSGVpZ2h0OiAxMjAsXG4gICAgICAgICAgbWF4RmlsZXM6IGFyZWEuZGF0YSgnbWF4ZmlsZXMnKSwgLy8g0LzQsNC60YHQuNC80LDQu9GM0L3QvtC1INC60L7Quy3QstC+INGE0LDQudC70L7QslxuICAgICAgICAgIGNyZWF0ZUltYWdlVGh1bWJuYWlsczogdHJ1ZSxcbiAgICAgICAgICBwYXJhbU5hbWU6ICdmaWxlJywgLy8gVGhlIG5hbWUgdGhhdCB3aWxsIGJlIHVzZWQgdG8gdHJhbnNmZXIgdGhlIGZpbGVcbiAgICAgICAgICB1cmw6IGFyZWEuZGF0YSgndXBsb2FkJyksXG4gICAgICAgICAgZGljdFJlbW92ZUZpbGU6ICfQo9C00LDQu9C10L3QuNC1INGE0L7RgtC+0LPRgNCw0YTQuNC4JyxcbiAgICAgICAgICBkaWN0RGVmYXVsdE1lc3NhZ2U6ICfQn9C10YDQtdGC0LDRidC40YLQtSDRgdGO0LTQsCDRhNC+0YLQvtCz0YDQsNGE0LjQuCDQuNC70Lgg0LrQu9C40LrQvdC40YLQtTxicj4g0LTQu9GPINC30LDQs9GA0YPQt9C60Lgg0YTQsNC50LvQvtCyPGJyPjxicj5cXFxuICAgICAgICAgICAgICAo0LzQsNC60YHQuNC80YPQvCAnICsgYXJlYS5kYXRhKCdtYXhmaWxlcycpICsgJyDRhNC+0YLQvtCz0YDQsNGE0LjQuSknLFxuICAgICAgICAgIGRpY3RGaWxlVG9vQmlnOiAn0J/RgNC10LLRi9GI0LXQvSDQtNC+0L/Rg9GB0YLQuNC80YvQuSDRgNCw0LfQvNC10YAg0YTQsNC50LvQsDoge3ttYXhGaWxlc2l6ZX19INCc0LEnLFxuICAgICAgICAgIGRpY3RNYXhGaWxlc0V4Y2VlZGVkOiAn0J/RgNC10LLRi9GI0LXQvdC+INC80LDQutGB0LjQvNCw0LvRjNC90L7QtSDQutC+0Lst0LLQviDRhNC+0YLQvtCz0YDQsNGE0LjQuSDQtNC70Y8g0LfQsNCz0YDRg9C30LrQuDoge3ttYXhGaWxlc319JyxcbiAgICAgICAgICBkaWN0SW52YWxpZEZpbGVUeXBlOiAn0JLRiyDQvdC1INC80L7QttC10YLQtSDQtNC+0LHQsNCy0LjRgtGMINGE0LDQudC70Ysg0Y3RgtC+0LPQviDRgtC40L/QsCcsXG4gICAgICAgICAgZGljdENhbmNlbFVwbG9hZDogJ9Ce0YLQvNC10L3QuNGC0Ywg0LfQsNCz0YDRg9C30LrRgycsXG4gICAgICAgICAgZGljdFVwbG9hZENhbmNlbGVkOiAn0JfQsNCz0YDRg9C30LrQsCDQvtGC0LzQtdC90LXQvdCwJyxcbiAgICAgICAgICBtYXhGaWxlc2l6ZTogMiwgLy8gbWJcbiAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbihmaWxlLCByZXNwb25zZSkge1xuICAgICAgICAgICAgICB2YXIgcGUgPSAkKGZpbGUucHJldmlld0VsZW1lbnQpO1xuICBcbiAgICAgICAgICAgICAgcmVzcG9uc2UuYWRkZWQuZm9yRWFjaChmdW5jdGlvbihpZCkge1xuICAgICAgICAgICAgICAgICAgcGUuYXBwZW5kKCc8aW5wdXQgdHlwZT1cImhpZGRlblwiIG5hbWU9XCInICsgcGFyYW0gKyAnW11cIiB2YWx1ZT1cIicgKyBpZCArICdcIj4nKTtcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgfSk7XG4gIH0pO1xuICAkKCcuanMtdGFiLWNoYW5nZS12YWx1ZScpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuICAgICAgdmFyICR0aGlzID0gJCggdGhpcyApO1xuICBcbiAgICAgIHZhciBidXR0b25zID0gJHRoaXMuY2xvc2VzdCgnLnRhYicpLmZpbmQoJy5qcy10YWItY2hhbmdlLXZhbHVlJyk7XG4gICAgICAvLyDQstC40LfRg9Cw0LvRjNC90L4g0Y3RgtC+INC00L7Qu9C20L3QviDQstGL0LPQu9GP0LTQtdGC0Ywg0LrQsNC6INC/0LXRgNC10LrQu9GO0YfQtdC90LjQtSDRgtCw0LHQvtCyXG4gICAgICBidXR0b25zLnJlbW92ZUNsYXNzKCdqcy1hY3RpdmUnKTtcbiAgICAgICR0aGlzLmFkZENsYXNzKCdqcy1hY3RpdmUnKTtcbiAgXG4gICAgICB2YXIgZm9ybSA9ICQoJHRoaXMuZGF0YSgnZm9ybScpKTtcbiAgICAgIGZvcm0ucmVtb3ZlQ2xhc3MoKVxuICAgICAgICAgIC5hZGRDbGFzcygnbW9kZS0nICsgJHRoaXMuZGF0YSgndmFsdWUnKSlcbiAgICAgICAgICAuZmluZCgkdGhpcy5kYXRhKCdpbnB1dCcpKVxuICAgICAgICAgIC52YWwoJHRoaXMuZGF0YSgndmFsdWUnKSk7XG4gIFxuICB9KTtcbiAgLy8gJCgnLmpzLW5hdi1saW5rJykuaG92ZXIoZnVuY3Rpb24oKSB7XG4gIC8vICAgdmFyICR0aGlzID0gJCggdGhpcyApO1xuICAvLyAgIC8vIHZhciBsaW5rID0gJHRoaXMuYXR0cignZGF0YS1saW5rJyk7XG4gIC8vICAgLy8gaWYgKCAkKCcuaGVhZGVyX19kcm9wZG93bltkYXRhLWRyb3A9XCInK2xpbmsrJ1wiXScpLmhhc0NsYXNzKCdpc09wZW5lZCcpICkge1xuICAvLyAgIC8vICAgJCgnLmhlYWRlcl9fZHJvcGRvd25bZGF0YS1kcm9wPVwiJytsaW5rKydcIl0nKS5yZW1vdmVDbGFzcygnaXNPcGVuZWQnKTtcbiAgLy8gICAvLyB9IGVsc2Uge1xuICAvLyAgIC8vICAgJCgnLmhlYWRlcl9fZHJvcGRvd25bZGF0YS1kcm9wPVwiJytsaW5rKydcIl0nKS5hZGRDbGFzcygnaXNPcGVuZWQnKTtcbiAgLy8gICAvLyB9XG4gIC8vICAgaWYgKCAkdGhpcy5maW5kKCcuaGVhZGVyX19kcm9wZG93bicpLmhhc0NsYXNzKCdpc09wZW5lZCcpICkge1xuICAvLyAgICAgJHRoaXMuZmluZCgnLmhlYWRlcl9fZHJvcGRvd24nKS5yZW1vdmVDbGFzcygnaXNPcGVuZWQnKTtcbiAgLy8gICB9IGVsc2Uge1xuICAvLyAgICAgJHRoaXMuZmluZCgnLmhlYWRlcl9fZHJvcGRvd24nKS5hZGRDbGFzcygnaXNPcGVuZWQnKTtcbiAgLy8gICB9XG4gIC8vIH0pXG4gIFxuICAvLyBpZiAoICQoJy5oZWFkZXJfX2Ryb3Bkb3duLmlzT3BlbmVkJykgKSB7XG4gIC8vICAgY29uc29sZS5sb2coXCJoZXBwZW5zXCIpXG4gIC8vICAgJChkb2N1bWVudCkub24oJ2NsaWNrJywgZnVuY3Rpb24oZSkge1xuICAvLyAgICAgaWYgKCAhJChlLnRhcmdldCkuY2xvc2VzdCgnLmhlYWRlcl9fZHJvcGRvd24uaXNPcGVuZWQnKS5sZW5ndGgpIHtcbiAgLy8gICAgICAgJCgnLmhlYWRlcl9fZHJvcGRvd24uaXNPcGVuZWQnKS5yZW1vdmVDbGFzcygnaXNPcGVuJyk7XG4gIC8vICAgICB9XG4gIC8vICAgfSk7XG4gIC8vIH1cbiAgJCgnLmpzLWhlYWRlci1tZW51Jykub24oJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gICAgJCgnLmhlYWRlcl9fc2lkZScpLmFkZENsYXNzKCdpc09wZW5lZCcpO1xuICB9KVxuICBcbiAgJCgnLnNpZGUtbW9kYWwnKS5vbignY2xpY2snLCBmdW5jdGlvbihlKSB7XG4gICAgaWYgKCAhJChlLnRhcmdldCkuY2xvc2VzdCgnLnNpZGUtbW9kYWxfX3dyYXBwZXInKS5sZW5ndGgpIHtcbiAgICAgICQoJy5zaWRlLW1vZGFsJykucmVtb3ZlQ2xhc3MoJ2lzT3BlbmVkJyk7XG4gICAgfVxuICB9KVxuICBcbiAgJCgnI21vZGFsLWNsb3NlLW1lbnUnKS5vbignY2xpY2snLCBmdW5jdGlvbihlKSB7XG4gICAgdmFyICR0aGlzID0gJCggdGhpcyApO1xuICAgICR0aGlzLmNsb3Nlc3QoJy5zaWRlLW1vZGFsJykucmVtb3ZlQ2xhc3MoJ2lzT3BlbmVkJyk7XG4gIH0pXG4gIGlmICgkKCcuaGlzdG9yeV9fd3JhcHBlcicpLmxlbmd0aCkge1xuICAgICAgdmFyIGF4ID0gMDtcbiAgICAgIHZhciBoYW5kbGVyID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgdmFyIG9Ub3AgPSAkKCcuaGlzdG9yeV9fd3JhcHBlcicpLm9mZnNldCgpLnRvcCAtIHdpbmRvdy5pbm5lckhlaWdodDtcbiAgICAgICAgICBpZiAoYXggPT0gMCAmJiAkKHdpbmRvdykuc2Nyb2xsVG9wKCkgPiBvVG9wKSB7XG4gICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAkKCcuaGlzdG9yeV9fY2FyZC1oZWFkZXInKS5hZGRDbGFzcygnaXNBbmltYXRlZCcpO1xuICBcbiAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgJCgnLmhpc3RvcnlfX2NhcmQtdGV4dCcpLmFkZENsYXNzKCdpc0FuaW1hdGVkJyk7XG4gICAgICAgICAgICAgICAgICB9LCAxMDAwKTtcbiAgICAgICAgICAgICAgfSwgNTAwKTtcbiAgXG4gICAgICAgICAgICAgIGF4ID0gMTtcbiAgICAgICAgICB9XG4gICAgICAgIH07XG4gIFxuICAgICAgJCh3aW5kb3cpLnNjcm9sbChoYW5kbGVyKTtcbiAgICAgIGhhbmRsZXIoKTtcbiAgfVxuICBcbiAgLy8gMi4g0J/QvtC00YHRgtCw0L3QvtCy0LrQsCDQt9C90LDRh9C10L3QuNGPINC10YHQu9C4INC+0L3QviDRg9C60LDQt9Cw0L3QviDQsiDQuNC90L/Rg9GC0LVcbiAgJCgnLmpzLXNlbGVjdC1idG4nKS5lYWNoKGZ1bmN0aW9uKCkge1xuICAgIHZhciBidXR0b24gPSAkKHRoaXMpO1xuICAgIHZhciB3cmFwcGVyID0gYnV0dG9uLmNsb3Nlc3QoJy5maWx0ZXJfX2lucHV0LXdyYXAnKTtcbiAgXG4gICAgLy8gMi4xINC/0L7Qu9GD0YfQsNC10Lwg0LfQvdCw0YfQtdC90LjQtSDQuNC90L/Rg9GC0LBcbiAgICB2YXIgdmFsdWUgPSB3cmFwcGVyLmZpbmQoJ2lucHV0JykudmFsKCk7XG4gIFxuICAgIC8vIDIuMiDQv9C10YDQtdCx0LjRgNCw0LXQvCDQt9C90LDRh9C10L3QuNGPINGB0LXQu9C10LrRgtCwXG4gICAgd3JhcHBlci5maW5kKCcuanMtc2VsZWN0LWJsb2NrIC5qcy1zZWxlY3QtaXRlbScpLnJlbW92ZUNsYXNzKFwianMtc2VsZWN0ZWRcIikuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgIHZhciBpdGVtID0gJCh0aGlzKTtcbiAgXG4gICAgICBpZiAodmFsdWUgPT0gaXRlbS5kYXRhKCd2YWx1ZScpKSB7XG4gICAgICAgIGJ1dHRvbi50ZXh0KGl0ZW0udGV4dCgpKTtcbiAgICAgICAgaXRlbS5hZGRDbGFzcygnanMtc2VsZWN0ZWQnKTtcbiAgICAgICAgd3JhcHBlci5maW5kKCcuZmlsdGVyX19mbG9hdGluZy1sYWJlbCcpLmFkZENsYXNzKCdmbG9hdGVkJyk7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSk7XG4gIFxuICAvLyAzLiDQstGL0YHQvtGC0LAg0LjQvdC/0YPRgtC+0LIg0L7Qs9GA0LDQvdC40YfQtdC90LBcbiAgXG4gIC8vIDQuINCo0LjRgNC40L3QsCDQuNC90L/Rg9GC0L7QsiDRgNCw0LfQvdCw0Y9cbiAgXG4gIC8vd2hlbiBjbGlja2luZy90b2dnbGluZyBkcm9wZG93biBtZW51IGJ0blxuICAkKCcuanMtc2VsZWN0LWJ0bicpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuICAgIHZhciAkdGhpcyA9ICQoIHRoaXMgKTtcbiAgICB2YXIgc3libGluZyA9ICR0aGlzLmNsb3Nlc3QoJy5maWx0ZXJfX2lucHV0LWJsb2NrJykuZmluZCgnLmpzLXNlbGVjdC1ibG9jaycpO1xuICAgIGlmICggc3libGluZy5oYXNDbGFzcygnaXNPcGVuJykgKSB7XG4gICAgICAkdGhpcy5hZGRDbGFzcygnaXNDbG9zZWQnKTtcbiAgICAgICR0aGlzLnJlbW92ZUNsYXNzKCdpc09wZW4nKTtcbiAgICAgIHN5YmxpbmcucmVtb3ZlQ2xhc3MoJ2lzT3BlbicpO1xuICAgIH0gZWxzZSB7XG4gICAgICAkKCcuanMtc2VsZWN0LWJsb2NrJykucmVtb3ZlQ2xhc3MoJ2lzT3BlbicpO1xuICAgICAgJCgnLmpzLXNlbGVjdC1idG4nKS5yZW1vdmVDbGFzcygnaXNPcGVuJyk7ICAgIFxuICAgICAgJHRoaXMuYWRkQ2xhc3MoJ2lzT3BlbicpO1xuICAgICAgc3libGluZy5hZGRDbGFzcygnaXNPcGVuJyk7XG4gICAgfVxuICBcbiAgICB2YXIgJGJsb2NrID0gJHRoaXMuY2xvc2VzdCgnLmZpbHRlcl9faW5wdXQtYmxvY2snKTtcbiAgICB2YXIgJGV4aXN0ID0gJGJsb2NrLmZpbmQoJy5maWx0ZXJfX2VtcHR5Jyk7XG4gICAgdmFyIGVtcHR5ID0gXCI8c3BhbiBjbGFzcz0nZmlsdGVyX19lbXB0eSc+0J/QvtC70LUg0L7QsdGP0LfQsNGC0LXQu9GM0L3QviDQtNC70Y8g0LfQsNC/0L7Qu9C90LXQvdC40Y88L3NwYW4+XCJcbiAgICBpZiAoICEkZXhpc3QubGVuZ3RoICkge1xuICAgICAgaWYgKCAkYmxvY2suZmluZCgnLmpzLWZpbHRlci1oaWRkZW4nKS5wcm9wKCdyZXF1aXJlZCcpKSB7XG4gICAgICAgIGlmICggISRibG9jay5maW5kKCcuanMtZmlsdGVyLWhpZGRlbicpLnZhbCgpICkge1xuICAgICAgICAgICRibG9jay5maW5kKCcuZmlsdGVyX19pbnB1dC13cmFwJykuYXBwZW5kKCBlbXB0eSApO1xuICAgICAgICAgICR0aGlzLmFkZENsYXNzKCdmaWx0ZXJfX2RhbmdlcicpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICRibG9jay5maW5kKCcuZmlsdGVyX19lbXB0eScpLnJlbW92ZSgpO1xuICAgICAgICAgICR0aGlzLnJlbW92ZUNsYXNzKCdmaWx0ZXJfX2RhbmdlcicpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSAgXG4gIH0pO1xuICBcbiAgLy93aGVuIGNsaWNraW5nIG9uIGl0ZW0gaW4gZHJvcGRvd24gbWVudVxuICAkKCcuanMtc2VsZWN0LWl0ZW0nKS5vbignY2xpY2snLCBmdW5jdGlvbigpIHtcbiAgICBcbiAgICB2YXIgJHRoaXMgPSAkKCB0aGlzICk7XG4gICAgJHRoaXMuYWRkQ2xhc3MoJ2pzLXNlbGVjdGVkJyk7XG4gICAgdmFyIHRleHQgPSAkdGhpcy50ZXh0KCk7XG4gICAgdmFyIHZhbHVlID0gJHRoaXMuZGF0YSgndmFsdWUnKTtcbiAgICB2YXIgZ3JvdXAgPSAkdGhpcy5hdHRyKCdkYXRhLWdyb3VwJyk7XG4gICAgJCgnLmpzLXNlbGVjdC1idG5bZGF0YS1ncm91cD1cIicgKyBncm91cCArICdcIl0nKS50ZXh0KHRleHQpO1xuICAgICR0aGlzLmNsb3Nlc3QoJy5maWx0ZXJfX2lucHV0LWJsb2NrJykuZmluZCgnLmpzLXNlbGVjdC1sYWJlbCcpLmFkZENsYXNzKCdmbG9hdGVkJyk7XG4gICAgJCgnLmpzLXNlbGVjdC1idG4uaXNPcGVuJykuYWRkQ2xhc3MoJ2lzQ2xvc2VkJyk7XG4gICAgJCgnLmpzLXNlbGVjdC1ibG9jay5pc09wZW4nKS5yZW1vdmVDbGFzcygnaXNPcGVuJyk7XG4gICAgJCgnLmpzLXNlbGVjdC1idG4uaXNPcGVuJykucmVtb3ZlQ2xhc3MoJ2lzT3BlbicpO1xuICAgICQoJy5qcy1maWx0ZXItaGlkZGVuW2RhdGEtZ3JvdXA9XCInICsgZ3JvdXAgKyAnXCJdJykudmFsKHZhbHVlKTsgICBcbiAgICBcbiAgICB2YXIgJGJsb2NrID0gJHRoaXMuY2xvc2VzdCgnLmZpbHRlcl9faW5wdXQtYmxvY2snKVxuICAgIGlmICggJGJsb2NrLmZpbmQoJy5qcy1maWx0ZXItaGlkZGVuJykucHJvcCgncmVxdWlyZWQnKSkge1xuICAgICAgdmFyIGVtcHR5ID0gXCI8c3BhbiBjbGFzcz0nZmlsdGVyX19lbXB0eSc+0J/QvtC70LUg0L7QsdGP0LfQsNGC0LXQu9GM0L3QviDQtNC70Y8g0LfQsNC/0L7Qu9C90LXQvdC40Y88L3NwYW4+XCJcbiAgICAgIGlmICggISRibG9jay5maW5kKCcuanMtZmlsdGVyLWhpZGRlbicpLnZhbCgpICkge1xuICAgICAgICAkYmxvY2suZmluZCgnLmZpbHRlcl9faW5wdXQtd3JhcCcpLmFwcGVuZCggZW1wdHkgKTtcbiAgICAgICAgJCgnLmpzLXNlbGVjdC1idG5bZGF0YS1ncm91cD1cIicgKyBncm91cCArICdcIl0nKS5hZGRDbGFzcygnZmlsdGVyX19kYW5nZXInKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgICRibG9jay5maW5kKCcuZmlsdGVyX19lbXB0eScpLnJlbW92ZSgpO1xuICAgICAgICAkKCcuanMtc2VsZWN0LWJ0bltkYXRhLWdyb3VwPVwiJyArIGdyb3VwICsgJ1wiXScpLnJlbW92ZUNsYXNzKCdmaWx0ZXJfX2RhbmdlcicpO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG4gIFxuICAvL3doZW4gY2xpY2tpbmcgb3V0c2lkZSB0aGUgaXRlbSBpbiBkcm9wZG93biBvciBkcm9wZG93biBidG4gXG4gIGlmICggJCgnLmpzLXNlbGVjdC1idG4uaXNPcGVuJykubGVuZ3RoID4gMCApIHtcbiAgICAkKGRvY3VtZW50KS5vbignY2xpY2snLCBmdW5jdGlvbihlKSB7XG4gICAgICBpZiAoICEkKGUudGFyZ2V0KS5jbG9zZXN0KCcuanMtc2VsZWN0LWJsb2NrLmlzT3BlbicpLmxlbmd0aCAmJiAhJChlLnRhcmdldCkuY2xvc2VzdCgnLmpzLXNlbGVjdC1idG4uaXNPcGVuJykubGVuZ3RoKSB7XG4gICAgICAgICQoJy5qcy1zZWxlY3QtYnRuLmlzT3BlbicpLmFkZENsYXNzKCdpc0Nsb3NlZCcpO1xuICAgICAgICAkKCcuanMtc2VsZWN0LWJsb2NrLmlzT3BlbicpLnJlbW92ZUNsYXNzKCdpc09wZW4nKTtcbiAgICAgICAgJCgnLmpzLXNlbGVjdC1idG4uaXNPcGVuJykucmVtb3ZlQ2xhc3MoJ2lzT3BlbicpO1xuICBcbiAgICAgICAgdmFyICR0aGlzID0gJCgnLmpzLXNlbGVjdC1idG4uaXNDbG9zZWQnKTtcbiAgICAgICAgdmFyICRibG9jayA9ICR0aGlzLmNsb3Nlc3QoJy5maWx0ZXJfX2lucHV0LWJsb2NrJyk7XG4gICAgICAgIHZhciAkZXhpc3QgPSAkYmxvY2suZmluZCgnLmZpbHRlcl9fZW1wdHknKTtcbiAgICAgICAgdmFyIGVtcHR5ID0gXCI8c3BhbiBjbGFzcz0nZmlsdGVyX19lbXB0eSc+0J/QvtC70LUg0L7QsdGP0LfQsNGC0LXQu9GM0L3QviDQtNC70Y8g0LfQsNC/0L7Qu9C90LXQvdC40Y88L3NwYW4+XCJcbiAgICAgICAgaWYgKCAhJGV4aXN0Lmxlbmd0aCApIHtcbiAgICAgICAgICBpZiAoICRibG9jay5maW5kKCcuanMtZmlsdGVyLWhpZGRlbicpLnByb3AoJ3JlcXVpcmVkJykpIHtcbiAgICAgICAgICAgIGlmICggISRibG9jay5maW5kKCcuanMtZmlsdGVyLWhpZGRlbicpLnZhbCgpICkge1xuICAgICAgICAgICAgICAkYmxvY2suZmluZCgnLmZpbHRlcl9faW5wdXQtd3JhcCcpLmFwcGVuZCggZW1wdHkgKTtcbiAgICAgICAgICAgICAgJCgnLmpzLXNlbGVjdC1idG4uaXNDbG9zZWQnKS5hZGRDbGFzcygnZmlsdGVyX19kYW5nZXInKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICRibG9jay5maW5kKCcuZmlsdGVyX19lbXB0eScpLnJlbW92ZSgpO1xuICAgICAgICAgICAgICAkKCcuanMtc2VsZWN0LWJ0bi5pc0Nsb3NlZCcpLnJlbW92ZUNsYXNzKCdmaWx0ZXJfX2RhbmdlcicpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIFxuICAkKCdib2R5Jykub24oJ2ZvY3VzJywgJy5maWx0ZXJfX2lucHV0JywgZnVuY3Rpb24oKSB7XG4gICAgdmFyICR0aGlzID0gJCggdGhpcyApO1xuICAgICR0aGlzLmNsb3Nlc3QoJy5maWx0ZXJfX2lucHV0LXdyYXAnKS5maW5kKCcuZmlsdGVyX19mbG9hdGluZy1sYWJlbCcpLmFkZENsYXNzKCdmbG9hdGVkJyk7XG4gIH0pXG4gIFxuICAkKCdib2R5Jykub24oJ2JsdXInLCAnLmZpbHRlcl9faW5wdXQnLCBmdW5jdGlvbigpIHtcbiAgICB2YXIgJHRoaXMgPSAkKCB0aGlzICk7XG4gICAgdmFyICRwYXJlbnQgPSAkdGhpcy5jbG9zZXN0KCcuZmlsdGVyX19pbnB1dC13cmFwJyk7XG4gICAgdmFyICRpbnB1dCA9ICRwYXJlbnQuZmluZCgnLmZpbHRlcl9faW5wdXQnKTtcbiAgICBpZiAoICEkdGhpcy52YWwoKSApIHtcbiAgICAgIHZhciBlbXB0eSA9IFwiPHNwYW4gY2xhc3M9J2ZpbHRlcl9fZW1wdHknPtCf0L7Qu9C1INC+0LHRj9C30LDRgtC10LvRjNC90L4g0LTQu9GPINC30LDQv9C+0LvQvdC10L3QuNGPPC9zcGFuPlwiO1xuICAgICAgJHBhcmVudC5yZW1vdmVDbGFzcygndmFsaWRhdGVkJyk7XG4gICAgICAkcGFyZW50LmZpbmQoJy5maWx0ZXJfX2Zsb2F0aW5nLWxhYmVsJykucmVtb3ZlQ2xhc3MoJ2Zsb2F0ZWQnKTtcbiAgICAgIGlmICggJHRoaXMucHJvcCgncmVxdWlyZWQnKSkge1xuICAgICAgICBpZiAoICEkaW5wdXQuaGFzQ2xhc3MoJ2ZpbHRlcl9fZGFuZ2VyJykgKSB7XG4gICAgICAgICAgJGlucHV0LmFkZENsYXNzKCdmaWx0ZXJfX2RhbmdlcicpO1xuICAgICAgICAgICRwYXJlbnQuYXBwZW5kKCBlbXB0eSApO1xuICAgICAgICB9ICAgIFxuICAgICAgfVxuICAgIH0gXG4gICAgZWxzZSB7XG4gICAgICB2YXIgbmFtZSA9ICRpbnB1dC5kYXRhKCd2YWxpZGF0ZScpXG4gICAgICBpZiAoIG5hbWUgPT09ICduYW1lJyApIHtcbiAgICAgICAgaWYgKCAkaW5wdXQudmFsKCkuaW5kZXhPZignICcpID4gLTEpIHtcbiAgICAgICAgICAkcGFyZW50LmFkZENsYXNzKCd2YWxpZGF0ZWQnKTtcbiAgICAgICAgICBpZiAoICRpbnB1dC5oYXNDbGFzcygnZmlsdGVyX19kYW5nZXInKSApIHtcbiAgICAgICAgICAgICRpbnB1dC5yZW1vdmVDbGFzcygnZmlsdGVyX19kYW5nZXInKTtcbiAgICAgICAgICAgICRwYXJlbnQuZmluZCgnLmZpbHRlcl9fZW1wdHknKS5yZW1vdmUoKTtcbiAgICAgICAgICB9IFxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICRwYXJlbnQucmVtb3ZlQ2xhc3MoJ3ZhbGlkYXRlZCcpO1xuICAgICAgICAgICRwYXJlbnQuZmluZCgnLmZpbHRlcl9fZW1wdHknKS5yZW1vdmUoKTtcbiAgICAgICAgICB2YXIgZW1wdHkgPSBcIjxzcGFuIGNsYXNzPSdmaWx0ZXJfX2VtcHR5Jz7Qn9C+0LvQtSDQtNC+0LvQttC90L4g0YHQvtC00LXRgNC20LDRgtGMINCY0LzRjyDQuCDQpNCw0LzQuNC70LjRjiDRh9C10YDQtdC3INC/0YDQvtCx0LXQuzwvc3Bhbj5cIjtcbiAgICAgICAgICAkaW5wdXQuYWRkQ2xhc3MoJ2ZpbHRlcl9fZGFuZ2VyJyk7XG4gICAgICAgICAgJHBhcmVudC5hcHBlbmQoIGVtcHR5ICk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoIG5hbWUgPT09ICdlbWFpbCcgKSB7XG4gICAgICAgIGlmKCB2YWxpZGF0ZUVtYWlsKCRpbnB1dC52YWwoKSkpIHtcbiAgICAgICAgICAkcGFyZW50LmFkZENsYXNzKCd2YWxpZGF0ZWQnKTtcbiAgICAgICAgICBpZiAoICRpbnB1dC5oYXNDbGFzcygnZmlsdGVyX19kYW5nZXInKSApIHtcbiAgICAgICAgICAgICRpbnB1dC5yZW1vdmVDbGFzcygnZmlsdGVyX19kYW5nZXInKTtcbiAgICAgICAgICAgICRwYXJlbnQuZmluZCgnLmZpbHRlcl9fZW1wdHknKS5yZW1vdmUoKTtcbiAgICAgICAgICB9ICAgICAgICAgXG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgJHBhcmVudC5yZW1vdmVDbGFzcygndmFsaWRhdGVkJyk7XG4gICAgICAgICAgJHBhcmVudC5maW5kKCcuZmlsdGVyX19lbXB0eScpLnJlbW92ZSgpO1xuICAgICAgICAgIHZhciBlbXB0eSA9IFwiPHNwYW4gY2xhc3M9J2ZpbHRlcl9fZW1wdHknPkVtYWlsINC00L7Qu9C20LXQvSDRgdC+0LTQtdGA0LbQsNGC0Ywg0LvQsNGC0LjQvdGB0LrQuNC1INCx0YPQutCy0YssINGB0LjQvNCy0L7Qu9GLIEAg0LggLjwvc3Bhbj5cIjtcbiAgICAgICAgICAkaW5wdXQuYWRkQ2xhc3MoJ2ZpbHRlcl9fZGFuZ2VyJyk7XG4gICAgICAgICAgJHBhcmVudC5hcHBlbmQoIGVtcHR5ICk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoIG5hbWUgPT09ICd0ZWwnICkge1xuICAgICAgICBpZiggdmFsaWRhdGVQaG9uZSgkaW5wdXQudmFsKCkpKSB7XG4gICAgICAgICAgJHBhcmVudC5hZGRDbGFzcygndmFsaWRhdGVkJyk7XG4gICAgICAgICAgaWYgKCAkaW5wdXQuaGFzQ2xhc3MoJ2ZpbHRlcl9fZGFuZ2VyJykgKSB7XG4gICAgICAgICAgICAkaW5wdXQucmVtb3ZlQ2xhc3MoJ2ZpbHRlcl9fZGFuZ2VyJyk7XG4gICAgICAgICAgICAkcGFyZW50LmZpbmQoJy5maWx0ZXJfX2VtcHR5JykucmVtb3ZlKCk7XG4gICAgICAgICAgfSAgICAgICAgIFxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICRwYXJlbnQucmVtb3ZlQ2xhc3MoJ3ZhbGlkYXRlZCcpO1xuICAgICAgICAgICRwYXJlbnQuZmluZCgnLmZpbHRlcl9fZW1wdHknKS5yZW1vdmUoKTtcbiAgICAgICAgICB2YXIgZW1wdHkgPSBcIjxzcGFuIGNsYXNzPSdmaWx0ZXJfX2VtcHR5Jz7QndC+0LzQtdGAINGC0LXQu9C10YTQvtC90LAg0LTQvtC70LbQtdC9INGB0L7QtNC10YDQttCw0YLRjCDQvtGCIDEwINC00L4gMTQg0YbQuNGE0YA8L3NwYW4+XCI7XG4gICAgICAgICAgJGlucHV0LmFkZENsYXNzKCdmaWx0ZXJfX2RhbmdlcicpO1xuICAgICAgICAgICRwYXJlbnQuYXBwZW5kKCBlbXB0eSApO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAkaW5wdXQucmVtb3ZlQ2xhc3MoJ2ZpbHRlcl9fZGFuZ2VyJyk7XG4gICAgICAgICRwYXJlbnQuZmluZCgnLmZpbHRlcl9fZW1wdHknKS5yZW1vdmUoKTtcbiAgICAgIH1cbiAgICB9XG4gIH0pOyBcbiAgXG4gIGZ1bmN0aW9uIHZhbGlkYXRlRW1haWwoJGVtYWlsKSB7XG4gICAgdmFyIGVtYWlsUmVnID0gL14oW1xcdy1cXC5dK0AoW1xcdy1dK1xcLikrW1xcdy1dezIsNH0pPyQvO1xuICAgIHJldHVybiBlbWFpbFJlZy50ZXN0KCAkZW1haWwgKTtcbiAgfTtcbiAgXG4gIGZ1bmN0aW9uIHZhbGlkYXRlUGhvbmUoJHBob25lKSB7XG4gICAgdmFyIHBob25lUmVnID0gL14oKDh8XFwrNylbXFwtIF0/KT8oXFwoP1xcZHszfVxcKT9bXFwtIF0/KT9bXFxkXFwtIF17MTAsMTR9JC87XG4gICAgcmV0dXJuIHBob25lUmVnLnRlc3QoICRwaG9uZSApO1xuICB9O1xuICAkKCcuaXRlbV9faW1nJykuY2xpY2soZnVuY3Rpb24oKXtcbiAgICB2YXIgaW1nU3JjID0gJCggdGhpcyApLmF0dHIoJ3NyYycpO1xuICBcbiAgICAvLyBjb25zb2xlLmxvZyggaW1nU3JjICk7XG4gICAgXG4gICAgJCgnLmltYWdlX19jb250YWluZXInKS5jc3MoJ2JhY2tncm91bmQtaW1hZ2UnLCAndXJsKCcgKyBpbWdTcmMgKyAnKScgKTtcbiAgfSk7XG4gICQoJyNtb2RhbC1jbG9zZS1oZWxwJykub24oJ2NsaWNrJywgZnVuY3Rpb24oZSkge1xuICAgIC8vIGNvbnNvbGUubG9nKCdub3QgaGFwcGVucycpO1xuICAgIHZhciAkdGhpcyA9ICQoIHRoaXMgKTtcbiAgICAkdGhpcy5jbG9zZXN0KCcuanMtbW9kYWwnKS5yZW1vdmVDbGFzcygnaXNPcGVuZWQnKTtcbiAgfSlcbiAgaWYgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYXAnKSAhPT0gbnVsbCkge1xuICAgICAgdmFyIGxuZyA9ICQoJyNtYXAnKS5hdHRyKCdkYXRhLWxuZycpO1xuICAgICAgdmFyIGxhdCA9ICQoJyNtYXAnKS5hdHRyKCdkYXRhLWxhdCcpO1xuICAgICAgLy8g0KTRg9C90LrRhtC40Y8geW1hcHMucmVhZHkoKSDQsdGD0LTQtdGCINCy0YvQt9Cy0LDQvdCwLCDQutC+0LPQtNCwXG4gICAgICAvLyDQt9Cw0LPRgNGD0LfRj9GC0YHRjyDQstGB0LUg0LrQvtC80L/QvtC90LXQvdGC0YsgQVBJLCDQsCDRgtCw0LrQttC1INC60L7Qs9C00LAg0LHRg9C00LXRgiDQs9C+0YLQvtCy0L4gRE9NLdC00LXRgNC10LLQvi5cbiAgXG4gICAgICB5bWFwcy5yZWFkeShpbml0KTtcbiAgXG4gICAgICBmdW5jdGlvbiBpbml0KCl7IFxuICAgICAgICAgIC8vINCh0L7Qt9C00LDQvdC40LUg0LrQsNGA0YLRiy4gICAgXG4gICAgICAgICAgdmFyIG15TWFwID0gbmV3IHltYXBzLk1hcChcIm1hcFwiLCB7XG4gICAgICAgICAgICAgIC8vINCa0L7QvtGA0LTQuNC90LDRgtGLINGG0LXQvdGC0YDQsCDQutCw0YDRgtGLLlxuICAgICAgICAgICAgICAvLyDQn9C+0YDRj9C00L7QuiDQv9C+INGD0LzQvtC70YfQvdC40Y46IMKr0YjQuNGA0L7RgtCwLCDQtNC+0LvQs9C+0YLQsMK7LlxuICAgICAgICAgICAgICAvLyDQp9GC0L7QsdGLINC90LUg0L7Qv9GA0LXQtNC10LvRj9GC0Ywg0LrQvtC+0YDQtNC40L3QsNGC0Ysg0YbQtdC90YLRgNCwINC60LDRgNGC0Ysg0LLRgNGD0YfQvdGD0Y4sXG4gICAgICAgICAgICAgIC8vINCy0L7RgdC/0L7Qu9GM0LfRg9C50YLQtdGB0Ywg0LjQvdGB0YLRgNGD0LzQtdC90YLQvtC8INCe0L/RgNC10LTQtdC70LXQvdC40LUg0LrQvtC+0YDQtNC40L3QsNGCLlxuICAgICAgICAgICAgICAvLyBjZW50ZXI6IFs1NS43NiwgMzcuNjRdLFxuICAgICAgICAgICAgICBjZW50ZXI6IFtsbmcsIGxhdF0sXG4gICAgICAgICAgICAgIC8vINCj0YDQvtCy0LXQvdGMINC80LDRgdGI0YLQsNCx0LjRgNC+0LLQsNC90LjRjy4g0JTQvtC/0YPRgdGC0LjQvNGL0LUg0LfQvdCw0YfQtdC90LjRjzpcbiAgICAgICAgICAgICAgLy8g0L7RgiAwICjQstC10YHRjCDQvNC40YApINC00L4gMTkuXG4gICAgICAgICAgICAgIHpvb206IDEwLFxuICAgICAgICAgICAgICBjb250cm9sczogW11cbiAgICAgICAgICB9KTsgXG4gIFxuICAgICAgICAgIC8vINCc0LXRgtC60LAsINGB0L7QtNC10YDQttC40LzQvtC1INCx0LDQu9GD0L3QsCDQutC+0YLQvtGA0L7QuSDQt9Cw0LPRgNGD0LbQsNC10YLRgdGPINGBINC/0L7QvNC+0YnRjNGOIEFKQVguXG4gICAgICAgICAgLy8gdmFyIHBsYWNlbWFyayA9IG5ldyB5bWFwcy5QbGFjZW1hcmsoWzU1Ljc2MDU4NCwgMzcuNjM5NDUwXSwge30sIHtcbiAgICAgICAgICAvLyAgICAgaWNvbkxheW91dDogJ2RlZmF1bHQjaW1hZ2UnLFxuICAgICAgICAgIC8vICAgICBpY29uSW1hZ2VIcmVmOiAnaW1hZ2VzL21hcF9fYmFsb29uLnBuZycsXG4gICAgICAgICAgLy8gICAgIGljb25JbWFnZVNpemU6IFs1NywgNTFdLFxuICAgICAgICAgIC8vICAgICBpY29uSW1hZ2VPZmZzZXQ6IFstMzcsIC01MF1cbiAgICAgICAgICAvLyB9KTtcbiAgXG4gICAgICAgICAgdmFyIFpvb21MYXlvdXQgPSB5bWFwcy50ZW1wbGF0ZUxheW91dEZhY3RvcnkuY3JlYXRlQ2xhc3MoXCI8ZGl2IGNsYXNzPSdtYXBfX3pvb20tYmxvY2sgdS1qYy1zYnUtZmQtY29sJz5cIiArXG4gICAgICAgICAgXCI8ZGl2IGlkPSd6b29tLWluJyBjbGFzcz0nbWFwX196b29tIHUtamMtY2UgdS1haS1jZSc+XCIgK1xuICAgICAgICAgIFwiPHN2ZyBjbGFzcz0nc3ZnJyB3aWR0aD0nMTJweCcgaGVpZ2h0PScxMnB4JyB2aWV3Qm94PScwIDAgMTIgMTInIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+XCIgK1xuICAgICAgICAgIFwiPGcgaWQ9J0dyb3VwJyA+PHJlY3QgaWQ9J1JlY3RhbmdsZS0zJyB4PScwJyB5PSc1JyB3aWR0aD0nMTInIGhlaWdodD0nMic+PC9yZWN0PlwiICtcbiAgICAgICAgICBcIjxyZWN0IGlkPSdSZWN0YW5nbGUtMycgdHJhbnNmb3JtPSd0cmFuc2xhdGUoNi4wMDAwMDAsIDYuMDAwMDAwKSByb3RhdGUoOTAuMDAwMDAwKSB0cmFuc2xhdGUoLTYuMDAwMDAwLCAtNi4wMDAwMDApICcgeD0nMCcgeT0nNScgd2lkdGg9JzEyJyBoZWlnaHQ9JzInPjwvcmVjdD48L2c+XCIgK1xuICAgICAgICAgIFwiPC9zdmc+PC9kaXY+PGJyPlwiICtcbiAgICAgICAgICBcIjxkaXYgaWQ9J3pvb20tb3V0JyBjbGFzcz0nbWFwX196b29tIG1hcF9fem9vbS0tbWludXMgdS1qYy1jZSB1LWFpLWNlJz5cIiArXG4gICAgICAgICAgXCI8c3ZnIGNsYXNzPSdzdmcnIHdpZHRoPSc4cHgnIGhlaWdodD0nMnB4JyB2aWV3Qm94PScwIDAgOCAyJyB2ZXJzaW9uPScxLjEnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgeG1sbnM6eGxpbms9J2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsnPlwiICtcbiAgICAgICAgICBcIjxyZWN0IGlkPSdtYXBfX21pbnVzJyB3aWR0aD0nOCcgaGVpZ2h0PScyJz48L3JlY3Q+XCIgK1xuICAgICAgICAgIFwiPC9zdmc+PC9kaXY+XCIsIHtcbiAgICAgICAgICAgICAgLy8g0J/QtdGA0LXQvtC/0YDQtdC00LXQu9GP0LXQvCDQvNC10YLQvtC00Ysg0LzQsNC60LXRgtCwLCDRh9GC0L7QsdGLINCy0YvQv9C+0LvQvdGP0YLRjCDQtNC+0L/QvtC70L3QuNGC0LXQu9GM0L3Ri9C1INC00LXQudGB0YLQstC40Y9cbiAgICAgICAgICAgICAgLy8g0L/RgNC4INC/0L7RgdGC0YDQvtC10L3QuNC4INC4INC+0YfQuNGB0YLQutC1INC80LDQutC10YLQsC5cbiAgICAgICAgICAgICAgYnVpbGQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgIC8vINCS0YvQt9GL0LLQsNC10Lwg0YDQvtC00LjRgtC10LvRjNGB0LrQuNC5INC80LXRgtC+0LQgYnVpbGQuXG4gICAgICAgICAgICAgICAgICBab29tTGF5b3V0LnN1cGVyY2xhc3MuYnVpbGQuY2FsbCh0aGlzKTtcbiAgXG4gICAgICAgICAgICAgICAgICAvLyDQn9GA0LjQstGP0LfRi9Cy0LDQtdC8INGE0YPQvdC60YbQuNC4LdC+0LHRgNCw0LHQvtGC0YfQuNC60Lgg0Log0LrQvtC90YLQtdC60YHRgtGDINC4INGB0L7RhdGA0LDQvdGP0LXQvCDRgdGB0YvQu9C60LhcbiAgICAgICAgICAgICAgICAgIC8vINC90LAg0L3QuNGFLCDRh9GC0L7QsdGLINC/0L7RgtC+0Lwg0L7RgtC/0LjRgdCw0YLRjNGB0Y8g0L7RgiDRgdC+0LHRi9GC0LjQuS5cbiAgICAgICAgICAgICAgICAgIHRoaXMuem9vbUluQ2FsbGJhY2sgPSB5bWFwcy51dGlsLmJpbmQodGhpcy56b29tSW4sIHRoaXMpO1xuICAgICAgICAgICAgICAgICAgdGhpcy56b29tT3V0Q2FsbGJhY2sgPSB5bWFwcy51dGlsLmJpbmQodGhpcy56b29tT3V0LCB0aGlzKTtcbiAgXG4gICAgICAgICAgICAgICAgICAvLyDQndCw0YfQuNC90LDQtdC8INGB0LvRg9GI0LDRgtGMINC60LvQuNC60Lgg0L3QsCDQutC90L7Qv9C60LDRhSDQvNCw0LrQtdGC0LAuXG4gICAgICAgICAgICAgICAgICAkKCcjem9vbS1pbicpLmJpbmQoJ2NsaWNrJywgdGhpcy56b29tSW5DYWxsYmFjayk7XG4gICAgICAgICAgICAgICAgICAkKCcjem9vbS1vdXQnKS5iaW5kKCdjbGljaycsIHRoaXMuem9vbU91dENhbGxiYWNrKTtcbiAgICAgICAgICAgICAgfSxcbiAgXG4gICAgICAgICAgICAgIGNsZWFyOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAvLyDQodC90LjQvNCw0LXQvCDQvtCx0YDQsNCx0L7RgtGH0LjQutC4INC60LvQuNC60L7Qsi5cbiAgICAgICAgICAgICAgICAgICQoJyN6b29tLWluJykudW5iaW5kKCdjbGljaycsIHRoaXMuem9vbUluQ2FsbGJhY2spO1xuICAgICAgICAgICAgICAgICAgJCgnI3pvb20tb3V0JykudW5iaW5kKCdjbGljaycsIHRoaXMuem9vbU91dENhbGxiYWNrKTtcbiAgXG4gICAgICAgICAgICAgICAgICAvLyDQktGL0LfRi9Cy0LDQtdC8INGA0L7QtNC40YLQtdC70YzRgdC60LjQuSDQvNC10YLQvtC0IGNsZWFyLlxuICAgICAgICAgICAgICAgICAgWm9vbUxheW91dC5zdXBlcmNsYXNzLmNsZWFyLmNhbGwodGhpcyk7XG4gICAgICAgICAgICAgIH0sXG4gIFxuICAgICAgICAgICAgICB6b29tSW46IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgIHZhciBtYXAgPSB0aGlzLmdldERhdGEoKS5jb250cm9sLmdldE1hcCgpO1xuICAgICAgICAgICAgICAgICAgbWFwLnNldFpvb20obWFwLmdldFpvb20oKSArIDEsIHtjaGVja1pvb21SYW5nZTogdHJ1ZX0pO1xuICAgICAgICAgICAgICB9LFxuICBcbiAgICAgICAgICAgICAgem9vbU91dDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgdmFyIG1hcCA9IHRoaXMuZ2V0RGF0YSgpLmNvbnRyb2wuZ2V0TWFwKCk7XG4gICAgICAgICAgICAgICAgICBtYXAuc2V0Wm9vbShtYXAuZ2V0Wm9vbSgpIC0gMSwge2NoZWNrWm9vbVJhbmdlOiB0cnVlfSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgXG4gICAgICAgICAgLy8gdmFyIGN0cmwgPSBteU1hcC5jb250cm9scy5nZXQoJ3pvb21Db250cm9sJykub3B0aW9ucy5nZXQoJ2xlZnQnKTtcbiAgICAgICAgICAvLyB2YXIgb2JqID0gbXlNYXAuY29udHJvbHMuZ2V0KCd6b29tQ29udHJvbCcpO1xuICAgICAgICAgIC8vIGNvbnNvbGUubG9nKG15TWFwLCAnem9vbUNvbnRyb2wnLCBjdHJsLCBvYmopO1xuICBcbiAgICAgICAgICAkKCB3aW5kb3cgKS5vbigncmVzaXplJywgZnVuY3Rpb24oKSB7ICAgXG4gICAgICAgICAgLy/QvtC/0YDQtdC00LXQu9GP0LXQvCDQstC10YDRgtC40LrQsNC70YzQvdGL0Lkg0YbQtdC90YLRgCDQutCw0YDRgtGLXG4gICAgICAgICAgICAgIHZhciBjZW50ZXJQb3MgPSAoIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFwXCIpLm9mZnNldEhlaWdodCAvIDIgKSAtIDUwOyAgICBcbiAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coY2VudGVyUG9zKTsgIFxuICBcbiAgICAgICAgICAgICAgLy/Qt9Cw0LTQsNC10Lwg0YHQstC+0LnRgdGC0LLQsCDQutC90L7Qv9C+0Log0LfRg9C80LBcbiAgICAgICAgICAgICAgLy8gdmFyIHpvb21Db250cm9sID0gbmV3IHltYXBzLmNvbnRyb2wuWm9vbUNvbnRyb2woe1xuICAgICAgICAgICAgICAvLyAgICAgb3B0aW9uczoge1xuICAgICAgICAgICAgICAvLyAgICAgICAgIGxheW91dDogWm9vbUxheW91dCxcbiAgICAgICAgICAgICAgLy8gICAgICAgICBwb3NpdGlvbjoge1xuICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBsZWZ0OiAzMCxcbiAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgdG9wOiBjZW50ZXJQb3NcbiAgICAgICAgICAgICAgLy8gICAgICAgICB9XG4gICAgICAgICAgICAgIC8vICAgICB9XG4gICAgICAgICAgICAgIC8vIH0pO1xuICBcbiAgICAgICAgICAgICAgbXlNYXAuY29udHJvbHMucmVtb3ZlKCd6b29tQ29udHJvbCcpO1xuICAgICAgICAgICAgICAvLyDQodC+0LfQtNCw0LTQuNC8INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRjNGB0LrQuNC5INC80LDQutC10YIg0L/QvtC70LfRg9C90LrQsCDQvNCw0YHRiNGC0LDQsdCwLlxuICAgICAgICAgICAgICBteU1hcC5jb250cm9scy5hZGQoJ3pvb21Db250cm9sJywge1xuICAgICAgICAgICAgICAgICAgbGF5b3V0OiBab29tTGF5b3V0LFxuICAgICAgICAgICAgICAgICAgcG9zaXRpb246IHtcbiAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiAnMzBweCcsXG4gICAgICAgICAgICAgICAgICAgICAgdG9wOiBjZW50ZXJQb3NcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSk7ICAgICAgICBcbiAgICAgICAgICB9KS5yZXNpemUoKTtcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBteU1hcC5nZW9PYmplY3RzLmFkZChwbGFjZW1hcmspO1xuICAgICAgICAgIHZhciBsaW5rVG9PYmplY3RzID0gY29uZmlnLm1hcExpbmtzO1xuICAgICAgICAgIGZ1bmN0aW9uIGFkZE9iamVjdHMobGluaywgZmlsdGVyRGF0YSkge1xuICAgICAgICAgICAgICBmdW5jdGlvbiBtYXBTZXJ2ZXJEYXRhKHNlcnZlckRhdGEpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJGZWF0dXJlQ29sbGVjdGlvblwiLFxuICAgICAgICAgICAgICAgICAgICAgIGZlYXR1cmVzOiBzZXJ2ZXJEYXRhLm1hcChmdW5jdGlvbihvYmosIGluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogaW5kZXgsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIkZlYXR1cmVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdlb21ldHJ5OiB7IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiUG9pbnRcIiwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29vcmRpbmF0ZXM6IFtvYmoubGF0LCBvYmoubG9uZ10gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb3BlcnRpZXM6IHsgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWNvbkNhcHRpb246IG9iai5zZXJpYWxOdW1iZXIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFsbG9vbkNvbnRlbnQ6ICc8YSB0YXJnZXQ9XCJfYmxhbmtcIiBjbGFzcz1cIlwiIGhyZWY9XCInICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvYmoubGluayArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1wiPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiYmFsbG9vbl9faW1hZ2UtYmxvY2tcIj48ZGl2IGNsYXNzPVwiYmFsbG9vbl9faW1hZ2VcIiBzdHlsZT1cImJhY2tncm91bmQtaW1hZ2U6dXJsKCcgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9iai5pbWFnZSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJylcIj4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPC9kaXY+PC9kaXY+JyArIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiYmFsbG9vbl9faW5uZXJcIj4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPHAgY2xhc3M9XCJiYWxsb29uX19wcmljZVwiPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9iai5wcmljZSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzwvcD4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPHVsIGNsYXNzPVwiYmFsbG9vbl9fbGlzdFwiPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8bGkgY2xhc3M9XCJiYWxsb29uX19pdGVtIFwiPicgKyBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvYmoucm9vbXMgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8L2xpPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8bGkgY2xhc3M9XCJiYWxsb29uX19pdGVtIFwiPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9iai5zcXVhcmUgKyAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnJm5ic3A70Lw8c3VwPjI8L3N1cD48L2xpPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8bGkgY2xhc3M9XCJiYWxsb29uX19pdGVtIFwiPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9iai5mbG9vciArICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8L2xpPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8L3VsPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8cCBjbGFzcz1cImJhbGxvb25fX2FkZHJlc3NcIj4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvYmouYWRkcmVzcyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzwvcD4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPC9kaXY+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzwvYT4nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBvcHRpb25zOiB7IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIHByZXNldDogZ2V0T2JqZWN0UHJlc2V0KG9iaikgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgIH07XG4gICAgICBcbiAgICAgICAgICAgICAgZnVuY3Rpb24gbG9hZExpc3QoKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gKG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICAgICAgICAgICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBmaWx0ZXJEYXRhLFxuICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHVybDogbGluaywgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YVR5cGU6IFwianNvblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogcmVzb2x2ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiByZWplY3RcbiAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgXG4gICAgICAgICAgICAgICAgICAgIH0pKS50aGVuKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbWFwU2VydmVyRGF0YShkYXRhKTtcbiAgICAgICAgICAgICAgICAgIH0pOztcbiAgICAgICAgICAgICAgfVxuICAgICAgXG4gICAgICAgICAgICAgIHZhciBvYmplY3RNYW5hZ2VyID0gbmV3IHltYXBzLk9iamVjdE1hbmFnZXIoe1xuICAgICAgICAgICAgICAgICAgY2x1c3Rlcml6ZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgIGdyaWRTaXplOiA2NCxcbiAgICAgICAgICAgICAgICAgIGNsdXN0ZXJJY29uTGF5b3V0OiAnZGVmYXVsdCNwaWVDaGFydCcsXG4gICAgICAgICAgICAgICAgICAvLyBjbHVzdGVySWNvbkltYWdlSHJlZjogJ2ltYWdlcy9tYXBfX2JhbG9vbi5wbmcnLFxuICAgICAgICAgICAgICAgICAgY2x1c3RlckRpc2FibGVDbGlja1pvb206IGZhbHNlXG4gICAgICAgICAgICAgICAgICAvLyBnZW9PYmplY3RPcGVuQmFsbG9vbk9uQ2xpY2s6IHRydWUsXG4gICAgICAgICAgICAgICAgICAvLyBnZW9PYmplY3RIaWRlSWNvbk9uQmFsbG9vbk9wZW46IHRydWUsXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgLy8gb2JqZWN0TWFuYWdlci5jbHVzdGVycy5vcHRpb25zLnNldCh7XG4gICAgICAgICAgICAgIC8vICAgICBjbHVzdGVySWNvbkxheW91dDogJ2RlZmF1bHQjaW1hZ2UnLFxuICAgICAgICAgICAgICAvLyAgICAgY2x1c3Rlckljb25JbWFnZUhyZWY6ICdpbWFnZXMvbWFwX19iYWxvb24ucG5nJyxcbiAgICAgICAgICAgICAgLy8gICAgIGNsdXN0ZXJJY29uSW1hZ2VTaXplOiBbNTcsIDUxXSxcbiAgICAgICAgICAgICAgLy8gICAgIGNsdXN0ZXJJY29uSW1hZ2VPZmZzZXQ6IFstMzcsIC01MF1cbiAgICAgICAgICAgICAgLy8gfSk7XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICBsb2FkTGlzdCgpLnRoZW4oZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgICAgICAgICAgb2JqZWN0TWFuYWdlci5hZGQoZGF0YSk7XG4gICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgb2JqZWN0TWFuYWdlci5vYmplY3RzLm9wdGlvbnMuc2V0KHtcbiAgICAgICAgICAgICAgICAgIGljb25MYXlvdXQ6ICdkZWZhdWx0I2ltYWdlJyxcbiAgICAgICAgICAgICAgICAgIGljb25JbWFnZUhyZWY6IGNvbmZpZy5tYXBCYWxvb24sXG4gICAgICAgICAgICAgICAgICBpY29uSW1hZ2VTaXplOiBbNTcsIDUxXSxcbiAgICAgICAgICAgICAgICAgIGljb25JbWFnZU9mZnNldDogWy0xOCwgLTQ1XVxuICAgICAgICAgICAgICB9KTtcbiAgICAgIFxuICAgICAgICAgICAgICBteU1hcC5nZW9PYmplY3RzLmFkZChvYmplY3RNYW5hZ2VyKTtcbiAgXG4gICAgICAgICAgfTsgXG4gICAgICAgICAgYWRkT2JqZWN0cyhsaW5rVG9PYmplY3RzLCBudWxsKTtcbiAgXG4gICAgICAgICAgJChcIi5qcy1tYXAtZmlsdGVyLWZvcm1cIikuc3VibWl0KGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICB2YXIgbGlua1RvTmV3T2JqZWN0cyA9IGNvbmZpZy5tYXBOZXdMaW5rcztcbiAgICAgICAgICAgICAgdmFyIGRhdGEgPSAkKHRoaXMpLnNlcmlhbGl6ZSgpO1xuICBcbiAgICAgICAgICAgICAgbXlNYXAuZ2VvT2JqZWN0cy5yZW1vdmVBbGwoKTtcbiAgXG4gICAgICAgICAgICAgIGFkZE9iamVjdHMobGlua1RvTmV3T2JqZWN0cywgZGF0YSk7XG4gIFxuICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgfSlcbiAgICAgIH07XG4gIFxuICB9IGVsc2UgaWYgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpdGVtLW1hcCcpICE9PSBudWxsKSB7XG4gICAgICB5bWFwcy5yZWFkeShpbml0KTtcbiAgXG4gICAgICB2YXIgbG5nID0gJCgnI2l0ZW0tbWFwJykuYXR0cignZGF0YS1sbmcnKTtcbiAgICAgIHZhciBsYXQgPSAkKCcjaXRlbS1tYXAnKS5hdHRyKCdkYXRhLWxhdCcpO1xuICBcbiAgICAgIGZ1bmN0aW9uIGluaXQoKXsgXG4gICAgICAgICAgdmFyIG15TWFwID0gbmV3IHltYXBzLk1hcChcIml0ZW0tbWFwXCIsIHtcbiAgICAgICAgICAgICAgY2VudGVyOiBbbG5nLCBsYXRdLFxuICAgICAgICAgICAgICB6b29tOiAxMyxcbiAgICAgICAgICAgICAgY29udHJvbHM6IFtdXG4gICAgICAgICAgfSk7IFxuICBcbiAgICAgICAgICB2YXIgcGxhY2VtYXJrID0gbmV3IHltYXBzLlBsYWNlbWFyayhbbG5nLCBsYXRdLCB7fSwge1xuICAgICAgICAgICAgICBpY29uTGF5b3V0OiAnZGVmYXVsdCNpbWFnZScsXG4gICAgICAgICAgICAgIGljb25JbWFnZUhyZWY6IGNvbmZpZy5tYXBCYWxvb24sXG4gICAgICAgICAgICAgIGljb25JbWFnZVNpemU6IFs1NywgNTFdLFxuICAgICAgICAgICAgICBpY29uSW1hZ2VPZmZzZXQ6IFstMzcsIC01MF1cbiAgICAgICAgICB9KTtcbiAgXG4gICAgICAgICAgdmFyIFpvb21MYXlvdXQgPSB5bWFwcy50ZW1wbGF0ZUxheW91dEZhY3RvcnkuY3JlYXRlQ2xhc3MoXCI8ZGl2IGNsYXNzPSdtYXBfX3pvb20tYmxvY2sgdS1qYy1zYnUtZmQtY29sJz5cIiArXG4gICAgICAgICAgXCI8ZGl2IGlkPSd6b29tLWluJyBjbGFzcz0nbWFwX196b29tIHUtamMtY2UgdS1haS1jZSc+XCIgK1xuICAgICAgICAgIFwiPHN2ZyBjbGFzcz0nc3ZnJyB3aWR0aD0nMTJweCcgaGVpZ2h0PScxMnB4JyB2aWV3Qm94PScwIDAgMTIgMTInIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+XCIgK1xuICAgICAgICAgIFwiPGcgaWQ9J0dyb3VwJyA+PHJlY3QgaWQ9J1JlY3RhbmdsZS0zJyB4PScwJyB5PSc1JyB3aWR0aD0nMTInIGhlaWdodD0nMic+PC9yZWN0PlwiICtcbiAgICAgICAgICBcIjxyZWN0IGlkPSdSZWN0YW5nbGUtMycgdHJhbnNmb3JtPSd0cmFuc2xhdGUoNi4wMDAwMDAsIDYuMDAwMDAwKSByb3RhdGUoOTAuMDAwMDAwKSB0cmFuc2xhdGUoLTYuMDAwMDAwLCAtNi4wMDAwMDApICcgeD0nMCcgeT0nNScgd2lkdGg9JzEyJyBoZWlnaHQ9JzInPjwvcmVjdD48L2c+XCIgK1xuICAgICAgICAgIFwiPC9zdmc+PC9kaXY+PGJyPlwiICtcbiAgICAgICAgICBcIjxkaXYgaWQ9J3pvb20tb3V0JyBjbGFzcz0nbWFwX196b29tIG1hcF9fem9vbS0tbWludXMgdS1qYy1jZSB1LWFpLWNlJz5cIiArXG4gICAgICAgICAgXCI8c3ZnIGNsYXNzPSdzdmcnIHdpZHRoPSc4cHgnIGhlaWdodD0nMnB4JyB2aWV3Qm94PScwIDAgOCAyJyB2ZXJzaW9uPScxLjEnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgeG1sbnM6eGxpbms9J2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsnPlwiICtcbiAgICAgICAgICBcIjxyZWN0IGlkPSdtYXBfX21pbnVzJyB3aWR0aD0nOCcgaGVpZ2h0PScyJz48L3JlY3Q+XCIgK1xuICAgICAgICAgIFwiPC9zdmc+PC9kaXY+XCIsIHtcbiAgICAgICAgICAgICAgYnVpbGQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgIFpvb21MYXlvdXQuc3VwZXJjbGFzcy5idWlsZC5jYWxsKHRoaXMpO1xuICBcbiAgICAgICAgICAgICAgICAgIHRoaXMuem9vbUluQ2FsbGJhY2sgPSB5bWFwcy51dGlsLmJpbmQodGhpcy56b29tSW4sIHRoaXMpO1xuICAgICAgICAgICAgICAgICAgdGhpcy56b29tT3V0Q2FsbGJhY2sgPSB5bWFwcy51dGlsLmJpbmQodGhpcy56b29tT3V0LCB0aGlzKTtcbiAgXG4gICAgICAgICAgICAgICAgICAkKCcjem9vbS1pbicpLmJpbmQoJ2NsaWNrJywgdGhpcy56b29tSW5DYWxsYmFjayk7XG4gICAgICAgICAgICAgICAgICAkKCcjem9vbS1vdXQnKS5iaW5kKCdjbGljaycsIHRoaXMuem9vbU91dENhbGxiYWNrKTtcbiAgICAgICAgICAgICAgfSxcbiAgXG4gICAgICAgICAgICAgIGNsZWFyOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAkKCcjem9vbS1pbicpLnVuYmluZCgnY2xpY2snLCB0aGlzLnpvb21JbkNhbGxiYWNrKTtcbiAgICAgICAgICAgICAgICAgICQoJyN6b29tLW91dCcpLnVuYmluZCgnY2xpY2snLCB0aGlzLnpvb21PdXRDYWxsYmFjayk7XG4gIFxuICAgICAgICAgICAgICAgICAgWm9vbUxheW91dC5zdXBlcmNsYXNzLmNsZWFyLmNhbGwodGhpcyk7XG4gICAgICAgICAgICAgIH0sXG4gIFxuICAgICAgICAgICAgICB6b29tSW46IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgIHZhciBtYXAgPSB0aGlzLmdldERhdGEoKS5jb250cm9sLmdldE1hcCgpO1xuICAgICAgICAgICAgICAgICAgbWFwLnNldFpvb20obWFwLmdldFpvb20oKSArIDEsIHtjaGVja1pvb21SYW5nZTogdHJ1ZX0pO1xuICAgICAgICAgICAgICB9LFxuICBcbiAgICAgICAgICAgICAgem9vbU91dDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgdmFyIG1hcCA9IHRoaXMuZ2V0RGF0YSgpLmNvbnRyb2wuZ2V0TWFwKCk7XG4gICAgICAgICAgICAgICAgICBtYXAuc2V0Wm9vbShtYXAuZ2V0Wm9vbSgpIC0gMSwge2NoZWNrWm9vbVJhbmdlOiB0cnVlfSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgXG4gICAgICAgICAgJCggd2luZG93ICkub24oJ3Jlc2l6ZScsIGZ1bmN0aW9uKCkgeyAgIFxuICAgICAgICAgICAgICB2YXIgY2VudGVyUG9zID0gKCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIml0ZW0tbWFwXCIpLm9mZnNldEhlaWdodCAvIDIgKSAtIDUwOyAgICBcbiAgXG4gICAgICAgICAgICAgIG15TWFwLmNvbnRyb2xzLnJlbW92ZSgnem9vbUNvbnRyb2wnKTtcbiAgICAgICAgICAgICAgbXlNYXAuY29udHJvbHMuYWRkKCd6b29tQ29udHJvbCcsIHtcbiAgICAgICAgICAgICAgICAgIGxheW91dDogWm9vbUxheW91dCxcbiAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgbGVmdDogJzMwcHgnLFxuICAgICAgICAgICAgICAgICAgICAgIHRvcDogY2VudGVyUG9zXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pOyAgICAgICAgXG4gICAgICAgICAgfSkucmVzaXplKCk7XG4gICAgICAgICAgXG4gICAgICAgICAgbXlNYXAuZ2VvT2JqZWN0cy5hZGQocGxhY2VtYXJrKTtcbiAgICAgIH1cbiAgfVxuICAkKCcuanMtbW9kYWwtY2xvc2UtYnRuJykub24oJ2NsaWNrJyxmdW5jdGlvbigpIHtcbiAgICB2YXIgJHRoaXMgPSAkKCB0aGlzICk7XG4gIFxuICAgICR0aGlzLmNsb3Nlc3QoJy5qcy1tb2RhbCcpLnJlbW92ZUNsYXNzKCdpc09wZW5lZCcpO1xuICB9KTtcbiAgJCgnLmpzLW1vZGFsX19idG4nKS5vbignY2xpY2snLGZ1bmN0aW9uKGUpIHtcbiAgICB2YXIgdmFsID0gJCggdGhpcyApLmF0dHIoJ2RhdGEtbW9kYWwnKTtcbiAgICBcbiAgICAvLyB2YXIgc3R5bGVzID0ge1xuICAgIC8vICAgZGlzcGxheSA6IFwiYmxvY2tcIixcbiAgICAvLyAgIHdpZHRoOiBcIjEwMCVcIixcbiAgICAvLyAgIHRvcDogLWhlYWRlSGVpZ2h0XG4gICAgLy8gfTtcbiAgICBcbiAgICAkKCcjJyt2YWwpLmFkZENsYXNzKCdpc09wZW5lZCcpO1xuICB9KTtcbiAgJCggd2luZG93ICkub24oJ3Jlc2l6ZScsIGZ1bmN0aW9uKCkgeyAgIFxuICAgIGlmICgkKCcuc2Nyb2xsYWJsZS1pbm5lcicpICE9PSBudWxsKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8ICAkKCcuc2Nyb2xsYWJsZS1pbm5lcicpLmxlbmd0aDsgaSArKykge1xuICAgICAgICB2YXIgc2NySW4gPSAkKCcuc2Nyb2xsYWJsZS1pbm5lcicpW2ldO1xuICAgICAgICB2YXIgc2NyRWwgPSAkKHNjckluKS5hdHRyKCdkYXRhLWlzY3JvbGwnKTtcbiAgICAgICAgdmFyIHNjclBhciA9ICQoJy5zY3JvbGxhYmxlLXBhcmVudFtkYXRhLXBzY3JvbGw9XCInICsgc2NyRWwgKyAnXCJdJylcbiAgICAgICAgdmFyIHNjckhlaWdodCA9IHNjckluLmNsaWVudEhlaWdodDtcbiAgICAgICAgLy8gY29uc29sZS5sb2coc2NySGVpZ2h0KTtcbiAgICAgICAgc2NyUGFyLmhlaWdodChzY3JIZWlnaHQpO1xuICAgICAgfTtcbiAgICB9O1xuICB9KS5yZXNpemUoKTtcbiAgJCh3aW5kb3cpLm9uKFwic2Nyb2xsIGxvYWRcIixmdW5jdGlvbigpe1xuICAgIHZhciBzdGlja2Jsb2NrID0gJCgnLmpzLWhlYWRlcicpO1xuICBcbiAgICBpZiAoICQod2luZG93KS5zY3JvbGxUb3AoKSA+PSA2MCkge1xuICAgICAgc3RpY2tibG9jay5hZGRDbGFzcygnc3RpY2tlZCcpOyBcbiAgICB9IGVsc2Uge1xuICAgICAgc3RpY2tibG9jay5yZW1vdmVDbGFzcygnc3RpY2tlZCcpOyBcbiAgICB9O1xuICB9KVxuICAkKCcuanMtdGFiX19pdGVtJykub24oJ2NsaWNrJyxmdW5jdGlvbihlKSB7XG4gICAgdmFyICR0aGlzID0gJCggdGhpcyApO1xuICBcbiAgICAkdGhpcy5jbG9zZXN0KCcudGFiJykuZmluZCgnLmpzLXRhYl9faXRlbScpLnJlbW92ZUNsYXNzKCdqcy1hY3RpdmUnKTtcbiAgICAkdGhpcy5hZGRDbGFzcygnanMtYWN0aXZlJyk7XG4gIFxuICAgIHZhciB2YWwgPSAkdGhpcy5hdHRyKCdkYXRhLXRhYicpOyAgICBcbiAgXG4gICAgJHRoaXMuY2xvc2VzdCgnLnRhYicpLmZpbmQoJy50YWJfX2Jsb2NrJykucmVtb3ZlQ2xhc3MoJ2pzLWFjdGl2ZScpO1xuICAgICQoJ1tkYXRhLWNvbnRlbnQ9XCInK3ZhbCsnXCJdJykuYWRkQ2xhc3MoJ2pzLWFjdGl2ZScpO1xuICB9KTtcbiAgJCgnLmpzLW1vZGFsX19idG5bZGF0YS1tb2RhbD1cImhlbHBcIl0nKS5vbignY2xpY2snLCBmdW5jdGlvbigpe1xuICAgIHRoZW1lc0xvYWQoKTtcbiAgfSlcbiAgXG4gIGZ1bmN0aW9uIHRoZW1lc0xvYWQoKXtcbiAgICAkLmFqYXgoe1xuICAgICAgdXJsOiBjb25maWcudGhlbWVzTGlzdCwgICAgICAgICAgICAgXG4gICAgICBkYXRhVHlwZSA6IFwianNvblwiLCAgXG4gICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAkKCcuc2lkZS1tb2RhbF9fY29udGVudCcpLmVtcHR5KCk7XG4gICAgICAgICQoJy5zaWRlLW1vZGFsX19jb250ZW50JykuYXBwZW5kKCc8dWwgY2xhc3M9XCJzaWRlLW1vZGFsX19saXN0IHNpZGUtbW9kYWxfX2xpc3QtLWhlbHBcIj48L3VsPicpO1xuICAgICAgICAkLmVhY2goZGF0YSwgZnVuY3Rpb24oaSwgdmFsKSB7IFxuICAgICAgICAgICQoJy5zaWRlLW1vZGFsX19saXN0LS1oZWxwJylcbiAgICAgICAgICAgIC5hcHBlbmQoJzxsaSBjbGFzcz1cInNpZGUtbW9kYWxfX3RoZW1lIGpzLW9wZW4tc3VidGhlbWVcIiBkYXRhLWF0dHI9XCInICsgXG4gICAgICAgICAgICBjb25maWcudGhlbWVMaW5rICtcbiAgICAgICAgICAgIHZhbC5pZCArXG4gICAgICAgICAgICAnXCI+PGEgaHJlZj1cImphdmFzY3JpcHQ6O1wiIGNsYXNzPVwic2lkZS1tb2RhbF9fdGhlbWUtbGlua1wiPicrXG4gICAgICAgICAgICB2YWwudGhlbWUgK1xuICAgICAgICAgICAgJzwvYT48L2xpPicpXG4gICAgICAgIH0pO1xuICAgICAgfSBcbiAgICB9KTtcbiAgfVxuICAkKCBcIi5qcy10b2dnbGUtaXRlbVwiICkuY2xpY2soZnVuY3Rpb24oKSB7XG4gICAgJCggdGhpcyApLnRvZ2dsZUNsYXNzKCBcImlzQWN0aXZlXCIgKTtcbiAgfSk7XG59KTtcbiQoZG9jdW1lbnQpLmFqYXhDb21wbGV0ZShmdW5jdGlvbiAoKSB7XG4gIC8vd2hlbiBjbGlja2luZy90b2dnbGluZyBkcm9wZG93biBtZW51IGJ0blxuICAkKCcuanMtc2VsZWN0LWJ0bicpLm9mZignY2xpY2snKS5vbignY2xpY2snLCBmdW5jdGlvbigpIHtcbiAgICB2YXIgJHRoaXMgPSAkKCB0aGlzICk7XG4gICAgdmFyIHN5YmxpbmcgPSAkdGhpcy5jbG9zZXN0KCcuZmlsdGVyX19pbnB1dC1ibG9jaycpLmZpbmQoJy5qcy1zZWxlY3QtYmxvY2snKTtcbiAgICBpZiAoIHN5YmxpbmcuaGFzQ2xhc3MoJ2lzT3BlbicpICkge1xuICAgICAgJHRoaXMuYWRkQ2xhc3MoJ2lzQ2xvc2VkJyk7XG4gICAgICAkdGhpcy5yZW1vdmVDbGFzcygnaXNPcGVuJyk7IFxuICAgICAgc3libGluZy5yZW1vdmVDbGFzcygnaXNPcGVuJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgICQoJy5qcy1zZWxlY3QtYmxvY2snKS5yZW1vdmVDbGFzcygnaXNPcGVuJyk7XG4gICAgICAkKCcuanMtc2VsZWN0LWJ0bicpLnJlbW92ZUNsYXNzKCdpc09wZW4nKTsgICAgXG4gICAgICAkdGhpcy5hZGRDbGFzcygnaXNPcGVuJyk7XG4gICAgICBzeWJsaW5nLmFkZENsYXNzKCdpc09wZW4nKTtcbiAgICB9XG4gIFxuICAgIHZhciAkYmxvY2sgPSAkdGhpcy5jbG9zZXN0KCcuZmlsdGVyX19pbnB1dC1ibG9jaycpO1xuICAgIHZhciAkZXhpc3QgPSAkYmxvY2suZmluZCgnLmZpbHRlcl9fZW1wdHknKTtcbiAgICB2YXIgZW1wdHkgPSBcIjxzcGFuIGNsYXNzPSdmaWx0ZXJfX2VtcHR5Jz7Qn9C+0LvQtSDQvtCx0Y/Qt9Cw0YLQtdC70YzQvdC+INC00LvRjyDQt9Cw0L/QvtC70L3QtdC90LjRjzwvc3Bhbj5cIlxuICAgIGlmICggISRleGlzdC5sZW5ndGggKSB7XG4gICAgICBpZiAoICRibG9jay5maW5kKCcuanMtZmlsdGVyLWhpZGRlbicpLnByb3AoJ3JlcXVpcmVkJykpIHtcbiAgICAgICAgaWYgKCAhJGJsb2NrLmZpbmQoJy5qcy1maWx0ZXItaGlkZGVuJykudmFsKCkgKSB7XG4gICAgICAgICAgJGJsb2NrLmZpbmQoJy5maWx0ZXJfX2lucHV0LXdyYXAnKS5hcHBlbmQoIGVtcHR5ICk7XG4gICAgICAgICAgJHRoaXMuYWRkQ2xhc3MoJ2ZpbHRlcl9fZGFuZ2VyJyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgJGJsb2NrLmZpbmQoJy5maWx0ZXJfX2VtcHR5JykucmVtb3ZlKCk7XG4gICAgICAgICAgJHRoaXMucmVtb3ZlQ2xhc3MoJ2ZpbHRlcl9fZGFuZ2VyJyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9ICBcbiAgfSk7XG4gIFxuICAvL3doZW4gY2xpY2tpbmcgb24gaXRlbSBpbiBkcm9wZG93biBtZW51XG4gICQoJy5qcy1zZWxlY3QtaXRlbScpLm9mZignY2xpY2snKS5vbignY2xpY2snLCBmdW5jdGlvbigpIHtcbiAgICBcbiAgICB2YXIgJHRoaXMgPSAkKCB0aGlzICk7XG4gICAgJHRoaXMuYWRkQ2xhc3MoJ2pzLXNlbGVjdGVkJyk7XG4gICAgdmFyIHRleHQgPSAkdGhpcy50ZXh0KCk7XG4gICAgdmFyIHZhbHVlID0gJHRoaXMuZGF0YSgndmFsdWUnKTtcbiAgICB2YXIgZ3JvdXAgPSAkdGhpcy5hdHRyKCdkYXRhLWdyb3VwJyk7XG4gICAgJCgnLmpzLXNlbGVjdC1idG5bZGF0YS1ncm91cD1cIicgKyBncm91cCArICdcIl0nKS50ZXh0KHRleHQpO1xuICAgICR0aGlzLmNsb3Nlc3QoJy5maWx0ZXJfX2lucHV0LWJsb2NrJykuZmluZCgnLmpzLXNlbGVjdC1sYWJlbCcpLmFkZENsYXNzKCdmbG9hdGVkJyk7XG4gICAgJCgnLmpzLXNlbGVjdC1idG4uaXNPcGVuJykuYWRkQ2xhc3MoJ2lzQ2xvc2VkJyk7XG4gICAgJCgnLmpzLXNlbGVjdC1ibG9jay5pc09wZW4nKS5yZW1vdmVDbGFzcygnaXNPcGVuJyk7XG4gICAgJCgnLmpzLXNlbGVjdC1idG4uaXNPcGVuJykucmVtb3ZlQ2xhc3MoJ2lzT3BlbicpO1xuICAgICQoJy5qcy1maWx0ZXItaGlkZGVuW2RhdGEtZ3JvdXA9XCInICsgZ3JvdXAgKyAnXCJdJykudmFsKHZhbHVlKTsgICBcbiAgICBcbiAgICB2YXIgJGJsb2NrID0gJHRoaXMuY2xvc2VzdCgnLmZpbHRlcl9faW5wdXQtYmxvY2snKVxuICAgIGlmICggJGJsb2NrLmZpbmQoJy5qcy1maWx0ZXItaGlkZGVuJykucHJvcCgncmVxdWlyZWQnKSkge1xuICAgICAgdmFyIGVtcHR5ID0gXCI8c3BhbiBjbGFzcz0nZmlsdGVyX19lbXB0eSc+0J/QvtC70LUg0L7QsdGP0LfQsNGC0LXQu9GM0L3QviDQtNC70Y8g0LfQsNC/0L7Qu9C90LXQvdC40Y88L3NwYW4+XCJcbiAgICAgIGlmICggISRibG9jay5maW5kKCcuanMtZmlsdGVyLWhpZGRlbicpLnZhbCgpICkge1xuICAgICAgICAkYmxvY2suZmluZCgnLmZpbHRlcl9faW5wdXQtd3JhcCcpLmFwcGVuZCggZW1wdHkgKTtcbiAgICAgICAgJCgnLmpzLXNlbGVjdC1idG5bZGF0YS1ncm91cD1cIicgKyBncm91cCArICdcIl0nKS5hZGRDbGFzcygnZmlsdGVyX19kYW5nZXInKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgICRibG9jay5maW5kKCcuZmlsdGVyX19lbXB0eScpLnJlbW92ZSgpO1xuICAgICAgICAkKCcuanMtc2VsZWN0LWJ0bltkYXRhLWdyb3VwPVwiJyArIGdyb3VwICsgJ1wiXScpLnJlbW92ZUNsYXNzKCdmaWx0ZXJfX2RhbmdlcicpO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG4gIFxuICAvL3doZW4gY2xpY2tpbmcgb3V0c2lkZSB0aGUgaXRlbSBpbiBkcm9wZG93biBvciBkcm9wZG93biBidG4gXG4gIGlmICggJCgnLmpzLXNlbGVjdC1idG4uaXNPcGVuJykubGVuZ3RoID4gMCApIHtcbiAgICAkKGRvY3VtZW50KS5vbignY2xpY2snLCBmdW5jdGlvbihlKSB7XG4gICAgICBpZiAoICEkKGUudGFyZ2V0KS5jbG9zZXN0KCcuanMtc2VsZWN0LWJsb2NrLmlzT3BlbicpLmxlbmd0aCAmJiAhJChlLnRhcmdldCkuY2xvc2VzdCgnLmpzLXNlbGVjdC1idG4uaXNPcGVuJykubGVuZ3RoKSB7XG4gICAgICAgICQoJy5qcy1zZWxlY3QtYnRuLmlzT3BlbicpLmFkZENsYXNzKCdpc0Nsb3NlZCcpO1xuICAgICAgICAkKCcuanMtc2VsZWN0LWJsb2NrLmlzT3BlbicpLnJlbW92ZUNsYXNzKCdpc09wZW4nKTtcbiAgICAgICAgJCgnLmpzLXNlbGVjdC1idG4uaXNPcGVuJykucmVtb3ZlQ2xhc3MoJ2lzT3BlbicpO1xuICBcbiAgICAgICAgdmFyICR0aGlzID0gJCgnLmpzLXNlbGVjdC1idG4uaXNDbG9zZWQnKTtcbiAgICAgICAgdmFyICRibG9jayA9ICR0aGlzLmNsb3Nlc3QoJy5maWx0ZXJfX2lucHV0LWJsb2NrJyk7XG4gICAgICAgIHZhciAkZXhpc3QgPSAkYmxvY2suZmluZCgnLmZpbHRlcl9fZW1wdHknKTtcbiAgICAgICAgdmFyIGVtcHR5ID0gXCI8c3BhbiBjbGFzcz0nZmlsdGVyX19lbXB0eSc+0J/QvtC70LUg0L7QsdGP0LfQsNGC0LXQu9GM0L3QviDQtNC70Y8g0LfQsNC/0L7Qu9C90LXQvdC40Y88L3NwYW4+XCJcbiAgICAgICAgaWYgKCAhJGV4aXN0Lmxlbmd0aCApIHtcbiAgICAgICAgICBpZiAoICRibG9jay5maW5kKCcuanMtZmlsdGVyLWhpZGRlbicpLnByb3AoJ3JlcXVpcmVkJykpIHtcbiAgICAgICAgICAgIGlmICggISRibG9jay5maW5kKCcuanMtZmlsdGVyLWhpZGRlbicpLnZhbCgpICkge1xuICAgICAgICAgICAgICAkYmxvY2suZmluZCgnLmZpbHRlcl9faW5wdXQtd3JhcCcpLmFwcGVuZCggZW1wdHkgKTtcbiAgICAgICAgICAgICAgJCgnLmpzLXNlbGVjdC1idG4uaXNDbG9zZWQnKS5hZGRDbGFzcygnZmlsdGVyX19kYW5nZXInKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICRibG9jay5maW5kKCcuZmlsdGVyX19lbXB0eScpLnJlbW92ZSgpO1xuICAgICAgICAgICAgICAkKCcuanMtc2VsZWN0LWJ0bi5pc0Nsb3NlZCcpLnJlbW92ZUNsYXNzKCdmaWx0ZXJfX2RhbmdlcicpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIFxuICAkKCcuZmlsdGVyX19pbnB1dCcpLm9uKCdmb2N1cycsIGZ1bmN0aW9uKCkge1xuICAgIHZhciAkdGhpcyA9ICQoIHRoaXMgKTtcbiAgICAkdGhpcy5jbG9zZXN0KCcuZmlsdGVyX19pbnB1dC13cmFwJykuZmluZCgnLmZpbHRlcl9fZmxvYXRpbmctbGFiZWwnKS5hZGRDbGFzcygnZmxvYXRlZCcpO1xuICB9KVxuICBcbiAgJCgnLmZpbHRlcl9faW5wdXQnKS5vbignYmx1cicsIGZ1bmN0aW9uKCkge1xuICAgIHZhciAkdGhpcyA9ICQoIHRoaXMgKTtcbiAgICB2YXIgJHBhcmVudCA9ICR0aGlzLmNsb3Nlc3QoJy5maWx0ZXJfX2lucHV0LXdyYXAnKTtcbiAgICB2YXIgJGlucHV0ID0gJHBhcmVudC5maW5kKCcuZmlsdGVyX19pbnB1dCcpO1xuICAgIGlmICggISR0aGlzLnZhbCgpICkge1xuICAgICAgdmFyIGVtcHR5ID0gXCI8c3BhbiBjbGFzcz0nZmlsdGVyX19lbXB0eSc+0J/QvtC70LUg0L7QsdGP0LfQsNGC0LXQu9GM0L3QviDQtNC70Y8g0LfQsNC/0L7Qu9C90LXQvdC40Y88L3NwYW4+XCI7XG4gICAgICAkcGFyZW50LnJlbW92ZUNsYXNzKCd2YWxpZGF0ZWQnKTtcbiAgICAgICRwYXJlbnQuZmluZCgnLmZpbHRlcl9fZmxvYXRpbmctbGFiZWwnKS5yZW1vdmVDbGFzcygnZmxvYXRlZCcpO1xuICAgICAgaWYgKCAkdGhpcy5wcm9wKCdyZXF1aXJlZCcpKSB7XG4gICAgICAgIGlmICggISRpbnB1dC5oYXNDbGFzcygnZmlsdGVyX19kYW5nZXInKSApIHtcbiAgICAgICAgICAkaW5wdXQuYWRkQ2xhc3MoJ2ZpbHRlcl9fZGFuZ2VyJyk7XG4gICAgICAgICAgJHBhcmVudC5hcHBlbmQoIGVtcHR5ICk7XG4gICAgICAgIH0gICAgXG4gICAgICB9XG4gICAgfSBcbiAgICBlbHNlIHtcbiAgICAgIHZhciBuYW1lID0gJGlucHV0LmF0dHIoJ25hbWUnKVxuICAgICAgaWYgKCBuYW1lID09PSAnbmFtZScgfHwgbmFtZSA9PT0gJ25hbWVfYnV5JyApIHtcbiAgICAgICAgaWYgKCAkaW5wdXQudmFsKCkuaW5kZXhPZignICcpID4gLTEpIHtcbiAgICAgICAgICAkcGFyZW50LmFkZENsYXNzKCd2YWxpZGF0ZWQnKTtcbiAgICAgICAgICBpZiAoICRpbnB1dC5oYXNDbGFzcygnZmlsdGVyX19kYW5nZXInKSApIHtcbiAgICAgICAgICAgICRpbnB1dC5yZW1vdmVDbGFzcygnZmlsdGVyX19kYW5nZXInKTtcbiAgICAgICAgICAgICRwYXJlbnQuZmluZCgnLmZpbHRlcl9fZW1wdHknKS5yZW1vdmUoKTtcbiAgICAgICAgICB9IFxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICRwYXJlbnQucmVtb3ZlQ2xhc3MoJ3ZhbGlkYXRlZCcpO1xuICAgICAgICAgICRwYXJlbnQuZmluZCgnLmZpbHRlcl9fZW1wdHknKS5yZW1vdmUoKTtcbiAgICAgICAgICB2YXIgZW1wdHkgPSBcIjxzcGFuIGNsYXNzPSdmaWx0ZXJfX2VtcHR5Jz7Qn9C+0LvQtSDQtNC+0LvQttC90L4g0YHQvtC00LXRgNC20LDRgtGMINCY0LzRjyDQuCDQpNCw0LzQuNC70LjRjiDRh9C10YDQtdC3INC/0YDQvtCx0LXQuzwvc3Bhbj5cIjtcbiAgICAgICAgICAkaW5wdXQuYWRkQ2xhc3MoJ2ZpbHRlcl9fZGFuZ2VyJyk7XG4gICAgICAgICAgJHBhcmVudC5hcHBlbmQoIGVtcHR5ICk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoIG5hbWUgPT09ICdlbWFpbCcgfHwgbmFtZSA9PT0gJ2VtYWlsX2J1eScgKSB7XG4gICAgICAgIGlmKCB2YWxpZGF0ZUVtYWlsKCRpbnB1dC52YWwoKSkpIHtcbiAgICAgICAgICAkcGFyZW50LmFkZENsYXNzKCd2YWxpZGF0ZWQnKTtcbiAgICAgICAgICBpZiAoICRpbnB1dC5oYXNDbGFzcygnZmlsdGVyX19kYW5nZXInKSApIHtcbiAgICAgICAgICAgICRpbnB1dC5yZW1vdmVDbGFzcygnZmlsdGVyX19kYW5nZXInKTtcbiAgICAgICAgICAgICRwYXJlbnQuZmluZCgnLmZpbHRlcl9fZW1wdHknKS5yZW1vdmUoKTtcbiAgICAgICAgICB9ICAgICAgICAgXG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgJHBhcmVudC5yZW1vdmVDbGFzcygndmFsaWRhdGVkJyk7XG4gICAgICAgICAgJHBhcmVudC5maW5kKCcuZmlsdGVyX19lbXB0eScpLnJlbW92ZSgpO1xuICAgICAgICAgIHZhciBlbXB0eSA9IFwiPHNwYW4gY2xhc3M9J2ZpbHRlcl9fZW1wdHknPkVtYWlsINC00L7Qu9C20LXQvSDRgdC+0LTQtdGA0LbQsNGC0Ywg0LvQsNGC0LjQvdGB0LrQuNC1INCx0YPQutCy0YssINGB0LjQvNCy0L7Qu9GLIEAg0LggLjwvc3Bhbj5cIjtcbiAgICAgICAgICAkaW5wdXQuYWRkQ2xhc3MoJ2ZpbHRlcl9fZGFuZ2VyJyk7XG4gICAgICAgICAgJHBhcmVudC5hcHBlbmQoIGVtcHR5ICk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoIG5hbWUgPT09ICd0ZWwnIHx8IG5hbWUgPT09ICd0ZWxfYnV5Jykge1xuICAgICAgICBpZiggdmFsaWRhdGVQaG9uZSgkaW5wdXQudmFsKCkpKSB7XG4gICAgICAgICAgJHBhcmVudC5hZGRDbGFzcygndmFsaWRhdGVkJyk7XG4gICAgICAgICAgaWYgKCAkaW5wdXQuaGFzQ2xhc3MoJ2ZpbHRlcl9fZGFuZ2VyJykgKSB7XG4gICAgICAgICAgICAkaW5wdXQucmVtb3ZlQ2xhc3MoJ2ZpbHRlcl9fZGFuZ2VyJyk7XG4gICAgICAgICAgICAkcGFyZW50LmZpbmQoJy5maWx0ZXJfX2VtcHR5JykucmVtb3ZlKCk7XG4gICAgICAgICAgfSAgICAgICAgIFxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICRwYXJlbnQucmVtb3ZlQ2xhc3MoJ3ZhbGlkYXRlZCcpO1xuICAgICAgICAgICRwYXJlbnQuZmluZCgnLmZpbHRlcl9fZW1wdHknKS5yZW1vdmUoKTtcbiAgICAgICAgICB2YXIgZW1wdHkgPSBcIjxzcGFuIGNsYXNzPSdmaWx0ZXJfX2VtcHR5Jz7QndC+0LzQtdGAINGC0LXQu9C10YTQvtC90LAg0LTQvtC70LbQtdC9INGB0L7QtNC10YDQttCw0YLRjCDQvtGCIDEwINC00L4gMTQg0YbQuNGE0YA8L3NwYW4+XCI7XG4gICAgICAgICAgJGlucHV0LmFkZENsYXNzKCdmaWx0ZXJfX2RhbmdlcicpO1xuICAgICAgICAgICRwYXJlbnQuYXBwZW5kKCBlbXB0eSApO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAkaW5wdXQucmVtb3ZlQ2xhc3MoJ2ZpbHRlcl9fZGFuZ2VyJyk7XG4gICAgICAgICRwYXJlbnQuZmluZCgnLmZpbHRlcl9fZW1wdHknKS5yZW1vdmUoKTtcbiAgICAgIH1cbiAgICB9XG4gIH0pOyBcbiAgXG4gIGZ1bmN0aW9uIHZhbGlkYXRlRW1haWwoJGVtYWlsKSB7XG4gICAgdmFyIGVtYWlsUmVnID0gL14oW1xcdy1cXC5dK0AoW1xcdy1dK1xcLikrW1xcdy1dezIsNH0pPyQvO1xuICAgIHJldHVybiBlbWFpbFJlZy50ZXN0KCAkZW1haWwgKTtcbiAgfTtcbiAgXG4gIGZ1bmN0aW9uIHZhbGlkYXRlUGhvbmUoJHBob25lKSB7XG4gICAgdmFyIHBob25lUmVnID0gL14oKDh8XFwrNylbXFwtIF0/KT8oXFwoP1xcZHszfVxcKT9bXFwtIF0/KT9bXFxkXFwtIF17MTAsMTR9JC87XG4gICAgcmV0dXJuIHBob25lUmVnLnRlc3QoICRwaG9uZSApO1xuICB9O1xuICAkKCcuanMtb3Blbi1zdWJ0aGVtZS1jb250ZW50Jykub24oJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gICAgdmFyICR0aGlzID0gJCggdGhpcyApO1xuICAgIHZhciBsaW5rID0gJHRoaXMuYXR0cignZGF0YS1hdHRyJyk7XG4gICAgdmFyIHRleHQgPSAkdGhpcy50ZXh0KCk7XG4gIFxuICAgICQoJy5zaWRlLW1vZGFsX19icmVhZGNydW1icycpLmFwcGVuZCgnPGxpIGNsYXNzPVwiYnJlYWRjcnVtYnNfX2l0ZW1cIj4nK1xuICAgICc8YSBocmVmPVwiI1wiIGNsYXNzPVwiYnJlYWRjcnVtYnNfX2xpbmsgYnJlYWRjcnVtYnNfX2xpbmstLW1vZGFsXCI+Jyt0ZXh0Kyc8L2E+PC9saT4nKTtcbiAgXG4gICAgJC5hamF4KHtcbiAgICAgIHVybDogY29uZmlnLnN1YnRoZW1lQ29udGVudCArIGxpbmssICAgICAgICAgICAgIFxuICAgICAgZGF0YVR5cGUgOiBcImh0bWxcIiwgICAgICAgICAgICAgICAgICAgIFxuICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgJCgnLnNpZGUtbW9kYWxfX2NvbnRlbnQnKS5odG1sKCBkYXRhICk7XG4gICAgICAgIC8vICQoJy5zaWRlLW1vZGFsX19jb250ZW50JykuYXR0cignZGF0YS1wcmV2JyxsaW5rKTtcbiAgICAgIH0gXG4gICAgfSk7XG4gIH0pO1xuICAkKCcuanMtb3Blbi1zdWJ0aGVtZScpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuICAgIHZhciAkdGhpcyA9ICQoIHRoaXMgKTtcbiAgICB2YXIgbGluayA9ICR0aGlzLmF0dHIoJ2RhdGEtYXR0cicpO1xuICAgIHZhciB0ZXh0ID0gJHRoaXMudGV4dCgpO1xuICAgIHZhciBicmVhZGNydW1icyA9ICc8dWwgY2xhc3M9XCJicmVhZGNydW1ic19fbGlzdCBzaWRlLW1vZGFsX19icmVhZGNydW1icyB1LWpjLWZzXCI+JytcbiAgICAnPGxpIGNsYXNzPVwiYnJlYWRjcnVtYnNfX2l0ZW1cIj48YSBocmVmPVwiamF2YXNjcmlwdDo7XCIgY2xhc3M9XCJicmVhZGNydW1ic19fbGluayBqcy1icmVhZGNydW1ic19fbGluay1tYWluIGJyZWFkY3J1bWJzX19saW5rLS1tb2RhbFwiPtCu0YDQuNC00LjRh9C10YHQutCw0Y8g0L/QvtC80L7RidGMPC9hPjwvbGk+JyArXG4gICAgJzwvdWw+JztcbiAgICBcbiAgICAkKCcuc2lkZS1tb2RhbF9faGVhZGVyLXdyYXBwZXInKS5odG1sKGJyZWFkY3J1bWJzKTtcbiAgICBcbiAgICAkKCcuc2lkZS1tb2RhbF9fYnJlYWRjcnVtYnMnKS5hcHBlbmQoJzxsaSBjbGFzcz1cImJyZWFkY3J1bWJzX19pdGVtXCI+JytcbiAgICAnPGEgaHJlZj1cIiNcIiBjbGFzcz1cImJyZWFkY3J1bWJzX19saW5rIGJyZWFkY3J1bWJzX19saW5rLS1tb2RhbCBqcy1icmVhZGNydW1ic19fbGluay10b3BpY1wiIGRhdGEtcHJldj1cIicgK1xuICAgIGxpbmsgK1xuICAgICdcIj4nK3RleHQrJzwvYT48L2xpPicpO1xuICBcbiAgICAkLmFqYXgoe1xuICAgICAgdXJsOiBjb25maWcuc3VidGhlbWVMaXN0ICsgbGluayxcbiAgICAgIGRhdGFUeXBlIDogXCJqc29uXCIsICAgICAgICAgICAgICAgICAgICBcbiAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICQoJy5zaWRlLW1vZGFsX19jb250ZW50JykuaHRtbCgnPHVsIGNsYXNzPVwic2lkZS1tb2RhbF9fbGlzdCBzaWRlLW1vZGFsX19saXN0LS1oZWxwXCI+PC91bD4nKTtcbiAgICAgICAgJC5lYWNoKGRhdGEsIGZ1bmN0aW9uKGksIHZhbCkgeyBcbiAgICAgICAgICAkKCcuc2lkZS1tb2RhbF9fbGlzdC0taGVscCcpXG4gICAgICAgICAgICAuYXBwZW5kKCc8bGkgY2xhc3M9XCJzaWRlLW1vZGFsX190aGVtZSBqcy1vcGVuLXN1YnRoZW1lLWNvbnRlbnRcIiBkYXRhLWF0dHI9XCInICtcbiAgICAgICAgICAgICAgY29uZmlnLnN1YnRoZW1lTGluayArXG4gICAgICAgICAgICAgIHZhbC5pZCArXG4gICAgICAgICAgICAgICdcIj48YSBocmVmPVwiamF2YXNjcmlwdDo7XCIgY2xhc3M9XCJzaWRlLW1vZGFsX190aGVtZS1saW5rIFwiPicrXG4gICAgICAgICAgICAgIHZhbC50aGVtZSArXG4gICAgICAgICAgICAgICc8L2E+PC9saT4nKVxuICAgICAgICB9KTtcbiAgICAgIH0gXG4gICAgfSk7XG4gIH0pO1xuICBcbiAgXG4gICQoJy5qcy1icmVhZGNydW1ic19fbGluay1tYWluJykub24oJ2NsaWNrJywgZnVuY3Rpb24oKXtcbiAgICB0aGVtZXNMb2FkKCk7XG4gIH0pXG4gIGZ1bmN0aW9uIHRoZW1lc0xvYWQoKXtcbiAgICAkLmFqYXgoe1xuICAgICAgdXJsOiBjb25maWcudGhlbWVzTGlzdCwgICAgICAgICAgICAgXG4gICAgICBkYXRhVHlwZSA6IFwianNvblwiLCAgXG4gICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAkKCcuc2lkZS1tb2RhbF9fY29udGVudCcpLmVtcHR5KCk7XG4gICAgICAgICQoJy5zaWRlLW1vZGFsX19jb250ZW50JykuYXBwZW5kKCc8dWwgY2xhc3M9XCJzaWRlLW1vZGFsX19saXN0IHNpZGUtbW9kYWxfX2xpc3QtLWhlbHBcIj48L3VsPicpO1xuICAgICAgICAkLmVhY2goZGF0YSwgZnVuY3Rpb24oaSwgdmFsKSB7IFxuICAgICAgICAgICQoJy5zaWRlLW1vZGFsX19saXN0LS1oZWxwJylcbiAgICAgICAgICAgIC5hcHBlbmQoJzxsaSBjbGFzcz1cInNpZGUtbW9kYWxfX3RoZW1lIGpzLW9wZW4tc3VidGhlbWVcIiBkYXRhLWF0dHI9XCInICsgXG4gICAgICAgICAgICBjb25maWcudGhlbWVMaW5rICtcbiAgICAgICAgICAgIHZhbC5pZCArXG4gICAgICAgICAgICAnXCI+PGEgaHJlZj1cImphdmFzY3JpcHQ6O1wiIGNsYXNzPVwic2lkZS1tb2RhbF9fdGhlbWUtbGlua1wiPicrXG4gICAgICAgICAgICB2YWwudGhlbWUgK1xuICAgICAgICAgICAgJzwvYT48L2xpPicpXG4gICAgICAgIH0pO1xuICAgICAgICB2YXIgYnJlYWRjcnVtYnMgPSAnPGxpIGNsYXNzPVwiYnJlYWRjcnVtYnNfX2l0ZW1cIj48c3BhbiBjbGFzcz1cImJyZWFkY3J1bWJzX19saW5rIGpzLWJyZWFkY3J1bWJzX19saW5rLW1haW4gYnJlYWRjcnVtYnNfX2xpbmstLW1vZGFsXCI+0K7RgNC40LTQuNGH0LXRgdC60LDRjyDQv9C+0LzQvtGJ0Yw8L3NwYW4+PC9saT4nOyAgXG4gICAgICAgICQoJy5zaWRlLW1vZGFsX19icmVhZGNydW1icycpLmh0bWwoYnJlYWRjcnVtYnMpO1xuICAgICAgfSBcbiAgICB9KTtcbiAgfVxuICAkKCcuanMtYnRuLXllcycpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuICAgICQuYWpheCh7XG4gICAgICB1cmw6IGNvbmZpZy5mb3JtSGVscFllcywgICAgICAgICAgICAgXG4gICAgICBkYXRhVHlwZSA6IFwiaHRtbFwiLCAgICAgICAgICAgICAgICAgICAgXG4gICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAkKCcuc3VidGhlbWVfX2Jsb2NrJykuaHRtbCggZGF0YSApO1xuICAgICAgfSBcbiAgICB9KTtcbiAgfSk7XG4gIFxuICAkKCcuanMtYnRuLW5vJykub24oJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gICAgJC5hamF4KHtcbiAgICAgIHVybDogY29uZmlnLmZvcm1IZWxwRm9ybSwgICAgICAgICAgICAgXG4gICAgICBkYXRhVHlwZSA6IFwiaHRtbFwiLCAgICAgICAgICAgICAgICAgICAgXG4gICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAkKCcuc3VidGhlbWVfX2Jsb2NrJykuaHRtbCggZGF0YSApO1xuICAgICAgfSBcbiAgICB9KTtcbiAgfSk7XG4gIFxuICBcbiAgJCgnLmpzLWJyZWFkY3J1bWJzX19saW5rLXRvcGljJykub24oJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gICAgdmFyICR0aGlzID0gJCggdGhpcyApO1xuICAgIHZhciB0ZXh0ID0gJHRoaXMudGV4dCgpO1xuICAgIHZhciBwcmV2aW91cyA9ICR0aGlzLmF0dHIoJ2RhdGEtcHJldicpO1xuICAgICQuYWpheCh7XG4gICAgICB1cmw6IGNvbmZpZy5zdWJ0aGVtZUxpc3QgKyBwcmV2aW91cyArICcuanNvbicsXG4gICAgICBkYXRhVHlwZSA6IFwianNvblwiLCAgICAgICAgICAgICAgICAgICAgXG4gICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAkKCcuc2lkZS1tb2RhbF9fY29udGVudCcpLmh0bWwoJzx1bCBjbGFzcz1cInNpZGUtbW9kYWxfX2xpc3Qgc2lkZS1tb2RhbF9fbGlzdC0taGVscFwiPjwvdWw+Jyk7XG4gICAgICAgICQuZWFjaChkYXRhLCBmdW5jdGlvbihpLCB2YWwpIHsgXG4gICAgICAgICAgJCgnLnNpZGUtbW9kYWxfX2xpc3QtLWhlbHAnKVxuICAgICAgICAgICAgLmFwcGVuZCgnPGxpIGNsYXNzPVwic2lkZS1tb2RhbF9fdGhlbWUganMtb3Blbi1zdWJ0aGVtZS1jb250ZW50XCIgZGF0YS1hdHRyPVwiJyArXG4gICAgICAgICAgICAgIGNvbmZpZy5zdWJ0aGVtZUxpbmsgK1xuICAgICAgICAgICAgICB2YWwuaWQgK1xuICAgICAgICAgICAgICAnXCI+PGEgaHJlZj1cImphdmFzY3JpcHQ6O1wiIGNsYXNzPVwic2lkZS1tb2RhbF9fdGhlbWUtbGluayBcIj4nK1xuICAgICAgICAgICAgICB2YWwudGhlbWUgK1xuICAgICAgICAgICAgICAnPC9hPjwvbGk+JylcbiAgICAgICAgfSk7XG4gICAgICAgIHZhciBicmVhZGNydW1icyA9ICc8dWwgY2xhc3M9XCJicmVhZGNydW1ic19fbGlzdCBzaWRlLW1vZGFsX19icmVhZGNydW1icyB1LWpjLWZzXCI+JytcbiAgICAgICAgJzxsaSBjbGFzcz1cImJyZWFkY3J1bWJzX19pdGVtXCI+PGEgaHJlZj1cImphdmFzY3JpcHQ6O1wiIGNsYXNzPVwiYnJlYWRjcnVtYnNfX2xpbmsganMtYnJlYWRjcnVtYnNfX2xpbmstbWFpbiBicmVhZGNydW1ic19fbGluay0tbW9kYWxcIj7QrtGA0LjQtNC40YfQtdGB0LrQsNGPINC/0L7QvNC+0YnRjDwvYT48L2xpPicgK1xuICAgICAgICAnPC91bD4nO1xuICAgICAgICAkKCcuc2lkZS1tb2RhbF9faGVhZGVyLXdyYXBwZXInKS5odG1sKGJyZWFkY3J1bWJzKTtcbiAgXG4gICAgICAgICQoJy5zaWRlLW1vZGFsX19icmVhZGNydW1icycpLmFwcGVuZCgnPGxpIGNsYXNzPVwiYnJlYWRjcnVtYnNfX2l0ZW1cIj4nK1xuICAgICAgICAnPGEgaHJlZj1cIiNcIiBjbGFzcz1cImJyZWFkY3J1bWJzX19saW5rIGJyZWFkY3J1bWJzX19saW5rLS1tb2RhbCBqcy1icmVhZGNydW1ic19fbGluay10b3BpY1wiIGRhdGEtcHJldj1cIicgK1xuICAgICAgICBwcmV2aW91cyArXG4gICAgICAgICdcIj4nK3RleHQrJzwvYT48L2xpPicpO1xuICAgICAgfSBcbiAgICB9KTtcbiAgfSlcbiAgJCgnLmpzLXRhYl9faXRlbScpLm9uKCdjbGljaycsZnVuY3Rpb24oZSkge1xuICAgIHZhciAkdGhpcyA9ICQoIHRoaXMgKTtcbiAgXG4gICAgJHRoaXMuY2xvc2VzdCgnLnRhYicpLmZpbmQoJy5qcy10YWJfX2l0ZW0nKS5yZW1vdmVDbGFzcygnanMtYWN0aXZlJyk7XG4gICAgJHRoaXMuYWRkQ2xhc3MoJ2pzLWFjdGl2ZScpO1xuICBcbiAgICB2YXIgdmFsID0gJHRoaXMuYXR0cignZGF0YS10YWInKTsgICAgXG4gIFxuICAgICR0aGlzLmNsb3Nlc3QoJy50YWInKS5maW5kKCcudGFiX19ibG9jaycpLnJlbW92ZUNsYXNzKCdqcy1hY3RpdmUnKTtcbiAgICAkKCdbZGF0YS1jb250ZW50PVwiJyt2YWwrJ1wiXScpLmFkZENsYXNzKCdqcy1hY3RpdmUnKTtcbiAgfSk7XG4gICQoJyNjb250YWN0cycpLm9mZignc3VibWl0Jykub24oJ3N1Ym1pdCcsIGZ1bmN0aW9uKGUpIHtcbiAgICAkKCcjY29udGFjdHMtbW9kYWwnKS5hZGRDbGFzcygnaXNPcGVuZWQnKTtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgdmFyIGZvcm0gPSB0aGlzO1xuICBcbiAgICAkLmFqYXgoe1xuICAgICAgZGF0YTogJChmb3JtKS5zZXJpYWxpemUoKSxcbiAgICAgIG1ldGhvZDogZm9ybS5tZXRob2QsXG4gICAgICB1cmw6IGZvcm0uYWN0aW9uLCAgICAgICAgICAgICBcbiAgICAgIGRhdGFUeXBlIDogXCJodG1sXCIsICAgICAgICAgICAgICAgICAgICBcbiAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICQoJy5tb2RhbF9fY29udGVudCcpLmh0bWwoIGRhdGEgKTtcbiAgICAgICAgZm9ybS5yZXNldCgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9KTsgXG4gIFxuICAkKCcjaGVscF9zaWRlYmFyX2Zvcm0nKS5vZmYoJ3N1Ym1pdCcpLm9uKCdzdWJtaXQnLCBmdW5jdGlvbihlKSB7XG4gICAgJCgnI2hlbHAtbW9kYWwnKS5hZGRDbGFzcygnaXNPcGVuZWQnKTtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgdmFyIGZvcm0gPSB0aGlzO1xuICBcbiAgICAkLmFqYXgoe1xuICAgICAgZGF0YTogJChmb3JtKS5zZXJpYWxpemUoKSxcbiAgICAgIG1ldGhvZDogZm9ybS5tZXRob2QsXG4gICAgICB1cmw6IGZvcm0uYWN0aW9uLCAgICAgICAgICAgICBcbiAgICAgIGRhdGFUeXBlIDogXCJodG1sXCIsICAgICAgICAgICAgICAgICAgICBcbiAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICQoJy5tb2RhbF9fY29udGVudCcpLmh0bWwoIGRhdGEgKTtcbiAgICAgICAgZm9ybS5yZXNldCgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9KTtcbn0pIl19
