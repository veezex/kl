"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}$(document).ready(function(){var a;if((a=jQuery).fn.emulateTransitionEnd=function(e){var t=!1,s=this;return a(this).one("bsTransitionEnd",function(){t=!0}),setTimeout(function(){t||a(s).trigger(a.support.transition.end)},e),this},a(function(){a.support.transition=function(){var e=document.createElement("bootstrap"),t={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"};for(var s in t)if(void 0!==e.style[s])return{end:t[s]};return!1}(),a.support.transition&&(a.event.special.bsTransitionEnd={bindType:a.support.transition.end,delegateType:a.support.transition.end,handle:function(e){if(a(e.target).is(this))return e.handleObj.handler.apply(this,arguments)}})}),function(m){var u=function(e,t){this.$element=m(e),this.$indicators=this.$element.find(".carousel-indicators"),this.options=t,this.paused=null,this.sliding=null,this.interval=null,this.$active=null,this.$items=null,this.options.keyboard&&this.$element.on("keydown.bs.carousel",m.proxy(this.keydown,this)),"hover"==this.options.pause&&!("ontouchstart"in document.documentElement)&&this.$element.on("mouseenter.bs.carousel",m.proxy(this.pause,this)).on("mouseleave.bs.carousel",m.proxy(this.cycle,this))};function l(i){return this.each(function(){var e=m(this),t=e.data("bs.carousel"),s=m.extend({},u.DEFAULTS,e.data(),"object"==_typeof(i)&&i),a="string"==typeof i?i:s.slide;t||e.data("bs.carousel",t=new u(this,s)),"number"==typeof i?t.to(i):a?t[a]():s.interval&&t.pause().cycle()})}u.VERSION="3.3.5",u.TRANSITION_DURATION=600,u.DEFAULTS={interval:5e3,pause:"hover",wrap:!0,keyboard:!0},u.prototype.keydown=function(e){if(!/input|textarea/i.test(e.target.tagName)){switch(e.which){case 37:this.prev();break;case 39:this.next();break;default:return}e.preventDefault()}},u.prototype.cycle=function(e){return e||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(m.proxy(this.next,this),this.options.interval)),this},u.prototype.getItemIndex=function(e){return this.$items=e.parent().children(".item"),this.$items.index(e||this.$active)},u.prototype.getItemForDirection=function(e,t){var s=this.getItemIndex(t);if(("prev"==e&&0===s||"next"==e&&s==this.$items.length-1)&&!this.options.wrap)return t;var a=(s+("prev"==e?-1:1))%this.$items.length;return this.$items.eq(a)},u.prototype.to=function(e){var t=this,s=this.getItemIndex(this.$active=this.$element.find(".item.active"));if(!(e>this.$items.length-1||e<0))return this.sliding?this.$element.one("slid.bs.carousel",function(){t.to(e)}):s==e?this.pause().cycle():this.slide(s<e?"next":"prev",this.$items.eq(e))},u.prototype.pause=function(e){return e||(this.paused=!0),this.$element.find(".next, .prev").length&&m.support.transition&&(this.$element.trigger(m.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},u.prototype.next=function(){if(!this.sliding)return this.slide("next")},u.prototype.prev=function(){if(!this.sliding)return this.slide("prev")},u.prototype.slide=function(e,t){var s=this.$element.find(".item.active"),a=t||this.getItemForDirection(e,s),i=this.interval,n="next"==e?"left":"right",l=this;if(a.hasClass("active"))return this.sliding=!1;var o=a[0],r=m.Event("slide.bs.carousel",{relatedTarget:o,direction:n});if(this.$element.trigger(r),!r.isDefaultPrevented()){if(this.sliding=!0,i&&this.pause(),this.$indicators.length){this.$indicators.find(".active").removeClass("active");var c=m(this.$indicators.children()[this.getItemIndex(a)]);c&&c.addClass("active")}var d=m.Event("slid.bs.carousel",{relatedTarget:o,direction:n});return m.support.transition&&this.$element.hasClass("slide")?(a.addClass(e),a[0].offsetWidth,s.addClass(n),a.addClass(n),s.one("bsTransitionEnd",function(){a.removeClass([e,n].join(" ")).addClass("active"),s.removeClass(["active",n].join(" ")),l.sliding=!1,setTimeout(function(){l.$element.trigger(d)},0)}).emulateTransitionEnd(u.TRANSITION_DURATION)):(s.removeClass("active"),a.addClass("active"),this.sliding=!1,this.$element.trigger(d)),i&&this.cycle(),this}};var e=m.fn.carousel;m.fn.carousel=l,m.fn.carousel.Constructor=u,m.fn.carousel.noConflict=function(){return m.fn.carousel=e,this};var t=function(e){var t,s=m(this),a=m(s.attr("data-target")||(t=s.attr("href"))&&t.replace(/.*(?=#[^\s]+$)/,""));if(a.hasClass("carousel")){var i=m.extend({},a.data(),s.data()),n=s.attr("data-slide-to");n&&(i.interval=!1),l.call(a,i),n&&a.data("bs.carousel").to(n),e.preventDefault()}};m(document).on("click.bs.carousel.data-api","[data-slide]",t).on("click.bs.carousel.data-api","[data-slide-to]",t),m(window).on("load",function(){m('[data-ride="carousel"]').each(function(){var e=m(this);l.call(e,e.data())})})}(jQuery),$(".carousel-item-image .item").each(function(){for(var e=$(this),t=1;t<5;t++)(e=e.next()).length||(e=$(this).siblings(":first")),e.children(":first-child").clone().addClass("cloneditem-"+t).appendTo($(this))}),$(".carousel").carousel({interval:0}),$("#carousel-item-image").carousel({interval:0}),$(".benefits__item").on("click",function(){var e=$(this),t=e.attr("data-name"),s=e.closest(".filter__checkbox-wrap").find("#"+t);e.hasClass("isActive")?s.val(s.data("y")):s.val(s.data("n"))}),"undefined"==typeof jQuery)throw new Error("Bootstrap's JavaScript requires jQuery");if(function(e){var t=jQuery.fn.jquery.split(" ")[0].split(".");if(t[0]<2&&t[1]<9||1==t[0]&&9==t[1]&&t[2]<1||3<t[0])throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 4")}(),function(l){var o=function e(t,s){this.$element=l(t),this.options=l.extend({},e.DEFAULTS,s),this.$trigger=l('[data-toggle="collapse"][href="#'+t.id+'"],[data-toggle="collapse"][data-target="#'+t.id+'"]'),this.transitioning=null,this.options.parent?this.$parent=this.getParent():this.addAriaAndCollapsedClass(this.$element,this.$trigger),this.options.toggle&&this.toggle()};function i(e){var t,s=e.attr("data-target")||(t=e.attr("href"))&&t.replace(/.*(?=#[^\s]+$)/,"");return l(s)}function r(a){return this.each(function(){var e=l(this),t=e.data("bs.collapse"),s=l.extend({},o.DEFAULTS,e.data(),"object"==_typeof(a)&&a);!t&&s.toggle&&/show|hide/.test(a)&&(s.toggle=!1),t||e.data("bs.collapse",t=new o(this,s)),"string"==typeof a&&t[a]()})}o.VERSION="3.3.7",o.TRANSITION_DURATION=350,o.DEFAULTS={toggle:!0},o.prototype.dimension=function(){return this.$element.hasClass("width")?"width":"height"},o.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass("in")){var e,t=this.$parent&&this.$parent.children(".collapse__tab").children(".in, .collapsing");if(!(t&&t.length&&(e=t.data("bs.collapse"))&&e.transitioning)){var s=l.Event("show.bs.collapse");if(this.$element.trigger(s),!s.isDefaultPrevented()){t&&t.length&&(r.call(t,"hide"),e||t.data("bs.collapse",null));var a=this.dimension();this.$element.removeClass("collapse").addClass("collapsing")[a](0).attr("aria-expanded",!0),this.$trigger.removeClass("collapsed").attr("aria-expanded",!0),this.transitioning=1;var i=function(){this.$element.removeClass("collapsing").addClass("collapse in")[a](""),this.transitioning=0,this.$element.trigger("shown.bs.collapse")};if(!l.support.transition)return i.call(this);var n=l.camelCase(["scroll",a].join("-"));this.$element.one("bsTransitionEnd",l.proxy(i,this)).emulateTransitionEnd(o.TRANSITION_DURATION)[a](this.$element[0][n])}}}},o.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass("in")){var e=l.Event("hide.bs.collapse");if(this.$element.trigger(e),!e.isDefaultPrevented()){var t=this.dimension();this.$element[t](this.$element[t]())[0].offsetHeight,this.$element.addClass("collapsing").removeClass("collapse in").attr("aria-expanded",!1),this.$trigger.addClass("collapsed").attr("aria-expanded",!1),this.transitioning=1;var s=function(){this.transitioning=0,this.$element.removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse")};if(!l.support.transition)return s.call(this);this.$element[t](0).one("bsTransitionEnd",l.proxy(s,this)).emulateTransitionEnd(o.TRANSITION_DURATION)}}},o.prototype.toggle=function(){this[this.$element.hasClass("in")?"hide":"show"]()},o.prototype.getParent=function(){return l(this.options.parent).find('[data-toggle="collapse"][data-parent="'+this.options.parent+'"]').each(l.proxy(function(e,t){var s=l(t);this.addAriaAndCollapsedClass(i(s),s)},this)).end()},o.prototype.addAriaAndCollapsedClass=function(e,t){var s=e.hasClass("in");e.attr("aria-expanded",s),t.toggleClass("collapsed",!s).attr("aria-expanded",s)};var e=l.fn.collapse;l.fn.collapse=r,l.fn.collapse.Constructor=o,l.fn.collapse.noConflict=function(){return l.fn.collapse=e,this},l(document).on("click.bs.collapse.data-api",'[data-toggle="collapse"]',function(e){var t=l(this);t.attr("data-target")||e.preventDefault();var s=i(t),a=s.data("bs.collapse")?"toggle":t.data();r.call(s,a)})}(jQuery),$(".js-hide-filter").on("click",function(e){e.preventDefault();var t=$(this);$(".filter__input-group--add").hasClass("js-isVisible")?($(".filter__input-group--add").removeClass("js-isVisible"),t.removeClass("iSopened")):($(".filter__input-group--add").addClass("js-isVisible"),t.addClass("iSopened"))}),$("#counter").length){var t=0;$(window).scroll(function(){var e=$("#counter").offset().top-window.innerHeight;0==t&&$(window).scrollTop()>e&&($(".counter-value").each(function(){var e=$(this),t=e.attr("data-count");$({countNum:e.text()}).animate({countNum:t},{duration:2e3,easing:"swing",step:function(){e.text(Math.floor(this.countNum))},complete:function(){e.text(this.countNum),$(".statistics__card-text").addClass("isAnimated"),$(".history__card-text").addClass("isAnimated")}})}),t=1)})}if(function(){function a(s,a){$.ajax({data:{item:s,action:a},url:config.favoriteMod,dataType:"json",method:"POST",success:function(e){if(e.success){var t=$(".js-add_favorite[data-item="+s+"]");"add"==a&&t.addClass("is-favorite"),"remove"==a&&t.removeClass("is-favorite"),$(".js-top_show_izbrannoe")[e.empty?"removeClass":"addClass"]("hover")}}})}$("body").on("click",".js-remove_favorite",function(e){e.preventDefault();var t=$(this);a(t.data("item"),"remove"),t.closest(".line").remove(),$("#izbrannoe .line").length||$(".js-izbrannoe_empty").show()}),$('.js-modal__btn[data-modal="izbrannoe"]').on("click",function(){$.ajax({url:config.favoriteList,dataType:"html",success:function(e){$('#izbrannoe .tab__block[data-content="list"]').html(e)}})}),$("body").on("click",".js-add_favorite",function(e){e.preventDefault();var t=$(this);if(t.hasClass("is-favorite"))var s="remove";else s="add";a(t.data("item"),s)})}(),$("#form-egrn").off("submit").on("submit",function(e){$("#egrn").addClass("isOpened"),e.preventDefault();var t=this;$.ajax({data:$(t).serialize(),method:t.method,url:t.action,dataType:"html",success:function(e){$("#egrn .modal__content").html(e),t.reset()}})}),$('.js-modal__btn[data-modal="employee"]').on("click",function(){var e=$(this).attr("data-name");$.ajax({url:config.empName+e,dataType:"html",success:function(e){$(".modal__content").html(e)}})}),$("#consult form,#form-otzyv,#sell form").off("submit").on("submit",function(e){e.preventDefault();var t=this;return $.ajax({data:$(t).serialize(),method:t.method,url:t.action,dataType:"html",success:function(e){$($(t).data("cont")+" .modal__content").html(e)},error:function(e){$($(t).data("cont")+" .modal__content").html(data)}}),!1}),$("#contacts").off("submit").on("submit",function(e){$("#contacts-modal").addClass("isOpened"),e.preventDefault();var t=this;$.ajax({data:$(t).serialize(),method:t.method,url:t.action,dataType:"html",success:function(e){$(".modal__content").html(e),t.reset()}})}),$("#help_sidebar_form").off("submit").on("submit",function(e){$("#help-modal").addClass("isOpened"),e.preventDefault();var t=this;$.ajax({data:$(t).serialize(),method:t.method,url:t.action,dataType:"html",success:function(e){$(".modal__content").html(e),t.reset()}})}),$(".dropzone-images").each(function(){var e=$(this),a=e.data("param");e.addClass("dropzone").dropzone({addRemoveLinks:!0,acceptedFiles:"image/*",clickable:!0,thumbnailWidth:120,thumbnailHeight:120,maxFiles:e.data("maxfiles"),createImageThumbnails:!0,paramName:"file",url:e.data("upload"),dictRemoveFile:"Удаление фотографии",dictDefaultMessage:"Перетащите сюда фотографии или кликните<br> для загрузки файлов<br><br>              (максимум "+e.data("maxfiles")+" фотографий)",dictFileTooBig:"Превышен допустимый размер файла: {{maxFilesize}} Мб",dictMaxFilesExceeded:"Превышено максимальное кол-во фотографий для загрузки: {{maxFiles}}",dictInvalidFileType:"Вы не можете добавить файлы этого типа",dictCancelUpload:"Отменить загрузку",dictUploadCanceled:"Загрузка отменена",maxFilesize:2,success:function(e,t){var s=$(e.previewElement);t.added.forEach(function(e){s.append('<input type="hidden" name="'+a+'[]" value="'+e+'">')})}})}),$(".js-tab-change-value").on("click",function(){var e=$(this);e.closest(".tab").find(".js-tab-change-value").removeClass("js-active"),e.addClass("js-active"),$(e.data("form")).removeClass().addClass("mode-"+e.data("value")).find(e.data("input")).val(e.data("value"))}),$(document).ready(function(){var e=window.config.currentCity;function a(e,t){return t.name<e.name?1:-1}function t(){localStorage.getItem("regions")?s(JSON.parse(localStorage.getItem("regions"))):$.ajax({url:window.config.geoRegions,dataType:"json",success:function(e){localStorage.setItem("regions",JSON.stringify(e)),s(e)}})}function s(i){i.sort(a);var n=[];$.each(i,function(e,t){var s={},a=t.name.charAt(0);s.title=a,s.items=i.filter(function(e){return e.name.charAt(0)==a}),n.push(s)});var e=n.sort(function(e,t){return e.title<t.title?-1:1}).reduce(function(e,t){return e.length&&e[e.length-1].title==t.title||e.push(t),e},[]);$.each(e,function(e,t){$(".all-regions").append('<div class="region-row"><div class="first-letter">'+t.title+'</div><ul class="region-list" data-letter="'+t.title+'"></ul></div>'),$.each(t.items,function(e,t){var s=t.name.charAt(0);$('.region-list[data-letter="'+s+'"]').append('<li class="region" data-region="'+t.id+'"><span>'+t.name+"</span></li>")})}),$(".region").click(function(){var e=$(this).data("region"),t=JSON.parse(localStorage.getItem("cities"));$(".cities").html(""),function(e,s){e.sort(a);var i=[],n=[];$.each(e,function(e,t){t.rid==s&&i.push(t)}),$.each(i,function(e,t){var s={},a=t.name.charAt(0);s.title=a,s.items=i.filter(function(e){return e.name.charAt(0)==a}),n.push(s)});var t=n.sort(function(e,t){return e.title<t.title?-1:1}).reduce(function(e,t){return e.length&&e[e.length-1].title==t.title||e.push(t),e},[]);$.each(t,function(e,t){$(".cities").append('<div class="cities-row"><div class="first-letter">'+t.title+'</div><ul class="cities-list" data-letter="'+t.title+'"></ul></div>'),$.each(t.items,function(e,t){var s=t.name.charAt(0);$('.cities-list[data-letter="'+s+'"]').append('<li class="city" data-region="'+t.id+'"><span>'+t.name+"</span></li>"),$(".city").click(function(){var e=$(this).text();$(".current-city").text(e),$(".modal-item").removeClass("modal-item--active")})})})}(t,e)})}function i(){localStorage.getItem("cities")?n(JSON.parse(localStorage.getItem("cities"))):$.ajax({url:window.config.geoCities,dataType:"json",success:function(e){localStorage.setItem("cities",JSON.stringify(e)),n(e)}})}function n(i){i.sort(a);var n=[];$.each(i,function(e,t){var s={},a=t.name.charAt(0);s.title=a,s.items=i.filter(function(e){return e.name.charAt(0)==a}),n.push(s)});var e=n.sort(function(e,t){return e.title<t.title?-1:1}).reduce(function(e,t){return e.length&&e[e.length-1].title==t.title||e.push(t),e},[]);$.each(e,function(e,t){$(".cities").append('<div class="cities-row"><div class="first-letter">'+t.title+'</div><ul class="cities-list" data-letter="'+t.title+'"></ul></div>'),$.each(t.items,function(e,t){var s=t.name.charAt(0);$('.cities-list[data-letter="'+s+'"]').append('<li class="city" data-region="'+t.id+'"><span>'+t.name+"</span></li>")})}),$(".city").click(function(){var e=$(this).text();$(".current-city").text(e),$(".modal-item").removeClass("modal-item--active")})}$(".current-city").text(e.name),$(".your-city span").text(e.name+"?"),setTimeout(function(){$(".current-city-choose").addClass("current-city-choose--active")},700),$(".submit-city").click(function(e){e.preventDefault(),$(".current-city-choose").removeClass("current-city-choose--active")}),$(".other-city").click(function(e){e.preventDefault(),$(".current-city-choose").removeClass("current-city-choose--active"),$(".modal-item").addClass("modal-item--active"),$("body").addClass("overflow"),t(),i()}),$(".close-modal").click(function(e){e.preventDefault(),$(".modal-item").removeClass("modal-item--active"),$("body").removeClass("overflow")}),$(".modal-overlay").click(function(e){e.preventDefault(),$(".modal-item").removeClass("modal-item--active"),$("body").removeClass("overflow")}),$(".current-city").click(function(){$(".modal-item").addClass("modal-item--active"),$("body").addClass("overflow"),$(".all-regions").html(""),$(".cities").html(""),t(),i()}),$(".all-cities").click(function(){$(".cities").html(""),i()}),$(".city-search-input").on("input",function(){var e=$(this).val();(3<=e.length&&setTimeout(function(){$.ajax({url:window.config.geoCities+"?q="+e,dataType:"json",success:function(e){$(".cities").html(""),n(e)}})},500),0==e.length)&&($(".cities").html(""),n(JSON.parse(localStorage.getItem("cities"))))})}),$(".js-header-menu").on("click",function(){$(".header__side").addClass("isOpened")}),$(".side-modal").on("click",function(e){$(e.target).closest(".side-modal__wrapper").length||$(".side-modal").removeClass("isOpened")}),$("#modal-close-menu").on("click",function(e){$(this).closest(".side-modal").removeClass("isOpened")}),$(".history__wrapper").length){var s=0,e=function(){var e=$(".history__wrapper").offset().top-window.innerHeight;0==s&&$(window).scrollTop()>e&&(setTimeout(function(){$(".history__card-header").addClass("isAnimated"),setTimeout(function(){$(".history__card-text").addClass("isAnimated")},1e3)},500),s=1)};$(window).scroll(e),e()}if($(".js-select-btn").each(function(){var t=$(this),s=t.closest(".filter__input-wrap"),a=s.find("input").val();s.find(".js-select-block .js-select-item").removeClass("js-selected").each(function(){var e=$(this);if(a==e.data("value"))return t.text(e.text()),e.addClass("js-selected"),s.find(".filter__floating-label").addClass("floated"),!1})}),$(".js-select-btn").on("click",function(){var e=$(this),t=e.closest(".filter__input-block").find(".js-select-block");t.hasClass("isOpen")?(e.addClass("isClosed"),e.removeClass("isOpen"),t.removeClass("isOpen")):($(".js-select-block").removeClass("isOpen"),$(".js-select-btn").removeClass("isOpen"),e.addClass("isOpen"),t.addClass("isOpen"));var s=e.closest(".filter__input-block");s.find(".filter__empty").length||s.find(".js-filter-hidden").prop("required")&&(s.find(".js-filter-hidden").val()?(s.find(".filter__empty").remove(),e.removeClass("filter__danger")):(s.find(".filter__input-wrap").append("<span class='filter__empty'>Поле обязательно для заполнения</span>"),e.addClass("filter__danger")))}),$(".js-select-item").on("click",function(){var e=$(this);e.addClass("js-selected");var t=e.text(),s=e.data("value"),a=e.attr("data-group");$('.js-select-btn[data-group="'+a+'"]').text(t),e.closest(".filter__input-block").find(".js-select-label").addClass("floated"),$(".js-select-btn.isOpen").addClass("isClosed"),$(".js-select-block.isOpen").removeClass("isOpen"),$(".js-select-btn.isOpen").removeClass("isOpen"),$('.js-filter-hidden[data-group="'+a+'"]').val(s);var i=e.closest(".filter__input-block");if(i.find(".js-filter-hidden").prop("required")){i.find(".js-filter-hidden").val()?(i.find(".filter__empty").remove(),$('.js-select-btn[data-group="'+a+'"]').removeClass("filter__danger")):(i.find(".filter__input-wrap").append("<span class='filter__empty'>Поле обязательно для заполнения</span>"),$('.js-select-btn[data-group="'+a+'"]').addClass("filter__danger"))}}),0<$(".js-select-btn.isOpen").length&&$(document).on("click",function(e){if(!$(e.target).closest(".js-select-block.isOpen").length&&!$(e.target).closest(".js-select-btn.isOpen").length){$(".js-select-btn.isOpen").addClass("isClosed"),$(".js-select-block.isOpen").removeClass("isOpen"),$(".js-select-btn.isOpen").removeClass("isOpen");var t=$(".js-select-btn.isClosed").closest(".filter__input-block");t.find(".filter__empty").length||t.find(".js-filter-hidden").prop("required")&&(t.find(".js-filter-hidden").val()?(t.find(".filter__empty").remove(),$(".js-select-btn.isClosed").removeClass("filter__danger")):(t.find(".filter__input-wrap").append("<span class='filter__empty'>Поле обязательно для заполнения</span>"),$(".js-select-btn.isClosed").addClass("filter__danger")))}}),$("body").on("focus",".filter__input",function(){$(this).closest(".filter__input-wrap").find(".filter__floating-label").addClass("floated")}),$("body").on("blur",".filter__input",function(){var e,t,s=$(this),a=s.closest(".filter__input-wrap"),i=a.find(".filter__input");if(s.val()){var n=i.data("validate");if("name"===n)if(-1<i.val().indexOf(" "))a.addClass("validated"),i.hasClass("filter__danger")&&(i.removeClass("filter__danger"),a.find(".filter__empty").remove());else{a.removeClass("validated"),a.find(".filter__empty").remove();l="<span class='filter__empty'>Поле должно содержать Имя и Фамилию через пробел</span>";i.addClass("filter__danger"),a.append(l)}else if("email"===n)if(t=i.val(),/^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/.test(t))a.addClass("validated"),i.hasClass("filter__danger")&&(i.removeClass("filter__danger"),a.find(".filter__empty").remove());else{a.removeClass("validated"),a.find(".filter__empty").remove();l="<span class='filter__empty'>Email должен содержать латинские буквы, символы @ и .</span>";i.addClass("filter__danger"),a.append(l)}else if("tel"===n)if(e=i.val(),/^((8|\+7)[\- ]?)?(\(?\d{3}\)?[\- ]?)?[\d\- ]{10,14}$/.test(e))a.addClass("validated"),i.hasClass("filter__danger")&&(i.removeClass("filter__danger"),a.find(".filter__empty").remove());else{a.removeClass("validated"),a.find(".filter__empty").remove();l="<span class='filter__empty'>Номер телефона должен содержать от 10 до 14 цифр</span>";i.addClass("filter__danger"),a.append(l)}else i.removeClass("filter__danger"),a.find(".filter__empty").remove()}else{var l="<span class='filter__empty'>Поле обязательно для заполнения</span>";a.removeClass("validated"),a.find(".filter__floating-label").removeClass("floated"),s.prop("required")&&(i.hasClass("filter__danger")||(i.addClass("filter__danger"),a.append(l)))}}),$(".item__img").click(function(){var e=$(this).attr("src");$(".image__container").css("background-image","url("+e+")")}),$("#modal-close-help").on("click",function(e){$(this).closest(".js-modal").removeClass("isOpened")}),null!==document.getElementById("map")){var n=$("#map").attr("data-lng"),l=$("#map").attr("data-lat");ymaps.ready(function(){var i=new ymaps.Map("map",{center:[n,l],zoom:10,controls:[]}),t=ymaps.templateLayoutFactory.createClass("<div class='map__zoom-block u-jc-sbu-fd-col'><div id='zoom-in' class='map__zoom u-jc-ce u-ai-ce'><svg class='svg' width='12px' height='12px' viewBox='0 0 12 12' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'><g id='Group' ><rect id='Rectangle-3' x='0' y='5' width='12' height='2'></rect><rect id='Rectangle-3' transform='translate(6.000000, 6.000000) rotate(90.000000) translate(-6.000000, -6.000000) ' x='0' y='5' width='12' height='2'></rect></g></svg></div><br><div id='zoom-out' class='map__zoom map__zoom--minus u-jc-ce u-ai-ce'><svg class='svg' width='8px' height='2px' viewBox='0 0 8 2' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'><rect id='map__minus' width='8' height='2'></rect></svg></div>",{build:function(){t.superclass.build.call(this),this.zoomInCallback=ymaps.util.bind(this.zoomIn,this),this.zoomOutCallback=ymaps.util.bind(this.zoomOut,this),$("#zoom-in").bind("click",this.zoomInCallback),$("#zoom-out").bind("click",this.zoomOutCallback)},clear:function(){$("#zoom-in").unbind("click",this.zoomInCallback),$("#zoom-out").unbind("click",this.zoomOutCallback),t.superclass.clear.call(this)},zoomIn:function(){var e=this.getData().control.getMap();e.setZoom(e.getZoom()+1,{checkZoomRange:!0})},zoomOut:function(){var e=this.getData().control.getMap();e.setZoom(e.getZoom()-1,{checkZoomRange:!0})}});function s(s,a){var t=new ymaps.ObjectManager({clusterize:!0,gridSize:64,clusterIconLayout:"default#pieChart",clusterDisableClickZoom:!1});new Promise(function(e,t){$.ajax({data:a,method:"GET",url:s,dataType:"json",success:e,error:t})}).then(function(e){return{type:"FeatureCollection",features:e.map(function(e,t){return{id:t,type:"Feature",geometry:{type:"Point",coordinates:[e.lat,e.long]},properties:{iconCaption:e.serialNumber,balloonContent:'<a target="_blank" class="" href="'+e.link+'"><div class="balloon__image-block"><div class="balloon__image" style="background-image:url('+e.image+')"></div></div><div class="balloon__inner"><p class="balloon__price">'+e.price+'</p><ul class="balloon__list"><li class="balloon__item ">'+e.rooms+'</li><li class="balloon__item ">'+e.square+'&nbsp;м<sup>2</sup></li><li class="balloon__item ">'+e.floor+'</li></ul><p class="balloon__address">'+e.address+"</p></div></a>"}}})}}).then(function(e){t.add(e)}).then(function(e){return $(".js-modal").removeClass("isOpened"),e}),t.objects.options.set({iconLayout:"default#image",iconImageHref:config.mapBaloon,iconImageSize:[57,51],iconImageOffset:[-18,-45]}),i.geoObjects.add(t)}$(window).on("resize",function(){var e=document.getElementById("map").offsetHeight/2-50;i.controls.remove("zoomControl"),i.controls.add("zoomControl",{layout:t,position:{left:"30px",top:e}})}).resize(),s(config.mapLinks,null),$(".js-map-filter-form").submit(function(){var e=config.mapNewLinks,t=$(this).serialize();return i.geoObjects.removeAll(),s(e,t),!1})})}else if(null!==document.getElementById("item-map")){ymaps.ready(function(){var t=new ymaps.Map("item-map",{center:[n,l],zoom:13,controls:[]}),e=new ymaps.Placemark([n,l],{},{iconLayout:"default#image",iconImageHref:config.mapBaloon,iconImageSize:[57,51],iconImageOffset:[-37,-50]}),s=ymaps.templateLayoutFactory.createClass("<div class='map__zoom-block u-jc-sbu-fd-col'><div id='zoom-in' class='map__zoom u-jc-ce u-ai-ce'><svg class='svg' width='12px' height='12px' viewBox='0 0 12 12' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'><g id='Group' ><rect id='Rectangle-3' x='0' y='5' width='12' height='2'></rect><rect id='Rectangle-3' transform='translate(6.000000, 6.000000) rotate(90.000000) translate(-6.000000, -6.000000) ' x='0' y='5' width='12' height='2'></rect></g></svg></div><br><div id='zoom-out' class='map__zoom map__zoom--minus u-jc-ce u-ai-ce'><svg class='svg' width='8px' height='2px' viewBox='0 0 8 2' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'><rect id='map__minus' width='8' height='2'></rect></svg></div>",{build:function(){s.superclass.build.call(this),this.zoomInCallback=ymaps.util.bind(this.zoomIn,this),this.zoomOutCallback=ymaps.util.bind(this.zoomOut,this),$("#zoom-in").bind("click",this.zoomInCallback),$("#zoom-out").bind("click",this.zoomOutCallback)},clear:function(){$("#zoom-in").unbind("click",this.zoomInCallback),$("#zoom-out").unbind("click",this.zoomOutCallback),s.superclass.clear.call(this)},zoomIn:function(){var e=this.getData().control.getMap();e.setZoom(e.getZoom()+1,{checkZoomRange:!0})},zoomOut:function(){var e=this.getData().control.getMap();e.setZoom(e.getZoom()-1,{checkZoomRange:!0})}});$(window).on("resize",function(){var e=document.getElementById("item-map").offsetHeight/2-50;t.controls.remove("zoomControl"),t.controls.add("zoomControl",{layout:s,position:{left:"30px",top:e}})}).resize(),t.geoObjects.add(e)});n=$("#item-map").attr("data-lng"),l=$("#item-map").attr("data-lat")}$(".js-modal-close-btn").on("click",function(){$(this).closest(".js-modal").removeClass("isOpened")}),$(".js-modal__btn").on("click",function(e){var t=$(this).attr("data-modal");$("#"+t).addClass("isOpened")}),$(window).on("resize",function(){if(null!==$(".scrollable-inner"))for(var e=0;e<$(".scrollable-inner").length;e++){var t=$(".scrollable-inner")[e],s=$(t).attr("data-iscroll"),a=$('.scrollable-parent[data-pscroll="'+s+'"]'),i=t.clientHeight;a.height(i)}}).resize(),$(window).on("scroll load",function(){var e=$(".js-header");60<=$(window).scrollTop()?e.addClass("sticked"):e.removeClass("sticked")}),$(".js-tab__item").on("click",function(e){var t=$(this);t.closest(".tab").find(".js-tab__item").removeClass("js-active"),t.addClass("js-active");var s=t.attr("data-tab");t.closest(".tab").find(".tab__block").removeClass("js-active"),$('[data-content="'+s+'"]').addClass("js-active")}),$('.js-modal__btn[data-modal="help"]').on("click",function(){$.ajax({url:config.themesList,dataType:"json",success:function(e){$(".side-modal__content").empty(),$(".side-modal__content").append('<ul class="side-modal__list side-modal__list--help"></ul>'),$.each(e,function(e,t){$(".side-modal__list--help").append('<li class="side-modal__theme js-open-subtheme" data-attr="'+config.themeLink+t.id+'"><a href="javascript:;" class="side-modal__theme-link">'+t.theme+"</a></li>")})}})}),$(".js-toggle-item").click(function(){$(this).toggleClass("isActive")})}),$(document).ajaxComplete(function(){$(".js-select-btn").off("click").on("click",function(){var e=$(this),t=e.closest(".filter__input-block").find(".js-select-block");t.hasClass("isOpen")?(e.addClass("isClosed"),e.removeClass("isOpen"),t.removeClass("isOpen")):($(".js-select-block").removeClass("isOpen"),$(".js-select-btn").removeClass("isOpen"),e.addClass("isOpen"),t.addClass("isOpen"));var s=e.closest(".filter__input-block");s.find(".filter__empty").length||s.find(".js-filter-hidden").prop("required")&&(s.find(".js-filter-hidden").val()?(s.find(".filter__empty").remove(),e.removeClass("filter__danger")):(s.find(".filter__input-wrap").append("<span class='filter__empty'>Поле обязательно для заполнения</span>"),e.addClass("filter__danger")))}),$(".js-select-item").off("click").on("click",function(){var e=$(this);e.addClass("js-selected");var t=e.text(),s=e.data("value"),a=e.attr("data-group");$('.js-select-btn[data-group="'+a+'"]').text(t),e.closest(".filter__input-block").find(".js-select-label").addClass("floated"),$(".js-select-btn.isOpen").addClass("isClosed"),$(".js-select-block.isOpen").removeClass("isOpen"),$(".js-select-btn.isOpen").removeClass("isOpen"),$('.js-filter-hidden[data-group="'+a+'"]').val(s);var i=e.closest(".filter__input-block");if(i.find(".js-filter-hidden").prop("required")){i.find(".js-filter-hidden").val()?(i.find(".filter__empty").remove(),$('.js-select-btn[data-group="'+a+'"]').removeClass("filter__danger")):(i.find(".filter__input-wrap").append("<span class='filter__empty'>Поле обязательно для заполнения</span>"),$('.js-select-btn[data-group="'+a+'"]').addClass("filter__danger"))}}),0<$(".js-select-btn.isOpen").length&&$(document).on("click",function(e){if(!$(e.target).closest(".js-select-block.isOpen").length&&!$(e.target).closest(".js-select-btn.isOpen").length){$(".js-select-btn.isOpen").addClass("isClosed"),$(".js-select-block.isOpen").removeClass("isOpen"),$(".js-select-btn.isOpen").removeClass("isOpen");var t=$(".js-select-btn.isClosed").closest(".filter__input-block");t.find(".filter__empty").length||t.find(".js-filter-hidden").prop("required")&&(t.find(".js-filter-hidden").val()?(t.find(".filter__empty").remove(),$(".js-select-btn.isClosed").removeClass("filter__danger")):(t.find(".filter__input-wrap").append("<span class='filter__empty'>Поле обязательно для заполнения</span>"),$(".js-select-btn.isClosed").addClass("filter__danger")))}}),$(".filter__input").on("focus",function(){$(this).closest(".filter__input-wrap").find(".filter__floating-label").addClass("floated")}),$(".filter__input").on("blur",function(){var e,t,s=$(this),a=s.closest(".filter__input-wrap"),i=a.find(".filter__input");if(s.val()){var n=i.attr("name");if("name"===n||"name_buy"===n)if(-1<i.val().indexOf(" "))a.addClass("validated"),i.hasClass("filter__danger")&&(i.removeClass("filter__danger"),a.find(".filter__empty").remove());else{a.removeClass("validated"),a.find(".filter__empty").remove();l="<span class='filter__empty'>Поле должно содержать Имя и Фамилию через пробел</span>";i.addClass("filter__danger"),a.append(l)}else if("email"===n||"email_buy"===n)if(t=i.val(),/^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/.test(t))a.addClass("validated"),i.hasClass("filter__danger")&&(i.removeClass("filter__danger"),a.find(".filter__empty").remove());else{a.removeClass("validated"),a.find(".filter__empty").remove();l="<span class='filter__empty'>Email должен содержать латинские буквы, символы @ и .</span>";i.addClass("filter__danger"),a.append(l)}else if("tel"===n||"tel_buy"===n)if(e=i.val(),/^((8|\+7)[\- ]?)?(\(?\d{3}\)?[\- ]?)?[\d\- ]{10,14}$/.test(e))a.addClass("validated"),i.hasClass("filter__danger")&&(i.removeClass("filter__danger"),a.find(".filter__empty").remove());else{a.removeClass("validated"),a.find(".filter__empty").remove();l="<span class='filter__empty'>Номер телефона должен содержать от 10 до 14 цифр</span>";i.addClass("filter__danger"),a.append(l)}else i.removeClass("filter__danger"),a.find(".filter__empty").remove()}else{var l="<span class='filter__empty'>Поле обязательно для заполнения</span>";a.removeClass("validated"),a.find(".filter__floating-label").removeClass("floated"),s.prop("required")&&(i.hasClass("filter__danger")||(i.addClass("filter__danger"),a.append(l)))}}),$(".js-open-subtheme-content").on("click",function(){var e=$(this),t=e.attr("data-attr"),s=e.text();$(".side-modal__breadcrumbs").append('<li class="breadcrumbs__item"><a href="#" class="breadcrumbs__link breadcrumbs__link--modal">'+s+"</a></li>"),$.ajax({url:config.subthemeContent+t,dataType:"html",success:function(e){$(".side-modal__content").html(e)}})}),$(".js-open-subtheme").on("click",function(){var e=$(this),t=e.attr("data-attr"),s=e.text();$(".side-modal__header-wrapper").html('<ul class="breadcrumbs__list side-modal__breadcrumbs u-jc-fs"><li class="breadcrumbs__item"><a href="javascript:;" class="breadcrumbs__link js-breadcrumbs__link-main breadcrumbs__link--modal">Юридическая помощь</a></li></ul>'),$(".side-modal__breadcrumbs").append('<li class="breadcrumbs__item"><a href="#" class="breadcrumbs__link breadcrumbs__link--modal js-breadcrumbs__link-topic" data-prev="'+t+'">'+s+"</a></li>"),$.ajax({url:config.subthemeList+t,dataType:"json",success:function(e){$(".side-modal__content").html('<ul class="side-modal__list side-modal__list--help"></ul>'),$.each(e,function(e,t){$(".side-modal__list--help").append('<li class="side-modal__theme js-open-subtheme-content" data-attr="'+config.subthemeLink+t.id+'"><a href="javascript:;" class="side-modal__theme-link ">'+t.theme+"</a></li>")})}})}),$(".js-breadcrumbs__link-main").on("click",function(){$.ajax({url:config.themesList,dataType:"json",success:function(e){$(".side-modal__content").empty(),$(".side-modal__content").append('<ul class="side-modal__list side-modal__list--help"></ul>'),$.each(e,function(e,t){$(".side-modal__list--help").append('<li class="side-modal__theme js-open-subtheme" data-attr="'+config.themeLink+t.id+'"><a href="javascript:;" class="side-modal__theme-link">'+t.theme+"</a></li>")}),$(".side-modal__breadcrumbs").html('<li class="breadcrumbs__item"><span class="breadcrumbs__link js-breadcrumbs__link-main breadcrumbs__link--modal">Юридическая помощь</span></li>')}})}),$(".js-btn-yes").on("click",function(){$.ajax({url:config.formHelpYes,dataType:"html",success:function(e){$(".subtheme__block").html(e)}})}),$(".js-btn-no").on("click",function(){$.ajax({url:config.formHelpForm,dataType:"html",success:function(e){$(".subtheme__block").html(e)}})}),$(".js-breadcrumbs__link-topic").on("click",function(){var e=$(this),t=e.text(),s=e.attr("data-prev");$.ajax({url:config.subthemeList+s+".json",dataType:"json",success:function(e){$(".side-modal__content").html('<ul class="side-modal__list side-modal__list--help"></ul>'),$.each(e,function(e,t){$(".side-modal__list--help").append('<li class="side-modal__theme js-open-subtheme-content" data-attr="'+config.subthemeLink+t.id+'"><a href="javascript:;" class="side-modal__theme-link ">'+t.theme+"</a></li>")});$(".side-modal__header-wrapper").html('<ul class="breadcrumbs__list side-modal__breadcrumbs u-jc-fs"><li class="breadcrumbs__item"><a href="javascript:;" class="breadcrumbs__link js-breadcrumbs__link-main breadcrumbs__link--modal">Юридическая помощь</a></li></ul>'),$(".side-modal__breadcrumbs").append('<li class="breadcrumbs__item"><a href="#" class="breadcrumbs__link breadcrumbs__link--modal js-breadcrumbs__link-topic" data-prev="'+s+'">'+t+"</a></li>")}})}),$(".js-tab__item").on("click",function(e){var t=$(this);t.closest(".tab").find(".js-tab__item").removeClass("js-active"),t.addClass("js-active");var s=t.attr("data-tab");t.closest(".tab").find(".tab__block").removeClass("js-active"),$('[data-content="'+s+'"]').addClass("js-active")}),$("#contacts").off("submit").on("submit",function(e){$("#contacts-modal").addClass("isOpened"),e.preventDefault();var t=this;$.ajax({data:$(t).serialize(),method:t.method,url:t.action,dataType:"html",success:function(e){$(".modal__content").html(e),t.reset()}})}),$("#help_sidebar_form").off("submit").on("submit",function(e){$("#help-modal").addClass("isOpened"),e.preventDefault();var t=this;$.ajax({data:$(t).serialize(),method:t.method,url:t.action,dataType:"html",success:function(e){$(".modal__content").html(e),t.reset()}})})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
