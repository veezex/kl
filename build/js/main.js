$(document).ready(function(){if(function(i){"use strict";i.fn.emulateTransitionEnd=function(t){var e=!1,s=this;i(this).one("bsTransitionEnd",function(){e=!0});return setTimeout(function(){e||i(s).trigger(i.support.transition.end)},t),this},i(function(){i.support.transition=function(){var t=document.createElement("bootstrap"),e={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"};for(var s in e)if(void 0!==t.style[s])return{end:e[s]};return!1}(),i.support.transition&&(i.event.special.bsTransitionEnd={bindType:i.support.transition.end,delegateType:i.support.transition.end,handle:function(t){if(i(t.target).is(this))return t.handleObj.handler.apply(this,arguments)}})})}(jQuery),function(p){"use strict";var u=function(t,e){this.$element=p(t),this.$indicators=this.$element.find(".carousel-indicators"),this.options=e,this.paused=null,this.sliding=null,this.interval=null,this.$active=null,this.$items=null,this.options.keyboard&&this.$element.on("keydown.bs.carousel",p.proxy(this.keydown,this)),"hover"==this.options.pause&&!("ontouchstart"in document.documentElement)&&this.$element.on("mouseenter.bs.carousel",p.proxy(this.pause,this)).on("mouseleave.bs.carousel",p.proxy(this.cycle,this))};function o(a){return this.each(function(){var t=p(this),e=t.data("bs.carousel"),s=p.extend({},u.DEFAULTS,t.data(),"object"==typeof a&&a),i="string"==typeof a?a:s.slide;e||t.data("bs.carousel",e=new u(this,s)),"number"==typeof a?e.to(a):i?e[i]():s.interval&&e.pause().cycle()})}u.VERSION="3.3.5",u.TRANSITION_DURATION=600,u.DEFAULTS={interval:5e3,pause:"hover",wrap:!0,keyboard:!0},u.prototype.keydown=function(t){if(!/input|textarea/i.test(t.target.tagName)){switch(t.which){case 37:this.prev();break;case 39:this.next();break;default:return}t.preventDefault()}},u.prototype.cycle=function(t){return t||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(p.proxy(this.next,this),this.options.interval)),this},u.prototype.getItemIndex=function(t){return this.$items=t.parent().children(".item"),this.$items.index(t||this.$active)},u.prototype.getItemForDirection=function(t,e){var s=this.getItemIndex(e);if(("prev"==t&&0===s||"next"==t&&s==this.$items.length-1)&&!this.options.wrap)return e;var i=(s+("prev"==t?-1:1))%this.$items.length;return this.$items.eq(i)},u.prototype.to=function(t){var e=this,s=this.getItemIndex(this.$active=this.$element.find(".item.active"));if(!(t>this.$items.length-1||t<0))return this.sliding?this.$element.one("slid.bs.carousel",function(){e.to(t)}):s==t?this.pause().cycle():this.slide(s<t?"next":"prev",this.$items.eq(t))},u.prototype.pause=function(t){return t||(this.paused=!0),this.$element.find(".next, .prev").length&&p.support.transition&&(this.$element.trigger(p.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},u.prototype.next=function(){if(!this.sliding)return this.slide("next")},u.prototype.prev=function(){if(!this.sliding)return this.slide("prev")},u.prototype.slide=function(t,e){var s=this.$element.find(".item.active"),i=e||this.getItemForDirection(t,s),a=this.interval,n="next"==t?"left":"right",o=this;if(i.hasClass("active"))return this.sliding=!1;var l=i[0],r=p.Event("slide.bs.carousel",{relatedTarget:l,direction:n});if(this.$element.trigger(r),!r.isDefaultPrevented()){if(this.sliding=!0,a&&this.pause(),this.$indicators.length){this.$indicators.find(".active").removeClass("active");var c=p(this.$indicators.children()[this.getItemIndex(i)]);c&&c.addClass("active")}var d=p.Event("slid.bs.carousel",{relatedTarget:l,direction:n});return p.support.transition&&this.$element.hasClass("slide")?(i.addClass(t),i[0].offsetWidth,s.addClass(n),i.addClass(n),s.one("bsTransitionEnd",function(){i.removeClass([t,n].join(" ")).addClass("active"),s.removeClass(["active",n].join(" ")),o.sliding=!1,setTimeout(function(){o.$element.trigger(d)},0)}).emulateTransitionEnd(u.TRANSITION_DURATION)):(s.removeClass("active"),i.addClass("active"),this.sliding=!1,this.$element.trigger(d)),a&&this.cycle(),this}};var t=p.fn.carousel;p.fn.carousel=o,p.fn.carousel.Constructor=u,p.fn.carousel.noConflict=function(){return p.fn.carousel=t,this};var e=function(t){var e,s=p(this),i=p(s.attr("data-target")||(e=s.attr("href"))&&e.replace(/.*(?=#[^\s]+$)/,""));if(i.hasClass("carousel")){var a=p.extend({},i.data(),s.data()),n=s.attr("data-slide-to");n&&(a.interval=!1),o.call(i,a),n&&i.data("bs.carousel").to(n),t.preventDefault()}};p(document).on("click.bs.carousel.data-api","[data-slide]",e).on("click.bs.carousel.data-api","[data-slide-to]",e),p(window).on("load",function(){p('[data-ride="carousel"]').each(function(){var t=p(this);o.call(t,t.data())})})}(jQuery),$(".carousel-item-image .item").each(function(){for(var t=$(this),e=1;e<5;e++)(t=t.next()).length||(t=$(this).siblings(":first")),t.children(":first-child").clone().addClass("cloneditem-"+e).appendTo($(this))}),$(".carousel").carousel({interval:0}),$("#carousel-item-image").carousel({interval:0}),$(".benefits__item").on("click",function(){var t=$(this),e=t.attr("data-name");t.hasClass("isActive")?t.closest(".filter__checkbox-wrap").find("#"+e).prop("checked",!1):t.closest(".filter__checkbox-wrap").find("#"+e).prop("checked",!0)}),"undefined"==typeof jQuery)throw new Error("Bootstrap's JavaScript requires jQuery");if(function(t){"use strict";var e=jQuery.fn.jquery.split(" ")[0].split(".");if(e[0]<2&&e[1]<9||1==e[0]&&9==e[1]&&e[2]<1||3<e[0])throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 4")}(),function(o){"use strict";var l=function(t,e){this.$element=o(t),this.options=o.extend({},l.DEFAULTS,e),this.$trigger=o('[data-toggle="collapse"][href="#'+t.id+'"],[data-toggle="collapse"][data-target="#'+t.id+'"]'),this.transitioning=null,this.options.parent?this.$parent=this.getParent():this.addAriaAndCollapsedClass(this.$element,this.$trigger),this.options.toggle&&this.toggle()};function a(t){var e,s=t.attr("data-target")||(e=t.attr("href"))&&e.replace(/.*(?=#[^\s]+$)/,"");return o(s)}function r(i){return this.each(function(){var t=o(this),e=t.data("bs.collapse"),s=o.extend({},l.DEFAULTS,t.data(),"object"==typeof i&&i);!e&&s.toggle&&/show|hide/.test(i)&&(s.toggle=!1),e||t.data("bs.collapse",e=new l(this,s)),"string"==typeof i&&e[i]()})}l.VERSION="3.3.7",l.TRANSITION_DURATION=350,l.DEFAULTS={toggle:!0},l.prototype.dimension=function(){return this.$element.hasClass("width")?"width":"height"},l.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass("in")){var t,e=this.$parent&&this.$parent.children(".collapse__tab").children(".in, .collapsing");if(!(e&&e.length&&(t=e.data("bs.collapse"))&&t.transitioning)){var s=o.Event("show.bs.collapse");if(this.$element.trigger(s),!s.isDefaultPrevented()){e&&e.length&&(r.call(e,"hide"),t||e.data("bs.collapse",null));var i=this.dimension();this.$element.removeClass("collapse").addClass("collapsing")[i](0).attr("aria-expanded",!0),this.$trigger.removeClass("collapsed").attr("aria-expanded",!0),this.transitioning=1;var a=function(){this.$element.removeClass("collapsing").addClass("collapse in")[i](""),this.transitioning=0,this.$element.trigger("shown.bs.collapse")};if(!o.support.transition)return a.call(this);var n=o.camelCase(["scroll",i].join("-"));this.$element.one("bsTransitionEnd",o.proxy(a,this)).emulateTransitionEnd(l.TRANSITION_DURATION)[i](this.$element[0][n])}}}},l.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass("in")){var t=o.Event("hide.bs.collapse");if(this.$element.trigger(t),!t.isDefaultPrevented()){var e=this.dimension();this.$element[e](this.$element[e]())[0].offsetHeight,this.$element.addClass("collapsing").removeClass("collapse in").attr("aria-expanded",!1),this.$trigger.addClass("collapsed").attr("aria-expanded",!1),this.transitioning=1;var s=function(){this.transitioning=0,this.$element.removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse")};if(!o.support.transition)return s.call(this);this.$element[e](0).one("bsTransitionEnd",o.proxy(s,this)).emulateTransitionEnd(l.TRANSITION_DURATION)}}},l.prototype.toggle=function(){this[this.$element.hasClass("in")?"hide":"show"]()},l.prototype.getParent=function(){return o(this.options.parent).find('[data-toggle="collapse"][data-parent="'+this.options.parent+'"]').each(o.proxy(function(t,e){var s=o(e);this.addAriaAndCollapsedClass(a(s),s)},this)).end()},l.prototype.addAriaAndCollapsedClass=function(t,e){var s=t.hasClass("in");t.attr("aria-expanded",s),e.toggleClass("collapsed",!s).attr("aria-expanded",s)};var t=o.fn.collapse;o.fn.collapse=r,o.fn.collapse.Constructor=l,o.fn.collapse.noConflict=function(){return o.fn.collapse=t,this},o(document).on("click.bs.collapse.data-api",'[data-toggle="collapse"]',function(t){var e=o(this);e.attr("data-target")||t.preventDefault();var s=a(e),i=s.data("bs.collapse")?"toggle":e.data();r.call(s,i)})}(jQuery),$(".js-hide-filter").on("click",function(t){t.preventDefault();var e=$(this);$(".filter__input-group--add").hasClass("js-isVisible")?($(".filter__input-group--add").removeClass("js-isVisible"),e.removeClass("iSopened")):($(".filter__input-group--add").addClass("js-isVisible"),e.addClass("iSopened"))}),$("#counter").length){var e=0;$(window).scroll(function(){var t=$("#counter").offset().top-window.innerHeight;0==e&&$(window).scrollTop()>t&&($(".counter-value").each(function(){var t=$(this),e=t.attr("data-count");$({countNum:t.text()}).animate({countNum:e},{duration:2e3,easing:"swing",step:function(){t.text(Math.floor(this.countNum))},complete:function(){t.text(this.countNum),$(".statistics__card-text").addClass("isAnimated"),$(".history__card-text").addClass("isAnimated")}})}),e=1)})}if($(".js-header-menu").on("click",function(){$(".header__side").addClass("isOpened")}),$(".side-modal").on("click",function(t){$(t.target).closest(".side-modal__wrapper").length&&!$(t.target).closest("#modal-close")||$(".side-modal").removeClass("isOpened")}),$(".js-select-btn").on("click",function(){var t=$(this),e=t.closest(".filter__input-block").find(".js-select-block");e.hasClass("isOpen")?(t.addClass("isClosed"),t.removeClass("isOpen"),e.removeClass("isOpen")):($(".js-select-block").removeClass("isOpen"),$(".js-select-btn").removeClass("isOpen"),t.addClass("isOpen"),e.addClass("isOpen"));var s=t.closest(".filter__input-block");s.find(".filter__empty").length||s.find(".js-filter-hidden").prop("required")&&(s.find(".js-filter-hidden").val()?(s.find(".filter__empty").remove(),t.removeClass("filter__danger")):(s.find(".filter__input-wrap").append("<span class='filter__empty'>Поле обязательно для заполнения</span>"),t.addClass("filter__danger")))}),$(".js-select-item").on("click",function(){var t=$(this);t.addClass("js-selected");var e=t.text(),s=t.attr("data-group");$('.js-select-btn[data-group="'+s+'"]').text(e),t.closest(".filter__input-block").find(".js-select-label").addClass("floated"),$(".js-select-btn.isOpen").addClass("isClosed"),$(".js-select-block.isOpen").removeClass("isOpen"),$(".js-select-btn.isOpen").removeClass("isOpen"),$('.js-filter-hidden[data-group="'+s+'"]').val(e);var i=t.closest(".filter__input-block");if(i.find(".js-filter-hidden").prop("required")){i.find(".js-filter-hidden").val()?(i.find(".filter__empty").remove(),$('.js-select-btn[data-group="'+s+'"]').removeClass("filter__danger")):(i.find(".filter__input-wrap").append("<span class='filter__empty'>Поле обязательно для заполнения</span>"),$('.js-select-btn[data-group="'+s+'"]').addClass("filter__danger"))}}),$(".js-select-btn.isOpen")&&$(document).on("click",function(t){if(!$(t.target).closest(".js-select-block.isOpen").length&&!$(t.target).closest(".js-select-btn.isOpen").length){$(".js-select-btn.isOpen").addClass("isClosed"),$(".js-select-block.isOpen").removeClass("isOpen"),$(".js-select-btn.isOpen").removeClass("isOpen");var e=$(".js-select-btn.isClosed").closest(".filter__input-block");e.find(".filter__empty").length||e.find(".js-filter-hidden").prop("required")&&(e.find(".js-filter-hidden").val()?(e.find(".filter__empty").remove(),$(".js-select-btn.isClosed").removeClass("filter__danger")):(e.find(".filter__input-wrap").append("<span class='filter__empty'>Поле обязательно для заполнения</span>"),$(".js-select-btn.isClosed").addClass("filter__danger")))}}),$(".filter__input").on("focus",function(){$(this).closest(".filter__input-wrap").find(".filter__floating-label").addClass("floated")}),$(".filter__input").on("blur",function(){var t,e,s=$(this),i=s.closest(".filter__input-wrap"),a=i.find(".filter__input");if(s.val()){var n=a.attr("name");if("name"===n)if(-1<a.val().indexOf(" "))i.addClass("validated"),a.hasClass("filter__danger")&&(a.removeClass("filter__danger"),i.find(".filter__empty").remove());else{i.removeClass("validated"),i.find(".filter__empty").remove();o="<span class='filter__empty'>Поле должно содержать Имя и Фамилию через пробел</span>";a.addClass("filter__danger"),i.append(o)}else if("email"===n)if(e=a.val(),/^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/.test(e))i.addClass("validated"),a.hasClass("filter__danger")&&(a.removeClass("filter__danger"),i.find(".filter__empty").remove());else{i.removeClass("validated"),i.find(".filter__empty").remove();o="<span class='filter__empty'>Email должен содержать латинские буквы, символы @ и .</span>";a.addClass("filter__danger"),i.append(o)}else if("tel"===n)if(t=a.val(),/^((8|\+7)[\- ]?)?(\(?\d{3}\)?[\- ]?)?[\d\- ]{10,14}$/.test(t))i.addClass("validated"),a.hasClass("filter__danger")&&(a.removeClass("filter__danger"),i.find(".filter__empty").remove());else{i.removeClass("validated"),i.find(".filter__empty").remove();o="<span class='filter__empty'>Номер телефона должен содержать от 10 до 14 цифр</span>";a.addClass("filter__danger"),i.append(o)}else a.removeClass("filter__danger"),i.find(".filter__empty").remove()}else{var o="<span class='filter__empty'>Поле обязательно для заполнения</span>";i.removeClass("validated"),i.find(".filter__floating-label").removeClass("floated"),s.prop("required")&&(a.hasClass("filter__danger")||(a.addClass("filter__danger"),i.append(o)))}}),$(".item__img").click(function(){var t=$(this).attr("src");console.log(t),$(".image__container").css("background-image","url("+t+")")}),null!==document.getElementById("map")){function t(){var e=new ymaps.Map("map",{center:[55.76,37.64],zoom:10,controls:[]}),s=ymaps.templateLayoutFactory.createClass("<div class='map__zoom-block u-jc-sbu-fd-col'><div id='zoom-in' class='map__zoom u-jc-ce u-ai-ce'><svg class='svg' width='12px' height='12px' viewBox='0 0 12 12' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'><g id='Group' ><rect id='Rectangle-3' x='0' y='5' width='12' height='2'></rect><rect id='Rectangle-3' transform='translate(6.000000, 6.000000) rotate(90.000000) translate(-6.000000, -6.000000) ' x='0' y='5' width='12' height='2'></rect></g></svg></div><br><div id='zoom-out' class='map__zoom map__zoom--minus u-jc-ce u-ai-ce'><svg class='svg' width='8px' height='2px' viewBox='0 0 8 2' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'><rect id='map__minus' width='8' height='2'></rect></svg></div>",{build:function(){s.superclass.build.call(this),this.zoomInCallback=ymaps.util.bind(this.zoomIn,this),this.zoomOutCallback=ymaps.util.bind(this.zoomOut,this),$("#zoom-in").bind("click",this.zoomInCallback),$("#zoom-out").bind("click",this.zoomOutCallback)},clear:function(){$("#zoom-in").unbind("click",this.zoomInCallback),$("#zoom-out").unbind("click",this.zoomOutCallback),s.superclass.clear.call(this)},zoomIn:function(){var t=this.getData().control.getMap();t.setZoom(t.getZoom()+1,{checkZoomRange:!0})},zoomOut:function(){var t=this.getData().control.getMap();t.setZoom(t.getZoom()-1,{checkZoomRange:!0})}});function i(t){return{type:"FeatureCollection",features:t.map(function(t,e){return{id:e,type:"Feature",geometry:{type:"Point",coordinates:[t.lat,t.long]},properties:{iconCaption:t.serialNumber}}})}}function t(){return fetch("../js/test.json").then(function(t){return t.json()}).then(function(t){return i(t)})}$(window).on("resize",function(){var t=document.getElementById("map").offsetHeight/2-50;e.controls.remove("zoomControl"),e.controls.add("zoomControl",{layout:s,position:{left:"30px",top:t}})}).resize();var a=new ymaps.ObjectManager({clusterize:!0,gridSize:64,clusterIconLayout:"default#pieChart",clusterDisableClickZoom:!1});t().then(function(t){a.add(t)}),a.objects.options.set({iconLayout:"default#image",iconImageHref:"images/map__baloon.png",iconImageSize:[57,51],iconImageOffset:[-37,-50]}),e.geoObjects.add(a)}ymaps.ready(t)}else if(null!==document.getElementById("item-map")){ymaps.ready(t);var i=$("#item-map").attr("data-lng"),a=$("#item-map").attr("data-lat");function t(){var e=new ymaps.Map("item-map",{center:[i,a],zoom:13,controls:[]}),t=new ymaps.Placemark([i,a],{},{iconLayout:"default#image",iconImageHref:"images/map__baloon.png",iconImageSize:[57,51],iconImageOffset:[-37,-50]}),s=ymaps.templateLayoutFactory.createClass("<div class='map__zoom-block u-jc-sbu-fd-col'><div id='zoom-in' class='map__zoom u-jc-ce u-ai-ce'><svg class='svg' width='12px' height='12px' viewBox='0 0 12 12' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'><g id='Group' ><rect id='Rectangle-3' x='0' y='5' width='12' height='2'></rect><rect id='Rectangle-3' transform='translate(6.000000, 6.000000) rotate(90.000000) translate(-6.000000, -6.000000) ' x='0' y='5' width='12' height='2'></rect></g></svg></div><br><div id='zoom-out' class='map__zoom map__zoom--minus u-jc-ce u-ai-ce'><svg class='svg' width='8px' height='2px' viewBox='0 0 8 2' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'><rect id='map__minus' width='8' height='2'></rect></svg></div>",{build:function(){s.superclass.build.call(this),this.zoomInCallback=ymaps.util.bind(this.zoomIn,this),this.zoomOutCallback=ymaps.util.bind(this.zoomOut,this),$("#zoom-in").bind("click",this.zoomInCallback),$("#zoom-out").bind("click",this.zoomOutCallback)},clear:function(){$("#zoom-in").unbind("click",this.zoomInCallback),$("#zoom-out").unbind("click",this.zoomOutCallback),s.superclass.clear.call(this)},zoomIn:function(){var t=this.getData().control.getMap();t.setZoom(t.getZoom()+1,{checkZoomRange:!0})},zoomOut:function(){var t=this.getData().control.getMap();t.setZoom(t.getZoom()-1,{checkZoomRange:!0})}});$(window).on("resize",function(){var t=document.getElementById("item-map").offsetHeight/2-50;e.controls.remove("zoomControl"),e.controls.add("zoomControl",{layout:s,position:{left:"30px",top:t}})}).resize(),e.geoObjects.add(t)}}$("#modal-close-btn").on("click",function(){$(this).closest(".js-modal").removeClass("isOpened")}),$(".js-modal__btn").on("click",function(t){var e=$(this).attr("data-modal");$("#"+e).addClass("isOpened")}),$(window).on("resize",function(){if(null!==$(".scrollable-inner"))for(var t=0;t<$(".scrollable-inner").length;t++){var e=$(".scrollable-inner")[t],s=$(e).attr("data-iscroll"),i=$('.scrollable-parent[data-pscroll="'+s+'"]'),a=e.clientHeight;i.height(a)}}).resize(),$(window).on("scroll load",function(){var t=$(".js-header");60<=$(window).scrollTop()?t.addClass("sticked"):t.removeClass("sticked")}),$(".js-tab__item").on("click",function(t){var e=$(this);e.closest(".tab").find(".js-tab__item").removeClass("js-active"),e.addClass("js-active");var s=e.attr("data-tab");e.closest(".tab").find(".tab__block").removeClass("js-active"),$('[data-content="'+s+'"]').addClass("js-active")}),$.ajax({url:"./js/theme.json",dataType:"json",success:function(t){$(".side-modal__content").append('<ul class="side-modal__list"></ul>'),$.each(t,function(t,e){$(".side-modal__list").append('<li class="side-modal__theme"><a href="javascript:;" data-link="subtheme'+e.id+'" class="side-modal__theme-link js-open-subtheme">'+e.theme+"</a></li>")})}}),$(".js-toggle-item").click(function(){$(this).toggleClass("isActive")})}),$(document).ajaxComplete(function(){$(".js-open-subtheme-content").on("click",function(){var t=$(this),e=t.attr("data-link"),s=t.text();$(".side-modal__breadcrumbs").append('<li class="breadcrumbs__item"><a href="#" class="breadcrumbs__link">'+s+"</a></li>"),$.ajax({url:"./"+e+".html",dataType:"html",success:function(t){$(".side-modal__content").html(t)}})}),$(".js-open-subtheme").on("click",function(){var t=$(this),e=t.attr("data-link"),s=t.text();$(".side-modal__header-wrapper").html('<ul class="breadcrumbs__list side-modal__breadcrumbs u-jc-fs"><li class="breadcrumbs__item"><a href="#" class="breadcrumbs__link">Юридическая помощь</a></li></ul>'),$(".side-modal__breadcrumbs").append('<li class="breadcrumbs__item"><a href="#" class="breadcrumbs__link">'+s+"</a></li>"),$.ajax({url:"./js/"+e+".json",dataType:"json",success:function(t){$(".side-modal__content").html('<ul class="side-modal__list"></ul>'),$.each(t,function(t,e){$(".side-modal__list").append('<li class="side-modal__theme"><a href="javascript:;" data-link="subtheme'+e.id+'" class="side-modal__theme-link js-open-subtheme-content">'+e.theme+"</a></li>")})}})}),$(".js-btn-yes").on("click",function(){$.ajax({url:"./subtheme_yes.html",dataType:"html",success:function(t){$(".subtheme__block").html(t)}})}),$(".js-btn-no").on("click",function(){$.ajax({url:"./subtheme_form.html",dataType:"html",success:function(t){$(".subtheme__block").html(t)}})})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiJCIsImRvY3VtZW50IiwicmVhZHkiLCJmbiIsImVtdWxhdGVUcmFuc2l0aW9uRW5kIiwiZHVyYXRpb24iLCJjYWxsZWQiLCIkZWwiLCJ0aGlzIiwib25lIiwic2V0VGltZW91dCIsInRyaWdnZXIiLCJzdXBwb3J0IiwidHJhbnNpdGlvbiIsImVuZCIsImVsIiwiY3JlYXRlRWxlbWVudCIsInRyYW5zRW5kRXZlbnROYW1lcyIsIldlYmtpdFRyYW5zaXRpb24iLCJNb3pUcmFuc2l0aW9uIiwiT1RyYW5zaXRpb24iLCJuYW1lIiwidW5kZWZpbmVkIiwic3R5bGUiLCJ0cmFuc2l0aW9uRW5kIiwiZXZlbnQiLCJzcGVjaWFsIiwiYnNUcmFuc2l0aW9uRW5kIiwiYmluZFR5cGUiLCJkZWxlZ2F0ZVR5cGUiLCJoYW5kbGUiLCJlIiwidGFyZ2V0IiwiaXMiLCJoYW5kbGVPYmoiLCJoYW5kbGVyIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJqUXVlcnkiLCJDYXJvdXNlbCIsImVsZW1lbnQiLCJvcHRpb25zIiwiJGVsZW1lbnQiLCIkaW5kaWNhdG9ycyIsImZpbmQiLCJwYXVzZWQiLCJzbGlkaW5nIiwiaW50ZXJ2YWwiLCIkYWN0aXZlIiwiJGl0ZW1zIiwia2V5Ym9hcmQiLCJvbiIsInByb3h5Iiwia2V5ZG93biIsInBhdXNlIiwiZG9jdW1lbnRFbGVtZW50IiwiY3ljbGUiLCJQbHVnaW4iLCJvcHRpb24iLCJlYWNoIiwiJHRoaXMiLCJkYXRhIiwiZXh0ZW5kIiwiREVGQVVMVFMiLCJhY3Rpb24iLCJzbGlkZSIsInRvIiwiVkVSU0lPTiIsIlRSQU5TSVRJT05fRFVSQVRJT04iLCJ3cmFwIiwicHJvdG90eXBlIiwidGVzdCIsInRhZ05hbWUiLCJ3aGljaCIsInByZXYiLCJuZXh0IiwicHJldmVudERlZmF1bHQiLCJjbGVhckludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJnZXRJdGVtSW5kZXgiLCJpdGVtIiwicGFyZW50IiwiY2hpbGRyZW4iLCJpbmRleCIsImdldEl0ZW1Gb3JEaXJlY3Rpb24iLCJkaXJlY3Rpb24iLCJhY3RpdmUiLCJhY3RpdmVJbmRleCIsImxlbmd0aCIsIml0ZW1JbmRleCIsImVxIiwicG9zIiwidGhhdCIsInR5cGUiLCIkbmV4dCIsImlzQ3ljbGluZyIsImhhc0NsYXNzIiwicmVsYXRlZFRhcmdldCIsInNsaWRlRXZlbnQiLCJFdmVudCIsImlzRGVmYXVsdFByZXZlbnRlZCIsInJlbW92ZUNsYXNzIiwiJG5leHRJbmRpY2F0b3IiLCJhZGRDbGFzcyIsInNsaWRFdmVudCIsIm9mZnNldFdpZHRoIiwiam9pbiIsIm9sZCIsImNhcm91c2VsIiwiQ29uc3RydWN0b3IiLCJub0NvbmZsaWN0IiwiY2xpY2tIYW5kbGVyIiwiaHJlZiIsIiR0YXJnZXQiLCJhdHRyIiwicmVwbGFjZSIsInNsaWRlSW5kZXgiLCJjYWxsIiwid2luZG93IiwiJGNhcm91c2VsIiwiaXRlbVRvQ2xvbmUiLCJpIiwic2libGluZ3MiLCJjbG9uZSIsImFwcGVuZFRvIiwiY2hlY2tlZCIsImNsb3Nlc3QiLCJwcm9wIiwiRXJyb3IiLCJ2ZXJzaW9uIiwianF1ZXJ5Iiwic3BsaXQiLCJDb2xsYXBzZSIsIiR0cmlnZ2VyIiwiaWQiLCJ0cmFuc2l0aW9uaW5nIiwiJHBhcmVudCIsImdldFBhcmVudCIsImFkZEFyaWFBbmRDb2xsYXBzZWRDbGFzcyIsInRvZ2dsZSIsImdldFRhcmdldEZyb21UcmlnZ2VyIiwiZGltZW5zaW9uIiwic2hvdyIsImFjdGl2ZXNEYXRhIiwiYWN0aXZlcyIsInN0YXJ0RXZlbnQiLCJjb21wbGV0ZSIsInNjcm9sbFNpemUiLCJjYW1lbENhc2UiLCJoaWRlIiwib2Zmc2V0SGVpZ2h0IiwiaXNPcGVuIiwidG9nZ2xlQ2xhc3MiLCJjb2xsYXBzZSIsImEiLCJzY3JvbGwiLCJvVG9wIiwib2Zmc2V0IiwidG9wIiwiaW5uZXJIZWlnaHQiLCJzY3JvbGxUb3AiLCJjb3VudFRvIiwiY291bnROdW0iLCJ0ZXh0IiwiYW5pbWF0ZSIsImVhc2luZyIsInN0ZXAiLCJNYXRoIiwiZmxvb3IiLCJzeWJsaW5nIiwiJGJsb2NrIiwidmFsIiwicmVtb3ZlIiwiYXBwZW5kIiwiZ3JvdXAiLCIkcGhvbmUiLCIkZW1haWwiLCIkaW5wdXQiLCJpbmRleE9mIiwiZW1wdHkiLCJjbGljayIsImltZ1NyYyIsImNvbnNvbGUiLCJsb2ciLCJjc3MiLCJnZXRFbGVtZW50QnlJZCIsImluaXQiLCJteU1hcCIsInltYXBzIiwiTWFwIiwiY2VudGVyIiwiem9vbSIsImNvbnRyb2xzIiwiWm9vbUxheW91dCIsInRlbXBsYXRlTGF5b3V0RmFjdG9yeSIsImNyZWF0ZUNsYXNzIiwiYnVpbGQiLCJzdXBlcmNsYXNzIiwiem9vbUluQ2FsbGJhY2siLCJ1dGlsIiwiYmluZCIsInpvb21JbiIsInpvb21PdXRDYWxsYmFjayIsInpvb21PdXQiLCJjbGVhciIsInVuYmluZCIsIm1hcCIsImdldERhdGEiLCJjb250cm9sIiwiZ2V0TWFwIiwic2V0Wm9vbSIsImdldFpvb20iLCJjaGVja1pvb21SYW5nZSIsIm1hcFNlcnZlckRhdGEiLCJzZXJ2ZXJEYXRhIiwiZmVhdHVyZXMiLCJvYmoiLCJnZW9tZXRyeSIsImNvb3JkaW5hdGVzIiwibGF0IiwibG9uZyIsInByb3BlcnRpZXMiLCJpY29uQ2FwdGlvbiIsInNlcmlhbE51bWJlciIsImxvYWRMaXN0IiwiZmV0Y2giLCJ0aGVuIiwicmVzcG9uc2UiLCJqc29uIiwiY2VudGVyUG9zIiwiYWRkIiwibGF5b3V0IiwicG9zaXRpb24iLCJsZWZ0IiwicmVzaXplIiwib2JqZWN0TWFuYWdlciIsIk9iamVjdE1hbmFnZXIiLCJjbHVzdGVyaXplIiwiZ3JpZFNpemUiLCJjbHVzdGVySWNvbkxheW91dCIsImNsdXN0ZXJEaXNhYmxlQ2xpY2tab29tIiwib2JqZWN0cyIsInNldCIsImljb25MYXlvdXQiLCJpY29uSW1hZ2VIcmVmIiwiaWNvbkltYWdlU2l6ZSIsImljb25JbWFnZU9mZnNldCIsImdlb09iamVjdHMiLCJsbmciLCJwbGFjZW1hcmsiLCJQbGFjZW1hcmsiLCJzY3JJbiIsInNjckVsIiwic2NyUGFyIiwic2NySGVpZ2h0IiwiY2xpZW50SGVpZ2h0IiwiaGVpZ2h0Iiwic3RpY2tibG9jayIsImFqYXgiLCJ1cmwiLCJkYXRhVHlwZSIsInN1Y2Nlc3MiLCJ0aGVtZSIsImFqYXhDb21wbGV0ZSIsImxpbmsiLCJodG1sIl0sIm1hcHBpbmdzIjoiQUFBQUEsRUFBRUMsVUFBVUMsTUFBTSxXQWlXaEIsR0F2VkMsU0FBVUYsR0FDVCxhQXlCQUEsRUFBRUcsR0FBR0MscUJBQXVCLFNBQVVDLEdBQ3BDLElBQUlDLEdBQVMsRUFDVEMsRUFBTUMsS0FDVlIsRUFBRVEsTUFBTUMsSUFBSSxrQkFBbUIsV0FBY0gsR0FBUyxJQUd0RCxPQURBSSxXQURlLFdBQW1CSixHQUFRTixFQUFFTyxHQUFLSSxRQUFRWCxFQUFFWSxRQUFRQyxXQUFXQyxNQUN6RFQsR0FDZEcsTUFHVFIsRUFBRSxXQUNBQSxFQUFFWSxRQUFRQyxXQTlCWixXQUNFLElBQUlFLEVBQUtkLFNBQVNlLGNBQWMsYUFFNUJDLEVBQXFCLENBQ3ZCQyxpQkFBbUIsc0JBQ25CQyxjQUFtQixnQkFDbkJDLFlBQW1CLGdDQUNuQlAsV0FBbUIsaUJBR3JCLElBQUssSUFBSVEsS0FBUUosRUFDZixRQUF1QkssSUFBbkJQLEVBQUdRLE1BQU1GLEdBQ1gsTUFBTyxDQUFFUCxJQUFLRyxFQUFtQkksSUFJckMsT0FBTyxFQWNnQkcsR0FFbEJ4QixFQUFFWSxRQUFRQyxhQUVmYixFQUFFeUIsTUFBTUMsUUFBUUMsZ0JBQWtCLENBQ2hDQyxTQUFVNUIsRUFBRVksUUFBUUMsV0FBV0MsSUFDL0JlLGFBQWM3QixFQUFFWSxRQUFRQyxXQUFXQyxJQUNuQ2dCLE9BQVEsU0FBVUMsR0FDaEIsR0FBSS9CLEVBQUUrQixFQUFFQyxRQUFRQyxHQUFHekIsTUFBTyxPQUFPdUIsRUFBRUcsVUFBVUMsUUFBUUMsTUFBTTVCLEtBQU02QixnQkE1Q3hFLENBaURDQyxRQVdELFNBQVV0QyxHQUNULGFBS0EsSUFBSXVDLEVBQVcsU0FBVUMs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LEVBQUssYUFFOUNuSyxFQUFFa1EsS0FBSyxDQUNMQyxJQUFLLFFBQVFLLEVBQUssUUFDbEJKLFNBQVcsT0FDWEMsUUFBUyxTQUFVeE0sR0FDakI3RCxFQUFFLHdCQUF3QnlRLEtBQUssc0NBQy9CelEsRUFBRTJELEtBQUtFLEVBQU0sU0FBUzRELEVBQUdrRCxHQUN2QjNLLEVBQUUscUJBQ0M2SyxPQUFPLDJFQUNORixFQUFJckMsR0FDSiw2REFDQXFDLEVBQUkyRixNQUNKLG9CQUtadFEsRUFBRSxlQUFlbUQsR0FBRyxRQUFTLFdBQzNCbkQsRUFBRWtRLEtBQUssQ0FDTEMsSUFBSyxzQkFDTEMsU0FBVyxPQUNYQyxRQUFTLFNBQVV4TSxHQUNqQjdELEVBQUUsb0JBQW9CeVEsS0FBTTVNLFFBS2xDN0QsRUFBRSxjQUFjbUQsR0FBRyxRQUFTLFdBQzFCbkQsRUFBRWtRLEtBQUssQ0FDTEMsSUFBSyx1QkFDTEMsU0FBVyxPQUNYQyxRQUFTLFNBQVV4TSxHQUNqQjdELEVBQUUsb0JBQW9CeVEsS0FBTTVNIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIkKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbiAoKSB7XG4gIC8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgKiBCb290c3RyYXA6IHRyYW5zaXRpb24uanMgdjMuMy41XG4gICAqIGh0dHBzOi8vZ2V0Ym9vdHN0cmFwLmNvbS9qYXZhc2NyaXB0LyN0cmFuc2l0aW9uc1xuICAgKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICogQ29weXJpZ2h0IDIwMTEtMjAxNSBUd2l0dGVyLCBJbmMuXG4gICAqIExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvbWFzdGVyL0xJQ0VOU0UpXG4gICAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuICBcbiAgXG4gICtmdW5jdGlvbiAoJCkge1xuICAgICd1c2Ugc3RyaWN0JztcbiAgXG4gICAgLy8gQ1NTIFRSQU5TSVRJT04gU1VQUE9SVCAoU2hvdXRvdXQ6IGh0dHBzOi8vd3d3Lm1vZGVybml6ci5jb20vKVxuICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICBcbiAgICBmdW5jdGlvbiB0cmFuc2l0aW9uRW5kKCkge1xuICAgICAgdmFyIGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYm9vdHN0cmFwJylcbiAgXG4gICAgICB2YXIgdHJhbnNFbmRFdmVudE5hbWVzID0ge1xuICAgICAgICBXZWJraXRUcmFuc2l0aW9uIDogJ3dlYmtpdFRyYW5zaXRpb25FbmQnLFxuICAgICAgICBNb3pUcmFuc2l0aW9uICAgIDogJ3RyYW5zaXRpb25lbmQnLFxuICAgICAgICBPVHJhbnNpdGlvbiAgICAgIDogJ29UcmFuc2l0aW9uRW5kIG90cmFuc2l0aW9uZW5kJyxcbiAgICAgICAgdHJhbnNpdGlvbiAgICAgICA6ICd0cmFuc2l0aW9uZW5kJ1xuICAgICAgfVxuICBcbiAgICAgIGZvciAodmFyIG5hbWUgaW4gdHJhbnNFbmRFdmVudE5hbWVzKSB7XG4gICAgICAgIGlmIChlbC5zdHlsZVtuYW1lXSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgcmV0dXJuIHsgZW5kOiB0cmFuc0VuZEV2ZW50TmFtZXNbbmFtZV0gfVxuICAgICAgICB9XG4gICAgICB9XG4gIFxuICAgICAgcmV0dXJuIGZhbHNlIC8vIGV4cGxpY2l0IGZvciBpZTggKCAgLl8uKVxuICAgIH1cbiAgXG4gICAgLy8gaHR0cDovL2Jsb2cuYWxleG1hY2Nhdy5jb20vY3NzLXRyYW5zaXRpb25zXG4gICAgJC5mbi5lbXVsYXRlVHJhbnNpdGlvbkVuZCA9IGZ1bmN0aW9uIChkdXJhdGlvbikge1xuICAgICAgdmFyIGNhbGxlZCA9IGZhbHNlXG4gICAgICB2YXIgJGVsID0gdGhpc1xuICAgICAgJCh0aGlzKS5vbmUoJ2JzVHJhbnNpdGlvbkVuZCcsIGZ1bmN0aW9uICgpIHsgY2FsbGVkID0gdHJ1ZSB9KVxuICAgICAgdmFyIGNhbGxiYWNrID0gZnVuY3Rpb24gKCkgeyBpZiAoIWNhbGxlZCkgJCgkZWwpLnRyaWdnZXIoJC5zdXBwb3J0LnRyYW5zaXRpb24uZW5kKSB9XG4gICAgICBzZXRUaW1lb3V0KGNhbGxiYWNrLCBkdXJhdGlvbilcbiAgICAgIHJldHVybiB0aGlzXG4gICAgfVxuICBcbiAgICAkKGZ1bmN0aW9uICgpIHtcbiAgICAgICQuc3VwcG9ydC50cmFuc2l0aW9uID0gdHJhbnNpdGlvbkVuZCgpXG4gIFxuICAgICAgaWYgKCEkLnN1cHBvcnQudHJhbnNpdGlvbikgcmV0dXJuXG4gIFxuICAgICAgJC5ldmVudC5zcGVjaWFsLmJzVHJhbnNpdGlvbkVuZCA9IHtcbiAgICAgICAgYmluZFR5cGU6ICQuc3VwcG9ydC50cmFuc2l0aW9uLmVuZCxcbiAgICAgICAgZGVsZWdhdGVUeXBlOiAkLnN1cHBvcnQudHJhbnNpdGlvbi5lbmQsXG4gICAgICAgIGhhbmRsZTogZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICBpZiAoJChlLnRhcmdldCkuaXModGhpcykpIHJldHVybiBlLmhhbmRsZU9iai5oYW5kbGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cylcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gIFxuICB9KGpRdWVyeSk7XG4gIFxuICAvKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICogQm9vdHN0cmFwOiBjYXJvdXNlbC5qcyB2My4zLjVcbiAgICogaHR0cHM6Ly9nZXRib290c3RyYXAuY29tL2phdmFzY3JpcHQvI2Nhcm91c2VsXG4gICAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgKiBDb3B5cmlnaHQgMjAxMS0yMDE1IFR3aXR0ZXIsIEluYy5cbiAgICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYXN0ZXIvTElDRU5TRSlcbiAgICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4gIFxuICBcbiAgK2Z1bmN0aW9uICgkKSB7XG4gICAgJ3VzZSBzdHJpY3QnO1xuICBcbiAgICAvLyBDQVJPVVNFTCBDTEFTUyBERUZJTklUSU9OXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PVxuICBcbiAgICB2YXIgQ2Fyb3VzZWwgPSBmdW5jdGlvbiAoZWxlbWVudCwgb3B0aW9ucykge1xuICAgICAgdGhpcy4kZWxlbWVudCAgICA9ICQoZWxlbWVudClcbiAgICAgIHRoaXMuJGluZGljYXRvcnMgPSB0aGlzLiRlbGVtZW50LmZpbmQoJy5jYXJvdXNlbC1pbmRpY2F0b3JzJylcbiAgICAgIHRoaXMub3B0aW9ucyAgICAgPSBvcHRpb25zXG4gICAgICB0aGlzLnBhdXNlZCAgICAgID0gbnVsbFxuICAgICAgdGhpcy5zbGlkaW5nICAgICA9IG51bGxcbiAgICAgIHRoaXMuaW50ZXJ2YWwgICAgPSBudWxsXG4gICAgICB0aGlzLiRhY3RpdmUgICAgID0gbnVsbFxuICAgICAgdGhpcy4kaXRlbXMgICAgICA9IG51bGxcbiAgXG4gICAgICB0aGlzLm9wdGlvbnMua2V5Ym9hcmQgJiYgdGhpcy4kZWxlbWVudC5vbigna2V5ZG93bi5icy5jYXJvdXNlbCcsICQucHJveHkodGhpcy5rZXlkb3duLCB0aGlzKSlcbiAgXG4gICAgICB0aGlzLm9wdGlvbnMucGF1c2UgPT0gJ2hvdmVyJyAmJiAhKCdvbnRvdWNoc3RhcnQnIGluIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCkgJiYgdGhpcy4kZWxlbWVudFxuICAgICAgICAub24oJ21vdXNlZW50ZXIuYnMuY2Fyb3VzZWwnLCAkLnByb3h5KHRoaXMucGF1c2UsIHRoaXMpKVxuICAgICAgICAub24oJ21vdXNlbGVhdmUuYnMuY2Fyb3VzZWwnLCAkLnByb3h5KHRoaXMuY3ljbGUsIHRoaXMpKVxuICAgIH1cbiAgXG4gICAgQ2Fyb3VzZWwuVkVSU0lPTiAgPSAnMy4zLjUnXG4gIFxuICAgIENhcm91c2VsLlRSQU5TSVRJT05fRFVSQVRJT04gPSA2MDBcbiAgXG4gICAgQ2Fyb3VzZWwuREVGQVVMVFMgPSB7XG4gICAgICBpbnRlcnZhbDogNTAwMCxcbiAgICAgIHBhdXNlOiAnaG92ZXInLFxuICAgICAgd3JhcDogdHJ1ZSxcbiAgICAgIGtleWJvYXJkOiB0cnVlXG4gICAgfVxuICBcbiAgICBDYXJvdXNlbC5wcm90b3R5cGUua2V5ZG93biA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICBpZiAoL2lucHV0fHRleHRhcmVhL2kudGVzdChlLnRhcmdldC50YWdOYW1lKSkgcmV0dXJuXG4gICAgICBzd2l0Y2ggKGUud2hpY2gpIHtcbiAgICAgICAgY2FzZSAzNzogdGhpcy5wcmV2KCk7IGJyZWFrXG4gICAgICAgIGNhc2UgMzk6IHRoaXMubmV4dCgpOyBicmVha1xuICAgICAgICBkZWZhdWx0OiByZXR1cm5cbiAgICAgIH1cbiAgXG4gICAgICBlLnByZXZlbnREZWZhdWx0KClcbiAgICB9XG4gIFxuICAgIENhcm91c2VsLnByb3RvdHlwZS5jeWNsZSA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICBlIHx8ICh0aGlzLnBhdXNlZCA9IGZhbHNlKVxuICBcbiAgICAgIHRoaXMuaW50ZXJ2YWwgJiYgY2xlYXJJbnRlcnZhbCh0aGlzLmludGVydmFsKVxuICBcbiAgICAgIHRoaXMub3B0aW9ucy5pbnRlcnZhbFxuICAgICAgICAmJiAhdGhpcy5wYXVzZWRcbiAgICAgICAgJiYgKHRoaXMuaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCgkLnByb3h5KHRoaXMubmV4dCwgdGhpcyksIHRoaXMub3B0aW9ucy5pbnRlcnZhbCkpXG4gIFxuICAgICAgcmV0dXJuIHRoaXNcbiAgICB9XG4gIFxuICAgIENhcm91c2VsLnByb3RvdHlwZS5nZXRJdGVtSW5kZXggPSBmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdGhpcy4kaXRlbXMgPSBpdGVtLnBhcmVudCgpLmNoaWxkcmVuKCcuaXRlbScpXG4gICAgICByZXR1cm4gdGhpcy4kaXRlbXMuaW5kZXgoaXRlbSB8fCB0aGlzLiRhY3RpdmUpXG4gICAgfVxuICBcbiAgICBDYXJvdXNlbC5wcm90b3R5cGUuZ2V0SXRlbUZvckRpcmVjdGlvbiA9IGZ1bmN0aW9uIChkaXJlY3Rpb24sIGFjdGl2ZSkge1xuICAgICAgdmFyIGFjdGl2ZUluZGV4ID0gdGhpcy5nZXRJdGVtSW5kZXgoYWN0aXZlKVxuICAgICAgdmFyIHdpbGxXcmFwID0gKGRpcmVjdGlvbiA9PSAncHJldicgJiYgYWN0aXZlSW5kZXggPT09IDApXG4gICAgICAgICAgICAgICAgICB8fCAoZGlyZWN0aW9uID09ICduZXh0JyAmJiBhY3RpdmVJbmRleCA9PSAodGhpcy4kaXRlbXMubGVuZ3RoIC0gMSkpXG4gICAgICBpZiAod2lsbFdyYXAgJiYgIXRoaXMub3B0aW9ucy53cmFwKSByZXR1cm4gYWN0aXZlXG4gICAgICB2YXIgZGVsdGEgPSBkaXJlY3Rpb24gPT0gJ3ByZXYnID8gLTEgOiAxXG4gICAgICB2YXIgaXRlbUluZGV4ID0gKGFjdGl2ZUluZGV4ICsgZGVsdGEpICUgdGhpcy4kaXRlbXMubGVuZ3RoXG4gICAgICByZXR1cm4gdGhpcy4kaXRlbXMuZXEoaXRlbUluZGV4KVxuICAgIH1cbiAgXG4gICAgQ2Fyb3VzZWwucHJvdG90eXBlLnRvID0gZnVuY3Rpb24gKHBvcykge1xuICAgICAgdmFyIHRoYXQgICAgICAgID0gdGhpc1xuICAgICAgdmFyIGFjdGl2ZUluZGV4ID0gdGhpcy5nZXRJdGVtSW5kZXgodGhpcy4kYWN0aXZlID0gdGhpcy4kZWxlbWVudC5maW5kKCcuaXRlbS5hY3RpdmUnKSlcbiAgXG4gICAgICBpZiAocG9zID4gKHRoaXMuJGl0ZW1zLmxlbmd0aCAtIDEpIHx8IHBvcyA8IDApIHJldHVyblxuICBcbiAgICAgIGlmICh0aGlzLnNsaWRpbmcpICAgICAgIHJldHVybiB0aGlzLiRlbGVtZW50Lm9uZSgnc2xpZC5icy5jYXJvdXNlbCcsIGZ1bmN0aW9uICgpIHsgdGhhdC50byhwb3MpIH0pIC8vIHllcywgXCJzbGlkXCJcbiAgICAgIGlmIChhY3RpdmVJbmRleCA9PSBwb3MpIHJldHVybiB0aGlzLnBhdXNlKCkuY3ljbGUoKVxuICBcbiAgICAgIHJldHVybiB0aGlzLnNsaWRlKHBvcyA+IGFjdGl2ZUluZGV4ID8gJ25leHQnIDogJ3ByZXYnLCB0aGlzLiRpdGVtcy5lcShwb3MpKVxuICAgIH1cbiAgXG4gICAgQ2Fyb3VzZWwucHJvdG90eXBlLnBhdXNlID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgIGUgfHwgKHRoaXMucGF1c2VkID0gdHJ1ZSlcbiAgXG4gICAgICBpZiAodGhpcy4kZWxlbWVudC5maW5kKCcubmV4dCwgLnByZXYnKS5sZW5ndGggJiYgJC5zdXBwb3J0LnRyYW5zaXRpb24pIHtcbiAgICAgICAgdGhpcy4kZWxlbWVudC50cmlnZ2VyKCQuc3VwcG9ydC50cmFuc2l0aW9uLmVuZClcbiAgICAgICAgdGhpcy5jeWNsZSh0cnVlKVxuICAgICAgfVxuICBcbiAgICAgIHRoaXMuaW50ZXJ2YWwgPSBjbGVhckludGVydmFsKHRoaXMuaW50ZXJ2YWwpXG4gIFxuICAgICAgcmV0dXJuIHRoaXNcbiAgICB9XG4gIFxuICAgIENhcm91c2VsLnByb3RvdHlwZS5uZXh0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKHRoaXMuc2xpZGluZykgcmV0dXJuXG4gICAgICByZXR1cm4gdGhpcy5zbGlkZSgnbmV4dCcpXG4gICAgfVxuICBcbiAgICBDYXJvdXNlbC5wcm90b3R5cGUucHJldiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmICh0aGlzLnNsaWRpbmcpIHJldHVyblxuICAgICAgcmV0dXJuIHRoaXMuc2xpZGUoJ3ByZXYnKVxuICAgIH1cbiAgXG4gICAgQ2Fyb3VzZWwucHJvdG90eXBlLnNsaWRlID0gZnVuY3Rpb24gKHR5cGUsIG5leHQpIHtcbiAgICAgIHZhciAkYWN0aXZlICAgPSB0aGlzLiRlbGVtZW50LmZpbmQoJy5pdGVtLmFjdGl2ZScpXG4gICAgICB2YXIgJG5leHQgICAgID0gbmV4dCB8fCB0aGlzLmdldEl0ZW1Gb3JEaXJlY3Rpb24odHlwZSwgJGFjdGl2ZSlcbiAgICAgIHZhciBpc0N5Y2xpbmcgPSB0aGlzLmludGVydmFsXG4gICAgICB2YXIgZGlyZWN0aW9uID0gdHlwZSA9PSAnbmV4dCcgPyAnbGVmdCcgOiAncmlnaHQnXG4gICAgICB2YXIgdGhhdCAgICAgID0gdGhpc1xuICBcbiAgICAgIGlmICgkbmV4dC5oYXNDbGFzcygnYWN0aXZlJykpIHJldHVybiAodGhpcy5zbGlkaW5nID0gZmFsc2UpXG4gIFxuICAgICAgdmFyIHJlbGF0ZWRUYXJnZXQgPSAkbmV4dFswXVxuICAgICAgdmFyIHNsaWRlRXZlbnQgPSAkLkV2ZW50KCdzbGlkZS5icy5jYXJvdXNlbCcsIHtcbiAgICAgICAgcmVsYXRlZFRhcmdldDogcmVsYXRlZFRhcmdldCxcbiAgICAgICAgZGlyZWN0aW9uOiBkaXJlY3Rpb25cbiAgICAgIH0pXG4gICAgICB0aGlzLiRlbGVtZW50LnRyaWdnZXIoc2xpZGVFdmVudClcbiAgICAgIGlmIChzbGlkZUV2ZW50LmlzRGVmYXVsdFByZXZlbnRlZCgpKSByZXR1cm5cbiAgXG4gICAgICB0aGlzLnNsaWRpbmcgPSB0cnVlXG4gIFxuICAgICAgaXNDeWNsaW5nICYmIHRoaXMucGF1c2UoKVxuICBcbiAgICAgIGlmICh0aGlzLiRpbmRpY2F0b3JzLmxlbmd0aCkge1xuICAgICAgICB0aGlzLiRpbmRpY2F0b3JzLmZpbmQoJy5hY3RpdmUnKS5yZW1vdmVDbGFzcygnYWN0aXZlJylcbiAgICAgICAgdmFyICRuZXh0SW5kaWNhdG9yID0gJCh0aGlzLiRpbmRpY2F0b3JzLmNoaWxkcmVuKClbdGhpcy5nZXRJdGVtSW5kZXgoJG5leHQpXSlcbiAgICAgICAgJG5leHRJbmRpY2F0b3IgJiYgJG5leHRJbmRpY2F0b3IuYWRkQ2xhc3MoJ2FjdGl2ZScpXG4gICAgICB9XG4gIFxuICAgICAgdmFyIHNsaWRFdmVudCA9ICQuRXZlbnQoJ3NsaWQuYnMuY2Fyb3VzZWwnLCB7IHJlbGF0ZWRUYXJnZXQ6IHJlbGF0ZWRUYXJnZXQsIGRpcmVjdGlvbjogZGlyZWN0aW9uIH0pIC8vIHllcywgXCJzbGlkXCJcbiAgICAgIGlmICgkLnN1cHBvcnQudHJhbnNpdGlvbiAmJiB0aGlzLiRlbGVtZW50Lmhhc0NsYXNzKCdzbGlkZScpKSB7XG4gICAgICAgICRuZXh0LmFkZENsYXNzKHR5cGUpXG4gICAgICAgICRuZXh0WzBdLm9mZnNldFdpZHRoIC8vIGZvcmNlIHJlZmxvd1xuICAgICAgICAkYWN0aXZlLmFkZENsYXNzKGRpcmVjdGlvbilcbiAgICAgICAgJG5leHQuYWRkQ2xhc3MoZGlyZWN0aW9uKVxuICAgICAgICAkYWN0aXZlXG4gICAgICAgICAgLm9uZSgnYnNUcmFuc2l0aW9uRW5kJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgJG5leHQucmVtb3ZlQ2xhc3MoW3R5cGUsIGRpcmVjdGlvbl0uam9pbignICcpKS5hZGRDbGFzcygnYWN0aXZlJylcbiAgICAgICAgICAgICRhY3RpdmUucmVtb3ZlQ2xhc3MoWydhY3RpdmUnLCBkaXJlY3Rpb25dLmpvaW4oJyAnKSlcbiAgICAgICAgICAgIHRoYXQuc2xpZGluZyA9IGZhbHNlXG4gICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgdGhhdC4kZWxlbWVudC50cmlnZ2VyKHNsaWRFdmVudClcbiAgICAgICAgICAgIH0sIDApXG4gICAgICAgICAgfSlcbiAgICAgICAgICAuZW11bGF0ZVRyYW5zaXRpb25FbmQoQ2Fyb3VzZWwuVFJBTlNJVElPTl9EVVJBVElPTilcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgICRhY3RpdmUucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpXG4gICAgICAgICRuZXh0LmFkZENsYXNzKCdhY3RpdmUnKVxuICAgICAgICB0aGlzLnNsaWRpbmcgPSBmYWxzZVxuICAgICAgICB0aGlzLiRlbGVtZW50LnRyaWdnZXIoc2xpZEV2ZW50KVxuICAgICAgfVxuICBcbiAgICAgIGlzQ3ljbGluZyAmJiB0aGlzLmN5Y2xlKClcbiAgXG4gICAgICByZXR1cm4gdGhpc1xuICAgIH1cbiAgXG4gIFxuICAgIC8vIENBUk9VU0VMIFBMVUdJTiBERUZJTklUSU9OXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgXG4gICAgZnVuY3Rpb24gUGx1Z2luKG9wdGlvbikge1xuICAgICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciAkdGhpcyAgID0gJCh0aGlzKVxuICAgICAgICB2YXIgZGF0YSAgICA9ICR0aGlzLmRhdGEoJ2JzLmNhcm91c2VsJylcbiAgICAgICAgdmFyIG9wdGlvbnMgPSAkLmV4dGVuZCh7fSwgQ2Fyb3VzZWwuREVGQVVMVFMsICR0aGlzLmRhdGEoKSwgdHlwZW9mIG9wdGlvbiA9PSAnb2JqZWN0JyAmJiBvcHRpb24pXG4gICAgICAgIHZhciBhY3Rpb24gID0gdHlwZW9mIG9wdGlvbiA9PSAnc3RyaW5nJyA/IG9wdGlvbiA6IG9wdGlvbnMuc2xpZGVcbiAgXG4gICAgICAgIGlmICghZGF0YSkgJHRoaXMuZGF0YSgnYnMuY2Fyb3VzZWwnLCAoZGF0YSA9IG5ldyBDYXJvdXNlbCh0aGlzLCBvcHRpb25zKSkpXG4gICAgICAgIGlmICh0eXBlb2Ygb3B0aW9uID09ICdudW1iZXInKSBkYXRhLnRvKG9wdGlvbilcbiAgICAgICAgZWxzZSBpZiAoYWN0aW9uKSBkYXRhW2FjdGlvbl0oKVxuICAgICAgICBlbHNlIGlmIChvcHRpb25zLmludGVydmFsKSBkYXRhLnBhdXNlKCkuY3ljbGUoKVxuICAgICAgfSlcbiAgICB9XG4gIFxuICAgIHZhciBvbGQgPSAkLmZuLmNhcm91c2VsXG4gIFxuICAgICQuZm4uY2Fyb3VzZWwgICAgICAgICAgICAgPSBQbHVnaW5cbiAgICAkLmZuLmNhcm91c2VsLkNvbnN0cnVjdG9yID0gQ2Fyb3VzZWxcbiAgXG4gIFxuICAgIC8vIENBUk9VU0VMIE5PIENPTkZMSUNUXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PT1cbiAgXG4gICAgJC5mbi5jYXJvdXNlbC5ub0NvbmZsaWN0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgJC5mbi5jYXJvdXNlbCA9IG9sZFxuICAgICAgcmV0dXJuIHRoaXNcbiAgICB9XG4gIFxuICBcbiAgICAvLyBDQVJPVVNFTCBEQVRBLUFQSVxuICAgIC8vID09PT09PT09PT09PT09PT09XG4gIFxuICAgIHZhciBjbGlja0hhbmRsZXIgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgdmFyIGhyZWZcbiAgICAgIHZhciAkdGhpcyAgID0gJCh0aGlzKVxuICAgICAgdmFyICR0YXJnZXQgPSAkKCR0aGlzLmF0dHIoJ2RhdGEtdGFyZ2V0JykgfHwgKGhyZWYgPSAkdGhpcy5hdHRyKCdocmVmJykpICYmIGhyZWYucmVwbGFjZSgvLiooPz0jW15cXHNdKyQpLywgJycpKSAvLyBzdHJpcCBmb3IgaWU3XG4gICAgICBpZiAoISR0YXJnZXQuaGFzQ2xhc3MoJ2Nhcm91c2VsJykpIHJldHVyblxuICAgICAgdmFyIG9wdGlvbnMgPSAkLmV4dGVuZCh7fSwgJHRhcmdldC5kYXRhKCksICR0aGlzLmRhdGEoKSlcbiAgICAgIHZhciBzbGlkZUluZGV4ID0gJHRoaXMuYXR0cignZGF0YS1zbGlkZS10bycpXG4gICAgICBpZiAoc2xpZGVJbmRleCkgb3B0aW9ucy5pbnRlcnZhbCA9IGZhbHNlXG4gIFxuICAgICAgUGx1Z2luLmNhbGwoJHRhcmdldCwgb3B0aW9ucylcbiAgXG4gICAgICBpZiAoc2xpZGVJbmRleCkge1xuICAgICAgICAkdGFyZ2V0LmRhdGEoJ2JzLmNhcm91c2VsJykudG8oc2xpZGVJbmRleClcbiAgICAgIH1cbiAgXG4gICAgICBlLnByZXZlbnREZWZhdWx0KClcbiAgICB9XG4gIFxuICAgICQoZG9jdW1lbnQpXG4gICAgICAub24oJ2NsaWNrLmJzLmNhcm91c2VsLmRhdGEtYXBpJywgJ1tkYXRhLXNsaWRlXScsIGNsaWNrSGFuZGxlcilcbiAgICAgIC5vbignY2xpY2suYnMuY2Fyb3VzZWwuZGF0YS1hcGknLCAnW2RhdGEtc2xpZGUtdG9dJywgY2xpY2tIYW5kbGVyKVxuICBcbiAgICAkKHdpbmRvdykub24oJ2xvYWQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAkKCdbZGF0YS1yaWRlPVwiY2Fyb3VzZWxcIl0nKS5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyICRjYXJvdXNlbCA9ICQodGhpcylcbiAgICAgICAgUGx1Z2luLmNhbGwoJGNhcm91c2VsLCAkY2Fyb3VzZWwuZGF0YSgpKVxuICAgICAgfSlcbiAgICB9KVxuICBcbiAgfShqUXVlcnkpO1xuICBcbiAgK2Z1bmN0aW9uKCl7XG4gICAgJCgnLmNhcm91c2VsLWl0ZW0taW1hZ2UgLml0ZW0nKS5lYWNoKGZ1bmN0aW9uKCl7XG4gICAgICB2YXIgaXRlbVRvQ2xvbmUgPSAkKHRoaXMpO1xuICBcbiAgICAgIGZvciAodmFyIGk9MTtpPDU7aSsrKSB7XG4gICAgICAgIGl0ZW1Ub0Nsb25lID0gaXRlbVRvQ2xvbmUubmV4dCgpO1xuICBcbiAgICAgICAgLy8gd3JhcCBhcm91bmQgaWYgYXQgZW5kIG9mIGl0ZW0gY29sbGVjdGlvblxuICAgICAgICBpZiAoIWl0ZW1Ub0Nsb25lLmxlbmd0aCkge1xuICAgICAgICAgIGl0ZW1Ub0Nsb25lID0gJCh0aGlzKS5zaWJsaW5ncygnOmZpcnN0Jyk7XG4gICAgICAgIH1cbiAgXG4gICAgICAgIC8vIGdyYWIgaXRlbSwgY2xvbmUsIGFkZCBtYXJrZXIgY2xhc3MsIGFkZCB0byBjb2xsZWN0aW9uXG4gICAgICAgIGl0ZW1Ub0Nsb25lLmNoaWxkcmVuKCc6Zmlyc3QtY2hpbGQnKS5jbG9uZSgpXG4gICAgICAgICAgLmFkZENsYXNzKFwiY2xvbmVkaXRlbS1cIisoaSkpXG4gICAgICAgICAgLmFwcGVuZFRvKCQodGhpcykpO1xuICAgICAgfVxuICAgIH0pO1xuICB9KCk7XG4gIFxuICAkKCcuY2Fyb3VzZWwnKS5jYXJvdXNlbCh7XG4gIFx0aW50ZXJ2YWw6IDAgLy90ZW1wXG4gIH0pO1xuICBcbiAgJCgnI2Nhcm91c2VsLWl0ZW0taW1hZ2UnKS5jYXJvdXNlbCh7IFxuICAgIGludGVydmFsOiAwIC8vdGVtcFxuICB9KTtcbiAgJCgnLmJlbmVmaXRzX19pdGVtJykub24oJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gICAgdmFyICR0aGlzID0gJCggdGhpcyApO1xuICAgIHZhciBjaGVja2VkID0gJHRoaXMuYXR0cignZGF0YS1uYW1lJyk7XG4gICAgaWYgKCAhJHRoaXMuaGFzQ2xhc3MoJ2lzQWN0aXZlJykpIHtcbiAgICAgICR0aGlzLmNsb3Nlc3QoJy5maWx0ZXJfX2NoZWNrYm94LXdyYXAnKS5maW5kKCcjJysgY2hlY2tlZCkucHJvcCgnY2hlY2tlZCcsdHJ1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICR0aGlzLmNsb3Nlc3QoJy5maWx0ZXJfX2NoZWNrYm94LXdyYXAnKS5maW5kKCcjJysgY2hlY2tlZCkucHJvcCgnY2hlY2tlZCcsZmFsc2UpO1xuICAgIH1cbiAgICAvLyBjb25zb2xlLmxvZygkKCcjc2Nob29sJykuaXMoJzpjaGVja2VkJykpO1xuICAgIC8vIGNvbnNvbGUubG9nKCQoJyNraW5kZXInKS5pcygnOmNoZWNrZWQnKSk7XG4gICAgLy8gY29uc29sZS5sb2coJCgnI2RydWdzdG9yZScpLmlzKCc6Y2hlY2tlZCcpKTtcbiAgICAvLyBjb25zb2xlLmxvZygkKCcjaG9zcGl0YWwnKS5pcygnOmNoZWNrZWQnKSk7XG4gICAgLy8gY29uc29sZS5sb2coJCgnI3Nob3AnKS5pcygnOmNoZWNrZWQnKSk7XG4gICAgLy8gY29uc29sZS5sb2coJCgnI2JhbmsnKS5pcygnOmNoZWNrZWQnKSk7XG4gICAgLy8gY29uc29sZS5sb2coJCgnI2NhZmUnKS5pcygnOmNoZWNrZWQnKSk7XG4gICAgLy8gY29uc29sZS5sb2coJCgnI3Jlc3QnKS5pcygnOmNoZWNrZWQnKSk7XG4gIH0pXG4gIC8qIVxuICAgKiBCb290c3RyYXAgdjMuMy43IChodHRwOi8vZ2V0Ym9vdHN0cmFwLmNvbSlcbiAgICogQ29weXJpZ2h0IDIwMTEtMjAxOCBUd2l0dGVyLCBJbmMuXG4gICAqIExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvbWFzdGVyL0xJQ0VOU0UpXG4gICAqL1xuICBcbiAgLyohXG4gICAqIEdlbmVyYXRlZCB1c2luZyB0aGUgQm9vdHN0cmFwIEN1c3RvbWl6ZXIgKDxub25lPilcbiAgICogQ29uZmlnIHNhdmVkIHRvIGNvbmZpZy5qc29uIGFuZCA8bm9uZT5cbiAgICovXG4gIGlmICh0eXBlb2YgalF1ZXJ5ID09PSAndW5kZWZpbmVkJykge1xuICAgIHRocm93IG5ldyBFcnJvcignQm9vdHN0cmFwXFwncyBKYXZhU2NyaXB0IHJlcXVpcmVzIGpRdWVyeScpXG4gIH1cbiAgK2Z1bmN0aW9uICgkKSB7XG4gICAgJ3VzZSBzdHJpY3QnO1xuICAgIHZhciB2ZXJzaW9uID0gJC5mbi5qcXVlcnkuc3BsaXQoJyAnKVswXS5zcGxpdCgnLicpXG4gICAgaWYgKCh2ZXJzaW9uWzBdIDwgMiAmJiB2ZXJzaW9uWzFdIDwgOSkgfHwgKHZlcnNpb25bMF0gPT0gMSAmJiB2ZXJzaW9uWzFdID09IDkgJiYgdmVyc2lvblsyXSA8IDEpIHx8ICh2ZXJzaW9uWzBdID4gMykpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignQm9vdHN0cmFwXFwncyBKYXZhU2NyaXB0IHJlcXVpcmVzIGpRdWVyeSB2ZXJzaW9uIDEuOS4xIG9yIGhpZ2hlciwgYnV0IGxvd2VyIHRoYW4gdmVyc2lvbiA0JylcbiAgICB9XG4gIH0oalF1ZXJ5KTtcbiAgXG4gIC8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgKiBCb290c3RyYXA6IGNvbGxhcHNlLmpzIHYzLjMuN1xuICAgKiBodHRwOi8vZ2V0Ym9vdHN0cmFwLmNvbS9qYXZhc2NyaXB0LyNjb2xsYXBzZVxuICAgKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICogQ29weXJpZ2h0IDIwMTEtMjAxNiBUd2l0dGVyLCBJbmMuXG4gICAqIExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvbWFzdGVyL0xJQ0VOU0UpXG4gICAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuICBcbiAgLyoganNoaW50IGxhdGVkZWY6IGZhbHNlICovXG4gIFxuICArZnVuY3Rpb24gKCQpIHtcbiAgICAndXNlIHN0cmljdCc7XG4gIFxuICAgIC8vIENPTExBUFNFIFBVQkxJQyBDTEFTUyBERUZJTklUSU9OXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgXG4gICAgdmFyIENvbGxhcHNlID0gZnVuY3Rpb24gKGVsZW1lbnQsIG9wdGlvbnMpIHtcbiAgICAgIHRoaXMuJGVsZW1lbnQgICAgICA9ICQoZWxlbWVudClcbiAgICAgIHRoaXMub3B0aW9ucyAgICAgICA9ICQuZXh0ZW5kKHt9LCBDb2xsYXBzZS5ERUZBVUxUUywgb3B0aW9ucylcbiAgICAgIHRoaXMuJHRyaWdnZXIgICAgICA9ICQoJ1tkYXRhLXRvZ2dsZT1cImNvbGxhcHNlXCJdW2hyZWY9XCIjJyArIGVsZW1lbnQuaWQgKyAnXCJdLCcgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnW2RhdGEtdG9nZ2xlPVwiY29sbGFwc2VcIl1bZGF0YS10YXJnZXQ9XCIjJyArIGVsZW1lbnQuaWQgKyAnXCJdJylcbiAgICAgIHRoaXMudHJhbnNpdGlvbmluZyA9IG51bGxcbiAgXG4gICAgICBpZiAodGhpcy5vcHRpb25zLnBhcmVudCkge1xuICAgICAgICB0aGlzLiRwYXJlbnQgPSB0aGlzLmdldFBhcmVudCgpXG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmFkZEFyaWFBbmRDb2xsYXBzZWRDbGFzcyh0aGlzLiRlbGVtZW50LCB0aGlzLiR0cmlnZ2VyKVxuICAgICAgfVxuICBcbiAgICAgIGlmICh0aGlzLm9wdGlvbnMudG9nZ2xlKSB0aGlzLnRvZ2dsZSgpXG4gICAgfVxuICBcbiAgICBDb2xsYXBzZS5WRVJTSU9OICA9ICczLjMuNydcbiAgXG4gICAgQ29sbGFwc2UuVFJBTlNJVElPTl9EVVJBVElPTiA9IDM1MFxuICBcbiAgICBDb2xsYXBzZS5ERUZBVUxUUyA9IHtcbiAgICAgIHRvZ2dsZTogdHJ1ZVxuICAgIH1cbiAgXG4gICAgQ29sbGFwc2UucHJvdG90eXBlLmRpbWVuc2lvbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBoYXNXaWR0aCA9IHRoaXMuJGVsZW1lbnQuaGFzQ2xhc3MoJ3dpZHRoJylcbiAgICAgIHJldHVybiBoYXNXaWR0aCA/ICd3aWR0aCcgOiAnaGVpZ2h0J1xuICAgIH1cbiAgXG4gICAgQ29sbGFwc2UucHJvdG90eXBlLnNob3cgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAodGhpcy50cmFuc2l0aW9uaW5nIHx8IHRoaXMuJGVsZW1lbnQuaGFzQ2xhc3MoJ2luJykpIHJldHVyblxuICBcbiAgICAgIHZhciBhY3RpdmVzRGF0YVxuICAgICAgdmFyIGFjdGl2ZXMgPSB0aGlzLiRwYXJlbnQgJiYgdGhpcy4kcGFyZW50LmNoaWxkcmVuKCcuY29sbGFwc2VfX3RhYicpLmNoaWxkcmVuKCcuaW4sIC5jb2xsYXBzaW5nJylcbiAgXG4gICAgICBpZiAoYWN0aXZlcyAmJiBhY3RpdmVzLmxlbmd0aCkge1xuICAgICAgICBhY3RpdmVzRGF0YSA9IGFjdGl2ZXMuZGF0YSgnYnMuY29sbGFwc2UnKVxuICAgICAgICBpZiAoYWN0aXZlc0RhdGEgJiYgYWN0aXZlc0RhdGEudHJhbnNpdGlvbmluZykgcmV0dXJuXG4gICAgICB9XG4gIFxuICAgICAgdmFyIHN0YXJ0RXZlbnQgPSAkLkV2ZW50KCdzaG93LmJzLmNvbGxhcHNlJylcbiAgICAgIHRoaXMuJGVsZW1lbnQudHJpZ2dlcihzdGFydEV2ZW50KVxuICAgICAgaWYgKHN0YXJ0RXZlbnQuaXNEZWZhdWx0UHJldmVudGVkKCkpIHJldHVyblxuICBcbiAgICAgIGlmIChhY3RpdmVzICYmIGFjdGl2ZXMubGVuZ3RoKSB7XG4gICAgICAgIFBsdWdpbi5jYWxsKGFjdGl2ZXMsICdoaWRlJylcbiAgICAgICAgYWN0aXZlc0RhdGEgfHwgYWN0aXZlcy5kYXRhKCdicy5jb2xsYXBzZScsIG51bGwpXG4gICAgICB9XG4gIFxuICAgICAgdmFyIGRpbWVuc2lvbiA9IHRoaXMuZGltZW5zaW9uKClcbiAgXG4gICAgICB0aGlzLiRlbGVtZW50XG4gICAgICAgIC5yZW1vdmVDbGFzcygnY29sbGFwc2UnKVxuICAgICAgICAuYWRkQ2xhc3MoJ2NvbGxhcHNpbmcnKVtkaW1lbnNpb25dKDApXG4gICAgICAgIC5hdHRyKCdhcmlhLWV4cGFuZGVkJywgdHJ1ZSlcbiAgXG4gICAgICB0aGlzLiR0cmlnZ2VyXG4gICAgICAgIC5yZW1vdmVDbGFzcygnY29sbGFwc2VkJylcbiAgICAgICAgLmF0dHIoJ2FyaWEtZXhwYW5kZWQnLCB0cnVlKVxuICBcbiAgICAgIHRoaXMudHJhbnNpdGlvbmluZyA9IDFcbiAgXG4gICAgICB2YXIgY29tcGxldGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuJGVsZW1lbnRcbiAgICAgICAgICAucmVtb3ZlQ2xhc3MoJ2NvbGxhcHNpbmcnKVxuICAgICAgICAgIC5hZGRDbGFzcygnY29sbGFwc2UgaW4nKVtkaW1lbnNpb25dKCcnKVxuICAgICAgICB0aGlzLnRyYW5zaXRpb25pbmcgPSAwXG4gICAgICAgIHRoaXMuJGVsZW1lbnRcbiAgICAgICAgICAudHJpZ2dlcignc2hvd24uYnMuY29sbGFwc2UnKVxuICAgICAgfVxuICBcbiAgICAgIGlmICghJC5zdXBwb3J0LnRyYW5zaXRpb24pIHJldHVybiBjb21wbGV0ZS5jYWxsKHRoaXMpXG4gIFxuICAgICAgdmFyIHNjcm9sbFNpemUgPSAkLmNhbWVsQ2FzZShbJ3Njcm9sbCcsIGRpbWVuc2lvbl0uam9pbignLScpKVxuICBcbiAgICAgIHRoaXMuJGVsZW1lbnRcbiAgICAgICAgLm9uZSgnYnNUcmFuc2l0aW9uRW5kJywgJC5wcm94eShjb21wbGV0ZSwgdGhpcykpXG4gICAgICAgIC5lbXVsYXRlVHJhbnNpdGlvbkVuZChDb2xsYXBzZS5UUkFOU0lUSU9OX0RVUkFUSU9OKVtkaW1lbnNpb25dKHRoaXMuJGVsZW1lbnRbMF1bc2Nyb2xsU2l6ZV0pXG4gICAgfVxuICBcbiAgICBDb2xsYXBzZS5wcm90b3R5cGUuaGlkZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmICh0aGlzLnRyYW5zaXRpb25pbmcgfHwgIXRoaXMuJGVsZW1lbnQuaGFzQ2xhc3MoJ2luJykpIHJldHVyblxuICBcbiAgICAgIHZhciBzdGFydEV2ZW50ID0gJC5FdmVudCgnaGlkZS5icy5jb2xsYXBzZScpXG4gICAgICB0aGlzLiRlbGVtZW50LnRyaWdnZXIoc3RhcnRFdmVudClcbiAgICAgIGlmIChzdGFydEV2ZW50LmlzRGVmYXVsdFByZXZlbnRlZCgpKSByZXR1cm5cbiAgXG4gICAgICB2YXIgZGltZW5zaW9uID0gdGhpcy5kaW1lbnNpb24oKVxuICBcbiAgICAgIHRoaXMuJGVsZW1lbnRbZGltZW5zaW9uXSh0aGlzLiRlbGVtZW50W2RpbWVuc2lvbl0oKSlbMF0ub2Zmc2V0SGVpZ2h0XG4gIFxuICAgICAgdGhpcy4kZWxlbWVudFxuICAgICAgICAuYWRkQ2xhc3MoJ2NvbGxhcHNpbmcnKVxuICAgICAgICAucmVtb3ZlQ2xhc3MoJ2NvbGxhcHNlIGluJylcbiAgICAgICAgLmF0dHIoJ2FyaWEtZXhwYW5kZWQnLCBmYWxzZSlcbiAgXG4gICAgICB0aGlzLiR0cmlnZ2VyXG4gICAgICAgIC5hZGRDbGFzcygnY29sbGFwc2VkJylcbiAgICAgICAgLmF0dHIoJ2FyaWEtZXhwYW5kZWQnLCBmYWxzZSlcbiAgXG4gICAgICB0aGlzLnRyYW5zaXRpb25pbmcgPSAxXG4gIFxuICAgICAgdmFyIGNvbXBsZXRlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLnRyYW5zaXRpb25pbmcgPSAwXG4gICAgICAgIHRoaXMuJGVsZW1lbnRcbiAgICAgICAgICAucmVtb3ZlQ2xhc3MoJ2NvbGxhcHNpbmcnKVxuICAgICAgICAgIC5hZGRDbGFzcygnY29sbGFwc2UnKVxuICAgICAgICAgIC50cmlnZ2VyKCdoaWRkZW4uYnMuY29sbGFwc2UnKVxuICAgICAgfVxuICBcbiAgICAgIGlmICghJC5zdXBwb3J0LnRyYW5zaXRpb24pIHJldHVybiBjb21wbGV0ZS5jYWxsKHRoaXMpXG4gIFxuICAgICAgdGhpcy4kZWxlbWVudFxuICAgICAgICBbZGltZW5zaW9uXSgwKVxuICAgICAgICAub25lKCdic1RyYW5zaXRpb25FbmQnLCAkLnByb3h5KGNvbXBsZXRlLCB0aGlzKSlcbiAgICAgICAgLmVtdWxhdGVUcmFuc2l0aW9uRW5kKENvbGxhcHNlLlRSQU5TSVRJT05fRFVSQVRJT04pXG4gICAgfVxuICBcbiAgICBDb2xsYXBzZS5wcm90b3R5cGUudG9nZ2xlID0gZnVuY3Rpb24gKCkge1xuICAgICAgdGhpc1t0aGlzLiRlbGVtZW50Lmhhc0NsYXNzKCdpbicpID8gJ2hpZGUnIDogJ3Nob3cnXSgpXG4gICAgfVxuICBcbiAgICBDb2xsYXBzZS5wcm90b3R5cGUuZ2V0UGFyZW50ID0gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuICQodGhpcy5vcHRpb25zLnBhcmVudClcbiAgICAgICAgLmZpbmQoJ1tkYXRhLXRvZ2dsZT1cImNvbGxhcHNlXCJdW2RhdGEtcGFyZW50PVwiJyArIHRoaXMub3B0aW9ucy5wYXJlbnQgKyAnXCJdJylcbiAgICAgICAgLmVhY2goJC5wcm94eShmdW5jdGlvbiAoaSwgZWxlbWVudCkge1xuICAgICAgICAgIHZhciAkZWxlbWVudCA9ICQoZWxlbWVudClcbiAgICAgICAgICB0aGlzLmFkZEFyaWFBbmRDb2xsYXBzZWRDbGFzcyhnZXRUYXJnZXRGcm9tVHJpZ2dlcigkZWxlbWVudCksICRlbGVtZW50KVxuICAgICAgICB9LCB0aGlzKSlcbiAgICAgICAgLmVuZCgpXG4gICAgfVxuICBcbiAgICBDb2xsYXBzZS5wcm90b3R5cGUuYWRkQXJpYUFuZENvbGxhcHNlZENsYXNzID0gZnVuY3Rpb24gKCRlbGVtZW50LCAkdHJpZ2dlcikge1xuICAgICAgdmFyIGlzT3BlbiA9ICRlbGVtZW50Lmhhc0NsYXNzKCdpbicpXG4gIFxuICAgICAgJGVsZW1lbnQuYXR0cignYXJpYS1leHBhbmRlZCcsIGlzT3BlbilcbiAgICAgICR0cmlnZ2VyXG4gICAgICAgIC50b2dnbGVDbGFzcygnY29sbGFwc2VkJywgIWlzT3BlbilcbiAgICAgICAgLmF0dHIoJ2FyaWEtZXhwYW5kZWQnLCBpc09wZW4pXG4gICAgfVxuICBcbiAgICBmdW5jdGlvbiBnZXRUYXJnZXRGcm9tVHJpZ2dlcigkdHJpZ2dlcikge1xuICAgICAgdmFyIGhyZWZcbiAgICAgIHZhciB0YXJnZXQgPSAkdHJpZ2dlci5hdHRyKCdkYXRhLXRhcmdldCcpXG4gICAgICAgIHx8IChocmVmID0gJHRyaWdnZXIuYXR0cignaHJlZicpKSAmJiBocmVmLnJlcGxhY2UoLy4qKD89I1teXFxzXSskKS8sICcnKSAvLyBzdHJpcCBmb3IgaWU3XG4gIFxuICAgICAgcmV0dXJuICQodGFyZ2V0KVxuICAgIH1cbiAgXG4gIFxuICAgIC8vIENPTExBUFNFIFBMVUdJTiBERUZJTklUSU9OXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgXG4gICAgZnVuY3Rpb24gUGx1Z2luKG9wdGlvbikge1xuICAgICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciAkdGhpcyAgID0gJCh0aGlzKVxuICAgICAgICB2YXIgZGF0YSAgICA9ICR0aGlzLmRhdGEoJ2JzLmNvbGxhcHNlJylcbiAgICAgICAgdmFyIG9wdGlvbnMgPSAkLmV4dGVuZCh7fSwgQ29sbGFwc2UuREVGQVVMVFMsICR0aGlzLmRhdGEoKSwgdHlwZW9mIG9wdGlvbiA9PSAnb2JqZWN0JyAmJiBvcHRpb24pXG4gIFxuICAgICAgICBpZiAoIWRhdGEgJiYgb3B0aW9ucy50b2dnbGUgJiYgL3Nob3d8aGlkZS8udGVzdChvcHRpb24pKSBvcHRpb25zLnRvZ2dsZSA9IGZhbHNlXG4gICAgICAgIGlmICghZGF0YSkgJHRoaXMuZGF0YSgnYnMuY29sbGFwc2UnLCAoZGF0YSA9IG5ldyBDb2xsYXBzZSh0aGlzLCBvcHRpb25zKSkpXG4gICAgICAgIGlmICh0eXBlb2Ygb3B0aW9uID09ICdzdHJpbmcnKSBkYXRhW29wdGlvbl0oKVxuICAgICAgfSlcbiAgICB9XG4gIFxuICAgIHZhciBvbGQgPSAkLmZuLmNvbGxhcHNlXG4gIFxuICAgICQuZm4uY29sbGFwc2UgICAgICAgICAgICAgPSBQbHVnaW5cbiAgICAkLmZuLmNvbGxhcHNlLkNvbnN0cnVjdG9yID0gQ29sbGFwc2VcbiAgXG4gIFxuICAgIC8vIENPTExBUFNFIE5PIENPTkZMSUNUXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PT1cbiAgXG4gICAgJC5mbi5jb2xsYXBzZS5ub0NvbmZsaWN0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgJC5mbi5jb2xsYXBzZSA9IG9sZFxuICAgICAgcmV0dXJuIHRoaXNcbiAgICB9XG4gIFxuICBcbiAgICAvLyBDT0xMQVBTRSBEQVRBLUFQSVxuICAgIC8vID09PT09PT09PT09PT09PT09XG4gIFxuICAgICQoZG9jdW1lbnQpLm9uKCdjbGljay5icy5jb2xsYXBzZS5kYXRhLWFwaScsICdbZGF0YS10b2dnbGU9XCJjb2xsYXBzZVwiXScsIGZ1bmN0aW9uIChlKSB7XG4gICAgICB2YXIgJHRoaXMgICA9ICQodGhpcylcbiAgXG4gICAgICBpZiAoISR0aGlzLmF0dHIoJ2RhdGEtdGFyZ2V0JykpIGUucHJldmVudERlZmF1bHQoKVxuICBcbiAgICAgIHZhciAkdGFyZ2V0ID0gZ2V0VGFyZ2V0RnJvbVRyaWdnZXIoJHRoaXMpXG4gICAgICB2YXIgZGF0YSAgICA9ICR0YXJnZXQuZGF0YSgnYnMuY29sbGFwc2UnKVxuICAgICAgdmFyIG9wdGlvbiAgPSBkYXRhID8gJ3RvZ2dsZScgOiAkdGhpcy5kYXRhKClcbiAgXG4gICAgICBQbHVnaW4uY2FsbCgkdGFyZ2V0LCBvcHRpb24pXG4gICAgfSlcbiAgXG4gIH0oalF1ZXJ5KTtcbiAgJCgnLmpzLWhpZGUtZmlsdGVyJykub24oJ2NsaWNrJyxmdW5jdGlvbihlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHZhciAkdGhpcyA9ICQoIHRoaXMgKTtcbiAgICBpZiAoICQoJy5maWx0ZXJfX2lucHV0LWdyb3VwLS1hZGQnKS5oYXNDbGFzcygnanMtaXNWaXNpYmxlJykgKSB7XG4gICAgICAkKCcuZmlsdGVyX19pbnB1dC1ncm91cC0tYWRkJykucmVtb3ZlQ2xhc3MoJ2pzLWlzVmlzaWJsZScpO1xuICAgICAgJHRoaXMucmVtb3ZlQ2xhc3MoJ2lTb3BlbmVkJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgICQoJy5maWx0ZXJfX2lucHV0LWdyb3VwLS1hZGQnKS5hZGRDbGFzcygnanMtaXNWaXNpYmxlJyk7ICAgICAgXG4gICAgICAkdGhpcy5hZGRDbGFzcygnaVNvcGVuZWQnKTtcbiAgICB9XG4gIH0pO1xuICBpZiAoJCgnI2NvdW50ZXInKS5sZW5ndGggKSB7XG4gICAgdmFyIGEgPSAwO1xuICAgICQod2luZG93KS5zY3JvbGwoZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgb1RvcCA9ICQoJyNjb3VudGVyJykub2Zmc2V0KCkudG9wIC0gd2luZG93LmlubmVySGVpZ2h0O1xuICAgICAgaWYgKGEgPT0gMCAmJiAkKHdpbmRvdykuc2Nyb2xsVG9wKCkgPiBvVG9wKSB7XG4gICAgICAgICQoJy5jb3VudGVyLXZhbHVlJykuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgICB2YXIgJHRoaXMgPSAkKHRoaXMpLCBjb3VudFRvID0gJHRoaXMuYXR0cignZGF0YS1jb3VudCcpO1xuICAgICAgICAgICQoe2NvdW50TnVtOiAkdGhpcy50ZXh0KCl9KS5hbmltYXRlKHsgY291bnROdW06IGNvdW50VG99LCB7XG4gICAgICAgICAgICAgIGR1cmF0aW9uOiAyMDAwLFxuICAgICAgICAgICAgICBlYXNpbmc6ICdzd2luZycsXG4gICAgICAgICAgICAgIHN0ZXA6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICR0aGlzLnRleHQoTWF0aC5mbG9vcih0aGlzLmNvdW50TnVtKSk7XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIGNvbXBsZXRlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAkdGhpcy50ZXh0KHRoaXMuY291bnROdW0pO1xuICAgICAgICAgICAgICAgIC8vYWxlcnQoJ2ZpbmlzaGVkJyk7XG4gICAgICAgICAgICAgICAgJCgnLnN0YXRpc3RpY3NfX2NhcmQtdGV4dCcpLmFkZENsYXNzKCdpc0FuaW1hdGVkJyk7XG4gICAgICAgICAgICAgICAgJCgnLmhpc3RvcnlfX2NhcmQtdGV4dCcpLmFkZENsYXNzKCdpc0FuaW1hdGVkJyk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICAgIGEgPSAxO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIC8vICQoJy5qcy1uYXYtbGluaycpLmhvdmVyKGZ1bmN0aW9uKCkge1xuICAvLyAgIHZhciAkdGhpcyA9ICQoIHRoaXMgKTtcbiAgLy8gICAvLyB2YXIgbGluayA9ICR0aGlzLmF0dHIoJ2RhdGEtbGluaycpO1xuICAvLyAgIC8vIGlmICggJCgnLmhlYWRlcl9fZHJvcGRvd25bZGF0YS1kcm9wPVwiJytsaW5rKydcIl0nKS5oYXNDbGFzcygnaXNPcGVuZWQnKSApIHtcbiAgLy8gICAvLyAgICQoJy5oZWFkZXJfX2Ryb3Bkb3duW2RhdGEtZHJvcD1cIicrbGluaysnXCJdJykucmVtb3ZlQ2xhc3MoJ2lzT3BlbmVkJyk7XG4gIC8vICAgLy8gfSBlbHNlIHtcbiAgLy8gICAvLyAgICQoJy5oZWFkZXJfX2Ryb3Bkb3duW2RhdGEtZHJvcD1cIicrbGluaysnXCJdJykuYWRkQ2xhc3MoJ2lzT3BlbmVkJyk7XG4gIC8vICAgLy8gfVxuICAvLyAgIGlmICggJHRoaXMuZmluZCgnLmhlYWRlcl9fZHJvcGRvd24nKS5oYXNDbGFzcygnaXNPcGVuZWQnKSApIHtcbiAgLy8gICAgICR0aGlzLmZpbmQoJy5oZWFkZXJfX2Ryb3Bkb3duJykucmVtb3ZlQ2xhc3MoJ2lzT3BlbmVkJyk7XG4gIC8vICAgfSBlbHNlIHtcbiAgLy8gICAgICR0aGlzLmZpbmQoJy5oZWFkZXJfX2Ryb3Bkb3duJykuYWRkQ2xhc3MoJ2lzT3BlbmVkJyk7XG4gIC8vICAgfVxuICAvLyB9KVxuICBcbiAgLy8gaWYgKCAkKCcuaGVhZGVyX19kcm9wZG93bi5pc09wZW5lZCcpICkge1xuICAvLyAgIGNvbnNvbGUubG9nKFwiaGVwcGVuc1wiKVxuICAvLyAgICQoZG9jdW1lbnQpLm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcbiAgLy8gICAgIGlmICggISQoZS50YXJnZXQpLmNsb3Nlc3QoJy5oZWFkZXJfX2Ryb3Bkb3duLmlzT3BlbmVkJykubGVuZ3RoKSB7XG4gIC8vICAgICAgICQoJy5oZWFkZXJfX2Ryb3Bkb3duLmlzT3BlbmVkJykucmVtb3ZlQ2xhc3MoJ2lzT3BlbicpO1xuICAvLyAgICAgfVxuICAvLyAgIH0pO1xuICAvLyB9XG4gICQoJy5qcy1oZWFkZXItbWVudScpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuICAgICQoJy5oZWFkZXJfX3NpZGUnKS5hZGRDbGFzcygnaXNPcGVuZWQnKTtcbiAgfSlcbiAgXG4gICQoJy5zaWRlLW1vZGFsJykub24oJ2NsaWNrJywgZnVuY3Rpb24oZSkge1xuICAgIGlmICggISQoZS50YXJnZXQpLmNsb3Nlc3QoJy5zaWRlLW1vZGFsX193cmFwcGVyJykubGVuZ3RoIHx8ICQoZS50YXJnZXQpLmNsb3Nlc3QoJyNtb2RhbC1jbG9zZScpICkge1xuICAgICAgJCgnLnNpZGUtbW9kYWwnKS5yZW1vdmVDbGFzcygnaXNPcGVuZWQnKTtcbiAgICB9XG4gIH0pXG4gIFxuICAvLyAkKCcjbW9kYWwtY2xvc2UnKS5vbignY2xpY2snLCBmdW5jdGlvbihlKSB7XG4gIC8vICAgdmFyICR0aGlzID0gJCggdGhpcyApO1xuICAvLyAgICR0aGlzLmNsb3Nlc3QoJy5qcy1tb2RhbCcpLnJlbW92ZUNsYXNzKCdpc09wZW5lZCcpO1xuICAvLyB9KVxuICAvL3doZW4gY2xpY2tpbmcvdG9nZ2xpbmcgZHJvcGRvd24gbWVudSBidG5cbiAgJCgnLmpzLXNlbGVjdC1idG4nKS5vbignY2xpY2snLCBmdW5jdGlvbigpIHtcbiAgICB2YXIgJHRoaXMgPSAkKCB0aGlzICk7XG4gICAgdmFyIHN5YmxpbmcgPSAkdGhpcy5jbG9zZXN0KCcuZmlsdGVyX19pbnB1dC1ibG9jaycpLmZpbmQoJy5qcy1zZWxlY3QtYmxvY2snKTtcbiAgICBpZiAoIHN5YmxpbmcuaGFzQ2xhc3MoJ2lzT3BlbicpKSB7XG4gICAgICAkdGhpcy5hZGRDbGFzcygnaXNDbG9zZWQnKTtcbiAgICAgICR0aGlzLnJlbW92ZUNsYXNzKCdpc09wZW4nKTtcbiAgICAgIHN5YmxpbmcucmVtb3ZlQ2xhc3MoJ2lzT3BlbicpO1xuICAgIH0gZWxzZSB7XG4gICAgICAkKCcuanMtc2VsZWN0LWJsb2NrJykucmVtb3ZlQ2xhc3MoJ2lzT3BlbicpO1xuICAgICAgJCgnLmpzLXNlbGVjdC1idG4nKS5yZW1vdmVDbGFzcygnaXNPcGVuJyk7ICAgIFxuICAgICAgJHRoaXMuYWRkQ2xhc3MoJ2lzT3BlbicpO1xuICAgICAgc3libGluZy5hZGRDbGFzcygnaXNPcGVuJyk7XG4gICAgfVxuICBcbiAgICB2YXIgJGJsb2NrID0gJHRoaXMuY2xvc2VzdCgnLmZpbHRlcl9faW5wdXQtYmxvY2snKTtcbiAgICB2YXIgJGV4aXN0ID0gJGJsb2NrLmZpbmQoJy5maWx0ZXJfX2VtcHR5Jyk7XG4gICAgdmFyIGVtcHR5ID0gXCI8c3BhbiBjbGFzcz0nZmlsdGVyX19lbXB0eSc+0J/QvtC70LUg0L7QsdGP0LfQsNGC0LXQu9GM0L3QviDQtNC70Y8g0LfQsNC/0L7Qu9C90LXQvdC40Y88L3NwYW4+XCJcbiAgICBpZiAoICEkZXhpc3QubGVuZ3RoICkge1xuICAgICAgaWYgKCAkYmxvY2suZmluZCgnLmpzLWZpbHRlci1oaWRkZW4nKS5wcm9wKCdyZXF1aXJlZCcpKSB7XG4gICAgICAgIGlmICggISRibG9jay5maW5kKCcuanMtZmlsdGVyLWhpZGRlbicpLnZhbCgpICkge1xuICAgICAgICAgICRibG9jay5maW5kKCcuZmlsdGVyX19pbnB1dC13cmFwJykuYXBwZW5kKCBlbXB0eSApO1xuICAgICAgICAgICR0aGlzLmFkZENsYXNzKCdmaWx0ZXJfX2RhbmdlcicpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICRibG9jay5maW5kKCcuZmlsdGVyX19lbXB0eScpLnJlbW92ZSgpO1xuICAgICAgICAgICR0aGlzLnJlbW92ZUNsYXNzKCdmaWx0ZXJfX2RhbmdlcicpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSAgXG4gIH0pO1xuICBcbiAgLy93aGVuIGNsaWNraW5nIG9uIGl0ZW0gaW4gZHJvcGRvd24gbWVudVxuICAkKCcuanMtc2VsZWN0LWl0ZW0nKS5vbignY2xpY2snLCBmdW5jdGlvbigpIHtcbiAgICB2YXIgJHRoaXMgPSAkKCB0aGlzICk7XG4gICAgJHRoaXMuYWRkQ2xhc3MoJ2pzLXNlbGVjdGVkJyk7XG4gICAgdmFyIHRleHQgPSAkdGhpcy50ZXh0KCk7XG4gICAgdmFyIGdyb3VwID0gJHRoaXMuYXR0cignZGF0YS1ncm91cCcpO1xuICAgICQoJy5qcy1zZWxlY3QtYnRuW2RhdGEtZ3JvdXA9XCInICsgZ3JvdXAgKyAnXCJdJykudGV4dCh0ZXh0KTtcbiAgICAkdGhpcy5jbG9zZXN0KCcuZmlsdGVyX19pbnB1dC1ibG9jaycpLmZpbmQoJy5qcy1zZWxlY3QtbGFiZWwnKS5hZGRDbGFzcygnZmxvYXRlZCcpO1xuICAgICQoJy5qcy1zZWxlY3QtYnRuLmlzT3BlbicpLmFkZENsYXNzKCdpc0Nsb3NlZCcpO1xuICAgICQoJy5qcy1zZWxlY3QtYmxvY2suaXNPcGVuJykucmVtb3ZlQ2xhc3MoJ2lzT3BlbicpO1xuICAgICQoJy5qcy1zZWxlY3QtYnRuLmlzT3BlbicpLnJlbW92ZUNsYXNzKCdpc09wZW4nKTtcbiAgICAkKCcuanMtZmlsdGVyLWhpZGRlbltkYXRhLWdyb3VwPVwiJyArIGdyb3VwICsgJ1wiXScpLnZhbCh0ZXh0KTsgICBcbiAgICBcbiAgICB2YXIgJGJsb2NrID0gJHRoaXMuY2xvc2VzdCgnLmZpbHRlcl9faW5wdXQtYmxvY2snKVxuICAgIGlmICggJGJsb2NrLmZpbmQoJy5qcy1maWx0ZXItaGlkZGVuJykucHJvcCgncmVxdWlyZWQnKSkge1xuICAgICAgdmFyIGVtcHR5ID0gXCI8c3BhbiBjbGFzcz0nZmlsdGVyX19lbXB0eSc+0J/QvtC70LUg0L7QsdGP0LfQsNGC0LXQu9GM0L3QviDQtNC70Y8g0LfQsNC/0L7Qu9C90LXQvdC40Y88L3NwYW4+XCJcbiAgICAgIGlmICggISRibG9jay5maW5kKCcuanMtZmlsdGVyLWhpZGRlbicpLnZhbCgpICkge1xuICAgICAgICAkYmxvY2suZmluZCgnLmZpbHRlcl9faW5wdXQtd3JhcCcpLmFwcGVuZCggZW1wdHkgKTtcbiAgICAgICAgJCgnLmpzLXNlbGVjdC1idG5bZGF0YS1ncm91cD1cIicgKyBncm91cCArICdcIl0nKS5hZGRDbGFzcygnZmlsdGVyX19kYW5nZXInKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgICRibG9jay5maW5kKCcuZmlsdGVyX19lbXB0eScpLnJlbW92ZSgpO1xuICAgICAgICAkKCcuanMtc2VsZWN0LWJ0bltkYXRhLWdyb3VwPVwiJyArIGdyb3VwICsgJ1wiXScpLnJlbW92ZUNsYXNzKCdmaWx0ZXJfX2RhbmdlcicpO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG4gIFxuICAvL3doZW4gY2xpY2tpbmcgb3V0c2lkZSB0aGUgaXRlbSBpbiBkcm9wZG93biBvciBkcm9wZG93biBidG4gXG4gIGlmICggJCgnLmpzLXNlbGVjdC1idG4uaXNPcGVuJykgKSB7XG4gICAgJChkb2N1bWVudCkub24oJ2NsaWNrJywgZnVuY3Rpb24oZSkge1xuICAgICAgaWYgKCAhJChlLnRhcmdldCkuY2xvc2VzdCgnLmpzLXNlbGVjdC1ibG9jay5pc09wZW4nKS5sZW5ndGggJiYgISQoZS50YXJnZXQpLmNsb3Nlc3QoJy5qcy1zZWxlY3QtYnRuLmlzT3BlbicpLmxlbmd0aCkge1xuICAgICAgICAkKCcuanMtc2VsZWN0LWJ0bi5pc09wZW4nKS5hZGRDbGFzcygnaXNDbG9zZWQnKTtcbiAgICAgICAgJCgnLmpzLXNlbGVjdC1ibG9jay5pc09wZW4nKS5yZW1vdmVDbGFzcygnaXNPcGVuJyk7XG4gICAgICAgICQoJy5qcy1zZWxlY3QtYnRuLmlzT3BlbicpLnJlbW92ZUNsYXNzKCdpc09wZW4nKTtcbiAgXG4gICAgICAgIHZhciAkdGhpcyA9ICQoJy5qcy1zZWxlY3QtYnRuLmlzQ2xvc2VkJyk7XG4gICAgICAgIHZhciAkYmxvY2sgPSAkdGhpcy5jbG9zZXN0KCcuZmlsdGVyX19pbnB1dC1ibG9jaycpO1xuICAgICAgICB2YXIgJGV4aXN0ID0gJGJsb2NrLmZpbmQoJy5maWx0ZXJfX2VtcHR5Jyk7XG4gICAgICAgIHZhciBlbXB0eSA9IFwiPHNwYW4gY2xhc3M9J2ZpbHRlcl9fZW1wdHknPtCf0L7Qu9C1INC+0LHRj9C30LDRgtC10LvRjNC90L4g0LTQu9GPINC30LDQv9C+0LvQvdC10L3QuNGPPC9zcGFuPlwiXG4gICAgICAgIGlmICggISRleGlzdC5sZW5ndGggKSB7XG4gICAgICAgICAgaWYgKCAkYmxvY2suZmluZCgnLmpzLWZpbHRlci1oaWRkZW4nKS5wcm9wKCdyZXF1aXJlZCcpKSB7XG4gICAgICAgICAgICBpZiAoICEkYmxvY2suZmluZCgnLmpzLWZpbHRlci1oaWRkZW4nKS52YWwoKSApIHtcbiAgICAgICAgICAgICAgJGJsb2NrLmZpbmQoJy5maWx0ZXJfX2lucHV0LXdyYXAnKS5hcHBlbmQoIGVtcHR5ICk7XG4gICAgICAgICAgICAgICQoJy5qcy1zZWxlY3QtYnRuLmlzQ2xvc2VkJykuYWRkQ2xhc3MoJ2ZpbHRlcl9fZGFuZ2VyJyk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAkYmxvY2suZmluZCgnLmZpbHRlcl9fZW1wdHknKS5yZW1vdmUoKTtcbiAgICAgICAgICAgICAgJCgnLmpzLXNlbGVjdC1idG4uaXNDbG9zZWQnKS5yZW1vdmVDbGFzcygnZmlsdGVyX19kYW5nZXInKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICBcbiAgJCgnLmZpbHRlcl9faW5wdXQnKS5vbignZm9jdXMnLCBmdW5jdGlvbigpIHtcbiAgICB2YXIgJHRoaXMgPSAkKCB0aGlzICk7XG4gICAgJHRoaXMuY2xvc2VzdCgnLmZpbHRlcl9faW5wdXQtd3JhcCcpLmZpbmQoJy5maWx0ZXJfX2Zsb2F0aW5nLWxhYmVsJykuYWRkQ2xhc3MoJ2Zsb2F0ZWQnKTtcbiAgfSlcbiAgXG4gICQoJy5maWx0ZXJfX2lucHV0Jykub24oJ2JsdXInLCBmdW5jdGlvbigpIHtcbiAgICB2YXIgJHRoaXMgPSAkKCB0aGlzICk7XG4gICAgdmFyICRwYXJlbnQgPSAkdGhpcy5jbG9zZXN0KCcuZmlsdGVyX19pbnB1dC13cmFwJyk7XG4gICAgdmFyICRpbnB1dCA9ICRwYXJlbnQuZmluZCgnLmZpbHRlcl9faW5wdXQnKTtcbiAgICBpZiAoICEkdGhpcy52YWwoKSApIHtcbiAgICAgIHZhciBlbXB0eSA9IFwiPHNwYW4gY2xhc3M9J2ZpbHRlcl9fZW1wdHknPtCf0L7Qu9C1INC+0LHRj9C30LDRgtC10LvRjNC90L4g0LTQu9GPINC30LDQv9C+0LvQvdC10L3QuNGPPC9zcGFuPlwiO1xuICAgICAgJHBhcmVudC5yZW1vdmVDbGFzcygndmFsaWRhdGVkJyk7XG4gICAgICAkcGFyZW50LmZpbmQoJy5maWx0ZXJfX2Zsb2F0aW5nLWxhYmVsJykucmVtb3ZlQ2xhc3MoJ2Zsb2F0ZWQnKTtcbiAgICAgIGlmICggJHRoaXMucHJvcCgncmVxdWlyZWQnKSkge1xuICAgICAgICBpZiAoICEkaW5wdXQuaGFzQ2xhc3MoJ2ZpbHRlcl9fZGFuZ2VyJykgKSB7XG4gICAgICAgICAgJGlucHV0LmFkZENsYXNzKCdmaWx0ZXJfX2RhbmdlcicpO1xuICAgICAgICAgICRwYXJlbnQuYXBwZW5kKCBlbXB0eSApO1xuICAgICAgICB9ICAgIFxuICAgICAgfVxuICAgIH0gXG4gICAgZWxzZSB7XG4gICAgICB2YXIgbmFtZSA9ICRpbnB1dC5hdHRyKCduYW1lJylcbiAgICAgIGlmICggbmFtZSA9PT0gJ25hbWUnICkge1xuICAgICAgICBpZiAoICRpbnB1dC52YWwoKS5pbmRleE9mKCcgJykgPiAtMSkge1xuICAgICAgICAgICRwYXJlbnQuYWRkQ2xhc3MoJ3ZhbGlkYXRlZCcpO1xuICAgICAgICAgIGlmICggJGlucHV0Lmhhc0NsYXNzKCdmaWx0ZXJfX2RhbmdlcicpICkge1xuICAgICAgICAgICAgJGlucHV0LnJlbW92ZUNsYXNzKCdmaWx0ZXJfX2RhbmdlcicpO1xuICAgICAgICAgICAgJHBhcmVudC5maW5kKCcuZmlsdGVyX19lbXB0eScpLnJlbW92ZSgpO1xuICAgICAgICAgIH0gXG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgJHBhcmVudC5yZW1vdmVDbGFzcygndmFsaWRhdGVkJyk7XG4gICAgICAgICAgJHBhcmVudC5maW5kKCcuZmlsdGVyX19lbXB0eScpLnJlbW92ZSgpO1xuICAgICAgICAgIHZhciBlbXB0eSA9IFwiPHNwYW4gY2xhc3M9J2ZpbHRlcl9fZW1wdHknPtCf0L7Qu9C1INC00L7Qu9C20L3QviDRgdC+0LTQtdGA0LbQsNGC0Ywg0JjQvNGPINC4INCk0LDQvNC40LvQuNGOINGH0LXRgNC10Lcg0L/RgNC+0LHQtdC7PC9zcGFuPlwiO1xuICAgICAgICAgICRpbnB1dC5hZGRDbGFzcygnZmlsdGVyX19kYW5nZXInKTtcbiAgICAgICAgICAkcGFyZW50LmFwcGVuZCggZW1wdHkgKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmICggbmFtZSA9PT0gJ2VtYWlsJyApIHtcbiAgICAgICAgaWYoIHZhbGlkYXRlRW1haWwoJGlucHV0LnZhbCgpKSkge1xuICAgICAgICAgICRwYXJlbnQuYWRkQ2xhc3MoJ3ZhbGlkYXRlZCcpO1xuICAgICAgICAgIGlmICggJGlucHV0Lmhhc0NsYXNzKCdmaWx0ZXJfX2RhbmdlcicpICkge1xuICAgICAgICAgICAgJGlucHV0LnJlbW92ZUNsYXNzKCdmaWx0ZXJfX2RhbmdlcicpO1xuICAgICAgICAgICAgJHBhcmVudC5maW5kKCcuZmlsdGVyX19lbXB0eScpLnJlbW92ZSgpO1xuICAgICAgICAgIH0gICAgICAgICBcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAkcGFyZW50LnJlbW92ZUNsYXNzKCd2YWxpZGF0ZWQnKTtcbiAgICAgICAgICAkcGFyZW50LmZpbmQoJy5maWx0ZXJfX2VtcHR5JykucmVtb3ZlKCk7XG4gICAgICAgICAgdmFyIGVtcHR5ID0gXCI8c3BhbiBjbGFzcz0nZmlsdGVyX19lbXB0eSc+RW1haWwg0LTQvtC70LbQtdC9INGB0L7QtNC10YDQttCw0YLRjCDQu9Cw0YLQuNC90YHQutC40LUg0LHRg9C60LLRiywg0YHQuNC80LLQvtC70YsgQCDQuCAuPC9zcGFuPlwiO1xuICAgICAgICAgICRpbnB1dC5hZGRDbGFzcygnZmlsdGVyX19kYW5nZXInKTtcbiAgICAgICAgICAkcGFyZW50LmFwcGVuZCggZW1wdHkgKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmICggbmFtZSA9PT0gJ3RlbCcgKSB7XG4gICAgICAgIGlmKCB2YWxpZGF0ZVBob25lKCRpbnB1dC52YWwoKSkpIHtcbiAgICAgICAgICAkcGFyZW50LmFkZENsYXNzKCd2YWxpZGF0ZWQnKTtcbiAgICAgICAgICBpZiAoICRpbnB1dC5oYXNDbGFzcygnZmlsdGVyX19kYW5nZXInKSApIHtcbiAgICAgICAgICAgICRpbnB1dC5yZW1vdmVDbGFzcygnZmlsdGVyX19kYW5nZXInKTtcbiAgICAgICAgICAgICRwYXJlbnQuZmluZCgnLmZpbHRlcl9fZW1wdHknKS5yZW1vdmUoKTtcbiAgICAgICAgICB9ICAgICAgICAgXG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgJHBhcmVudC5yZW1vdmVDbGFzcygndmFsaWRhdGVkJyk7XG4gICAgICAgICAgJHBhcmVudC5maW5kKCcuZmlsdGVyX19lbXB0eScpLnJlbW92ZSgpO1xuICAgICAgICAgIHZhciBlbXB0eSA9IFwiPHNwYW4gY2xhc3M9J2ZpbHRlcl9fZW1wdHknPtCd0L7QvNC10YAg0YLQtdC70LXRhNC+0L3QsCDQtNC+0LvQttC10L0g0YHQvtC00LXRgNC20LDRgtGMINC+0YIgMTAg0LTQviAxNCDRhtC40YTRgDwvc3Bhbj5cIjtcbiAgICAgICAgICAkaW5wdXQuYWRkQ2xhc3MoJ2ZpbHRlcl9fZGFuZ2VyJyk7XG4gICAgICAgICAgJHBhcmVudC5hcHBlbmQoIGVtcHR5ICk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgICRpbnB1dC5yZW1vdmVDbGFzcygnZmlsdGVyX19kYW5nZXInKTtcbiAgICAgICAgJHBhcmVudC5maW5kKCcuZmlsdGVyX19lbXB0eScpLnJlbW92ZSgpO1xuICAgICAgfVxuICAgIH1cbiAgfSk7IFxuICBcbiAgZnVuY3Rpb24gdmFsaWRhdGVFbWFpbCgkZW1haWwpIHtcbiAgICB2YXIgZW1haWxSZWcgPSAvXihbXFx3LVxcLl0rQChbXFx3LV0rXFwuKStbXFx3LV17Miw0fSk/JC87XG4gICAgcmV0dXJuIGVtYWlsUmVnLnRlc3QoICRlbWFpbCApO1xuICB9O1xuICBcbiAgZnVuY3Rpb24gdmFsaWRhdGVQaG9uZSgkcGhvbmUpIHtcbiAgICB2YXIgcGhvbmVSZWcgPSAvXigoOHxcXCs3KVtcXC0gXT8pPyhcXCg/XFxkezN9XFwpP1tcXC0gXT8pP1tcXGRcXC0gXXsxMCwxNH0kLztcbiAgICByZXR1cm4gcGhvbmVSZWcudGVzdCggJHBob25lICk7XG4gIH07XG4gICQoJy5pdGVtX19pbWcnKS5jbGljayhmdW5jdGlvbigpe1xuICAgIHZhciBpbWdTcmMgPSAkKCB0aGlzICkuYXR0cignc3JjJyk7XG4gIFxuICAgIGNvbnNvbGUubG9nKCBpbWdTcmMgKTtcbiAgICBcbiAgICAkKCcuaW1hZ2VfX2NvbnRhaW5lcicpLmNzcygnYmFja2dyb3VuZC1pbWFnZScsICd1cmwoJyArIGltZ1NyYyArICcpJyApO1xuICB9KTtcbiAgaWYgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYXAnKSAhPT0gbnVsbCkge1xuICAgICAgLy8g0KTRg9C90LrRhtC40Y8geW1hcHMucmVhZHkoKSDQsdGD0LTQtdGCINCy0YvQt9Cy0LDQvdCwLCDQutC+0LPQtNCwXG4gICAgICAvLyDQt9Cw0LPRgNGD0LfRj9GC0YHRjyDQstGB0LUg0LrQvtC80L/QvtC90LXQvdGC0YsgQVBJLCDQsCDRgtCw0LrQttC1INC60L7Qs9C00LAg0LHRg9C00LXRgiDQs9C+0YLQvtCy0L4gRE9NLdC00LXRgNC10LLQvi5cbiAgICAgIHltYXBzLnJlYWR5KGluaXQpO1xuICBcbiAgICAgIGZ1bmN0aW9uIGluaXQoKXsgXG4gICAgICAgICAgLy8g0KHQvtC30LTQsNC90LjQtSDQutCw0YDRgtGLLiAgICBcbiAgICAgICAgICB2YXIgbXlNYXAgPSBuZXcgeW1hcHMuTWFwKFwibWFwXCIsIHtcbiAgICAgICAgICAgICAgLy8g0JrQvtC+0YDQtNC40L3QsNGC0Ysg0YbQtdC90YLRgNCwINC60LDRgNGC0YsuXG4gICAgICAgICAgICAgIC8vINCf0L7RgNGP0LTQvtC6INC/0L4g0YPQvNC+0LvRh9C90LjRjjogwqvRiNC40YDQvtGC0LAsINC00L7Qu9Cz0L7RgtCwwrsuXG4gICAgICAgICAgICAgIC8vINCn0YLQvtCx0Ysg0L3QtSDQvtC/0YDQtdC00LXQu9GP0YLRjCDQutC+0L7RgNC00LjQvdCw0YLRiyDRhtC10L3RgtGA0LAg0LrQsNGA0YLRiyDQstGA0YPRh9C90YPRjixcbiAgICAgICAgICAgICAgLy8g0LLQvtGB0L/QvtC70YzQt9GD0LnRgtC10YHRjCDQuNC90YHRgtGA0YPQvNC10L3RgtC+0Lwg0J7Qv9GA0LXQtNC10LvQtdC90LjQtSDQutC+0L7RgNC00LjQvdCw0YIuXG4gICAgICAgICAgICAgIGNlbnRlcjogWzU1Ljc2LCAzNy42NF0sXG4gICAgICAgICAgICAgIC8vINCj0YDQvtCy0LXQvdGMINC80LDRgdGI0YLQsNCx0LjRgNC+0LLQsNC90LjRjy4g0JTQvtC/0YPRgdGC0LjQvNGL0LUg0LfQvdCw0YfQtdC90LjRjzpcbiAgICAgICAgICAgICAgLy8g0L7RgiAwICjQstC10YHRjCDQvNC40YApINC00L4gMTkuXG4gICAgICAgICAgICAgIHpvb206IDEwLFxuICAgICAgICAgICAgICBjb250cm9sczogW11cbiAgICAgICAgICB9KTsgXG4gIFxuICAgICAgICAgIC8vINCc0LXRgtC60LAsINGB0L7QtNC10YDQttC40LzQvtC1INCx0LDQu9GD0L3QsCDQutC+0YLQvtGA0L7QuSDQt9Cw0LPRgNGD0LbQsNC10YLRgdGPINGBINC/0L7QvNC+0YnRjNGOIEFKQVguXG4gICAgICAgICAgLy8gdmFyIHBsYWNlbWFyayA9IG5ldyB5bWFwcy5QbGFjZW1hcmsoWzU1Ljc2MDU4NCwgMzcuNjM5NDUwXSwge30sIHtcbiAgICAgICAgICAvLyAgICAgaWNvbkxheW91dDogJ2RlZmF1bHQjaW1hZ2UnLFxuICAgICAgICAgIC8vICAgICBpY29uSW1hZ2VIcmVmOiAnaW1hZ2VzL21hcF9fYmFsb29uLnBuZycsXG4gICAgICAgICAgLy8gICAgIGljb25JbWFnZVNpemU6IFs1NywgNTFdLFxuICAgICAgICAgIC8vICAgICBpY29uSW1hZ2VPZmZzZXQ6IFstMzcsIC01MF1cbiAgICAgICAgICAvLyB9KTtcbiAgXG4gICAgICAgICAgdmFyIFpvb21MYXlvdXQgPSB5bWFwcy50ZW1wbGF0ZUxheW91dEZhY3RvcnkuY3JlYXRlQ2xhc3MoXCI8ZGl2IGNsYXNzPSdtYXBfX3pvb20tYmxvY2sgdS1qYy1zYnUtZmQtY29sJz5cIiArXG4gICAgICAgICAgXCI8ZGl2IGlkPSd6b29tLWluJyBjbGFzcz0nbWFwX196b29tIHUtamMtY2UgdS1haS1jZSc+XCIgK1xuICAgICAgICAgIFwiPHN2ZyBjbGFzcz0nc3ZnJyB3aWR0aD0nMTJweCcgaGVpZ2h0PScxMnB4JyB2aWV3Qm94PScwIDAgMTIgMTInIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+XCIgK1xuICAgICAgICAgIFwiPGcgaWQ9J0dyb3VwJyA+PHJlY3QgaWQ9J1JlY3RhbmdsZS0zJyB4PScwJyB5PSc1JyB3aWR0aD0nMTInIGhlaWdodD0nMic+PC9yZWN0PlwiICtcbiAgICAgICAgICBcIjxyZWN0IGlkPSdSZWN0YW5nbGUtMycgdHJhbnNmb3JtPSd0cmFuc2xhdGUoNi4wMDAwMDAsIDYuMDAwMDAwKSByb3RhdGUoOTAuMDAwMDAwKSB0cmFuc2xhdGUoLTYuMDAwMDAwLCAtNi4wMDAwMDApICcgeD0nMCcgeT0nNScgd2lkdGg9JzEyJyBoZWlnaHQ9JzInPjwvcmVjdD48L2c+XCIgK1xuICAgICAgICAgIFwiPC9zdmc+PC9kaXY+PGJyPlwiICtcbiAgICAgICAgICBcIjxkaXYgaWQ9J3pvb20tb3V0JyBjbGFzcz0nbWFwX196b29tIG1hcF9fem9vbS0tbWludXMgdS1qYy1jZSB1LWFpLWNlJz5cIiArXG4gICAgICAgICAgXCI8c3ZnIGNsYXNzPSdzdmcnIHdpZHRoPSc4cHgnIGhlaWdodD0nMnB4JyB2aWV3Qm94PScwIDAgOCAyJyB2ZXJzaW9uPScxLjEnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgeG1sbnM6eGxpbms9J2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsnPlwiICtcbiAgICAgICAgICBcIjxyZWN0IGlkPSdtYXBfX21pbnVzJyB3aWR0aD0nOCcgaGVpZ2h0PScyJz48L3JlY3Q+XCIgK1xuICAgICAgICAgIFwiPC9zdmc+PC9kaXY+XCIsIHtcbiAgICAgICAgICAgICAgLy8g0J/QtdGA0LXQvtC/0YDQtdC00LXQu9GP0LXQvCDQvNC10YLQvtC00Ysg0LzQsNC60LXRgtCwLCDRh9GC0L7QsdGLINCy0YvQv9C+0LvQvdGP0YLRjCDQtNC+0L/QvtC70L3QuNGC0LXQu9GM0L3Ri9C1INC00LXQudGB0YLQstC40Y9cbiAgICAgICAgICAgICAgLy8g0L/RgNC4INC/0L7RgdGC0YDQvtC10L3QuNC4INC4INC+0YfQuNGB0YLQutC1INC80LDQutC10YLQsC5cbiAgICAgICAgICAgICAgYnVpbGQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgIC8vINCS0YvQt9GL0LLQsNC10Lwg0YDQvtC00LjRgtC10LvRjNGB0LrQuNC5INC80LXRgtC+0LQgYnVpbGQuXG4gICAgICAgICAgICAgICAgICBab29tTGF5b3V0LnN1cGVyY2xhc3MuYnVpbGQuY2FsbCh0aGlzKTtcbiAgXG4gICAgICAgICAgICAgICAgICAvLyDQn9GA0LjQstGP0LfRi9Cy0LDQtdC8INGE0YPQvdC60YbQuNC4LdC+0LHRgNCw0LHQvtGC0YfQuNC60Lgg0Log0LrQvtC90YLQtdC60YHRgtGDINC4INGB0L7RhdGA0LDQvdGP0LXQvCDRgdGB0YvQu9C60LhcbiAgICAgICAgICAgICAgICAgIC8vINC90LAg0L3QuNGFLCDRh9GC0L7QsdGLINC/0L7RgtC+0Lwg0L7RgtC/0LjRgdCw0YLRjNGB0Y8g0L7RgiDRgdC+0LHRi9GC0LjQuS5cbiAgICAgICAgICAgICAgICAgIHRoaXMuem9vbUluQ2FsbGJhY2sgPSB5bWFwcy51dGlsLmJpbmQodGhpcy56b29tSW4sIHRoaXMpO1xuICAgICAgICAgICAgICAgICAgdGhpcy56b29tT3V0Q2FsbGJhY2sgPSB5bWFwcy51dGlsLmJpbmQodGhpcy56b29tT3V0LCB0aGlzKTtcbiAgXG4gICAgICAgICAgICAgICAgICAvLyDQndCw0YfQuNC90LDQtdC8INGB0LvRg9GI0LDRgtGMINC60LvQuNC60Lgg0L3QsCDQutC90L7Qv9C60LDRhSDQvNCw0LrQtdGC0LAuXG4gICAgICAgICAgICAgICAgICAkKCcjem9vbS1pbicpLmJpbmQoJ2NsaWNrJywgdGhpcy56b29tSW5DYWxsYmFjayk7XG4gICAgICAgICAgICAgICAgICAkKCcjem9vbS1vdXQnKS5iaW5kKCdjbGljaycsIHRoaXMuem9vbU91dENhbGxiYWNrKTtcbiAgICAgICAgICAgICAgfSxcbiAgXG4gICAgICAgICAgICAgIGNsZWFyOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAvLyDQodC90LjQvNCw0LXQvCDQvtCx0YDQsNCx0L7RgtGH0LjQutC4INC60LvQuNC60L7Qsi5cbiAgICAgICAgICAgICAgICAgICQoJyN6b29tLWluJykudW5iaW5kKCdjbGljaycsIHRoaXMuem9vbUluQ2FsbGJhY2spO1xuICAgICAgICAgICAgICAgICAgJCgnI3pvb20tb3V0JykudW5iaW5kKCdjbGljaycsIHRoaXMuem9vbU91dENhbGxiYWNrKTtcbiAgXG4gICAgICAgICAgICAgICAgICAvLyDQktGL0LfRi9Cy0LDQtdC8INGA0L7QtNC40YLQtdC70YzRgdC60LjQuSDQvNC10YLQvtC0IGNsZWFyLlxuICAgICAgICAgICAgICAgICAgWm9vbUxheW91dC5zdXBlcmNsYXNzLmNsZWFyLmNhbGwodGhpcyk7XG4gICAgICAgICAgICAgIH0sXG4gIFxuICAgICAgICAgICAgICB6b29tSW46IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgIHZhciBtYXAgPSB0aGlzLmdldERhdGEoKS5jb250cm9sLmdldE1hcCgpO1xuICAgICAgICAgICAgICAgICAgbWFwLnNldFpvb20obWFwLmdldFpvb20oKSArIDEsIHtjaGVja1pvb21SYW5nZTogdHJ1ZX0pO1xuICAgICAgICAgICAgICB9LFxuICBcbiAgICAgICAgICAgICAgem9vbU91dDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgdmFyIG1hcCA9IHRoaXMuZ2V0RGF0YSgpLmNvbnRyb2wuZ2V0TWFwKCk7XG4gICAgICAgICAgICAgICAgICBtYXAuc2V0Wm9vbShtYXAuZ2V0Wm9vbSgpIC0gMSwge2NoZWNrWm9vbVJhbmdlOiB0cnVlfSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgXG4gICAgICAgICAgLy8gdmFyIGN0cmwgPSBteU1hcC5jb250cm9scy5nZXQoJ3pvb21Db250cm9sJykub3B0aW9ucy5nZXQoJ2xlZnQnKTtcbiAgICAgICAgICAvLyB2YXIgb2JqID0gbXlNYXAuY29udHJvbHMuZ2V0KCd6b29tQ29udHJvbCcpO1xuICAgICAgICAgIC8vIGNvbnNvbGUubG9nKG15TWFwLCAnem9vbUNvbnRyb2wnLCBjdHJsLCBvYmopO1xuICBcbiAgICAgICAgICAkKCB3aW5kb3cgKS5vbigncmVzaXplJywgZnVuY3Rpb24oKSB7ICAgXG4gICAgICAgICAgLy/QvtC/0YDQtdC00LXQu9GP0LXQvCDQstC10YDRgtC40LrQsNC70YzQvdGL0Lkg0YbQtdC90YLRgCDQutCw0YDRgtGLXG4gICAgICAgICAgICAgIHZhciBjZW50ZXJQb3MgPSAoIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFwXCIpLm9mZnNldEhlaWdodCAvIDIgKSAtIDUwOyAgICBcbiAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coY2VudGVyUG9zKTsgIFxuICBcbiAgICAgICAgICAgICAgLy/Qt9Cw0LTQsNC10Lwg0YHQstC+0LnRgdGC0LLQsCDQutC90L7Qv9C+0Log0LfRg9C80LBcbiAgICAgICAgICAgICAgLy8gdmFyIHpvb21Db250cm9sID0gbmV3IHltYXBzLmNvbnRyb2wuWm9vbUNvbnRyb2woe1xuICAgICAgICAgICAgICAvLyAgICAgb3B0aW9uczoge1xuICAgICAgICAgICAgICAvLyAgICAgICAgIGxheW91dDogWm9vbUxheW91dCxcbiAgICAgICAgICAgICAgLy8gICAgICAgICBwb3NpdGlvbjoge1xuICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBsZWZ0OiAzMCxcbiAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgdG9wOiBjZW50ZXJQb3NcbiAgICAgICAgICAgICAgLy8gICAgICAgICB9XG4gICAgICAgICAgICAgIC8vICAgICB9XG4gICAgICAgICAgICAgIC8vIH0pO1xuICBcbiAgICAgICAgICAgICAgbXlNYXAuY29udHJvbHMucmVtb3ZlKCd6b29tQ29udHJvbCcpO1xuICAgICAgICAgICAgICAvLyDQodC+0LfQtNCw0LTQuNC8INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRjNGB0LrQuNC5INC80LDQutC10YIg0L/QvtC70LfRg9C90LrQsCDQvNCw0YHRiNGC0LDQsdCwLlxuICAgICAgICAgICAgICBteU1hcC5jb250cm9scy5hZGQoJ3pvb21Db250cm9sJywge1xuICAgICAgICAgICAgICAgICAgbGF5b3V0OiBab29tTGF5b3V0LFxuICAgICAgICAgICAgICAgICAgcG9zaXRpb246IHtcbiAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiAnMzBweCcsXG4gICAgICAgICAgICAgICAgICAgICAgdG9wOiBjZW50ZXJQb3NcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSk7ICAgICAgICBcbiAgICAgICAgICB9KS5yZXNpemUoKTtcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBteU1hcC5nZW9PYmplY3RzLmFkZChwbGFjZW1hcmspO1xuICBcbiAgICAgICAgICBmdW5jdGlvbiBtYXBTZXJ2ZXJEYXRhKHNlcnZlckRhdGEpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgIHR5cGU6IFwiRmVhdHVyZUNvbGxlY3Rpb25cIixcbiAgICAgICAgICAgICAgICAgIGZlYXR1cmVzOiBzZXJ2ZXJEYXRhLm1hcChmdW5jdGlvbihvYmosIGluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IGluZGV4LFxuICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIkZlYXR1cmVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZ2VvbWV0cnk6IHsgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIlBvaW50XCIsIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29vcmRpbmF0ZXM6IFtvYmoubGF0LCBvYmoubG9uZ10gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzOiB7IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWNvbkNhcHRpb246IG9iai5zZXJpYWxOdW1iZXIgXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBvcHRpb25zOiB7IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgcHJlc2V0OiBnZXRPYmplY3RQcmVzZXQob2JqKSBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gfVxuICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICB9O1xuICAgICAgICAgIH07XG4gICAgICBcbiAgICAgICAgICAvLyBmdW5jdGlvbiBnZXRPYmplY3RQcmVzZXQob2JqKSB7XG4gICAgICAgICAgLy8gICAgIHJldHVybiBvYmouaXNBY3RpdmVcbiAgICAgICAgICAvLyAgICAgICAgID8gJ2lzbGFuZHMjYmx1ZUNpcmNsZURvdEljb25XaXRoQ2FwdGlvbidcbiAgICAgICAgICAvLyAgICAgICAgIDogJ2lzbGFuZHMjcmVkQ2lyY2xlRG90SWNvbldpdGhDYXB0aW9uJztcbiAgICAgICAgICAvLyB9XG4gICAgICAgICAgICBcbiAgICAgIFxuICAgICAgICAgIGZ1bmN0aW9uIGxvYWRMaXN0KCkge1xuICAgICAgICAgICAgICByZXR1cm4gZmV0Y2goXCIuLi9qcy90ZXN0Lmpzb25cIilcbiAgICAgICAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcbiAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG1hcFNlcnZlckRhdGEoZGF0YSk7XG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICBcbiAgICAgICAgICB2YXIgb2JqZWN0TWFuYWdlciA9IG5ldyB5bWFwcy5PYmplY3RNYW5hZ2VyKHtcbiAgICAgICAgICAgICAgY2x1c3Rlcml6ZTogdHJ1ZSxcbiAgICAgICAgICAgICAgZ3JpZFNpemU6IDY0LFxuICAgICAgICAgICAgICBjbHVzdGVySWNvbkxheW91dDogJ2RlZmF1bHQjcGllQ2hhcnQnLFxuICAgICAgICAgICAgICAvLyBjbHVzdGVySWNvbkltYWdlSHJlZjogJ2ltYWdlcy9tYXBfX2JhbG9vbi5wbmcnLFxuICAgICAgICAgICAgICBjbHVzdGVyRGlzYWJsZUNsaWNrWm9vbTogZmFsc2VcbiAgICAgICAgICAgICAgLy8gZ2VvT2JqZWN0T3BlbkJhbGxvb25PbkNsaWNrOiB0cnVlLFxuICAgICAgICAgICAgICAvLyBnZW9PYmplY3RIaWRlSWNvbk9uQmFsbG9vbk9wZW46IHRydWUsXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgXG4gICAgICAgICAgLy8gb2JqZWN0TWFuYWdlci5jbHVzdGVycy5vcHRpb25zLnNldCh7XG4gICAgICAgICAgLy8gICAgIGNsdXN0ZXJJY29uTGF5b3V0OiAnZGVmYXVsdCNpbWFnZScsXG4gICAgICAgICAgLy8gICAgIGNsdXN0ZXJJY29uSW1hZ2VIcmVmOiAnaW1hZ2VzL21hcF9fYmFsb29uLnBuZycsXG4gICAgICAgICAgLy8gICAgIGNsdXN0ZXJJY29uSW1hZ2VTaXplOiBbNTcsIDUxXSxcbiAgICAgICAgICAvLyAgICAgY2x1c3Rlckljb25JbWFnZU9mZnNldDogWy0zNywgLTUwXVxuICAgICAgICAgIC8vIH0pO1xuICAgICAgICAgIFxuICAgICAgICAgIGxvYWRMaXN0KCkudGhlbihmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICAgIG9iamVjdE1hbmFnZXIuYWRkKGRhdGEpO1xuICAgICAgICAgIH0pLFxuICAgICAgICAgIFxuICAgICAgICAgIG9iamVjdE1hbmFnZXIub2JqZWN0cy5vcHRpb25zLnNldCh7XG4gICAgICAgICAgICAgIGljb25MYXlvdXQ6ICdkZWZhdWx0I2ltYWdlJyxcbiAgICAgICAgICAgICAgaWNvbkltYWdlSHJlZjogJ2ltYWdlcy9tYXBfX2JhbG9vbi5wbmcnLFxuICAgICAgICAgICAgICBpY29uSW1hZ2VTaXplOiBbNTcsIDUxXSxcbiAgICAgICAgICAgICAgaWNvbkltYWdlT2Zmc2V0OiBbLTM3LCAtNTBdXG4gICAgICAgICAgfSk7XG4gIFxuICAgICAgICAgIG15TWFwLmdlb09iamVjdHMuYWRkKG9iamVjdE1hbmFnZXIpO1xuICAgICAgfVxuICB9IGVsc2UgaWYgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpdGVtLW1hcCcpICE9PSBudWxsKSB7XG4gICAgICB5bWFwcy5yZWFkeShpbml0KTtcbiAgXG4gICAgICB2YXIgbG5nID0gJCgnI2l0ZW0tbWFwJykuYXR0cignZGF0YS1sbmcnKTtcbiAgICAgIHZhciBsYXQgPSAkKCcjaXRlbS1tYXAnKS5hdHRyKCdkYXRhLWxhdCcpO1xuICBcbiAgICAgIGZ1bmN0aW9uIGluaXQoKXsgXG4gICAgICAgICAgdmFyIG15TWFwID0gbmV3IHltYXBzLk1hcChcIml0ZW0tbWFwXCIsIHtcbiAgICAgICAgICAgICAgY2VudGVyOiBbbG5nLCBsYXRdLFxuICAgICAgICAgICAgICB6b29tOiAxMyxcbiAgICAgICAgICAgICAgY29udHJvbHM6IFtdXG4gICAgICAgICAgfSk7IFxuICBcbiAgICAgICAgICB2YXIgcGxhY2VtYXJrID0gbmV3IHltYXBzLlBsYWNlbWFyayhbbG5nLCBsYXRdLCB7fSwge1xuICAgICAgICAgICAgICBpY29uTGF5b3V0OiAnZGVmYXVsdCNpbWFnZScsXG4gICAgICAgICAgICAgIGljb25JbWFnZUhyZWY6ICdpbWFnZXMvbWFwX19iYWxvb24ucG5nJyxcbiAgICAgICAgICAgICAgaWNvbkltYWdlU2l6ZTogWzU3LCA1MV0sXG4gICAgICAgICAgICAgIGljb25JbWFnZU9mZnNldDogWy0zNywgLTUwXVxuICAgICAgICAgIH0pO1xuICBcbiAgICAgICAgICB2YXIgWm9vbUxheW91dCA9IHltYXBzLnRlbXBsYXRlTGF5b3V0RmFjdG9yeS5jcmVhdGVDbGFzcyhcIjxkaXYgY2xhc3M9J21hcF9fem9vbS1ibG9jayB1LWpjLXNidS1mZC1jb2wnPlwiICtcbiAgICAgICAgICBcIjxkaXYgaWQ9J3pvb20taW4nIGNsYXNzPSdtYXBfX3pvb20gdS1qYy1jZSB1LWFpLWNlJz5cIiArXG4gICAgICAgICAgXCI8c3ZnIGNsYXNzPSdzdmcnIHdpZHRoPScxMnB4JyBoZWlnaHQ9JzEycHgnIHZpZXdCb3g9JzAgMCAxMiAxMicgdmVyc2lvbj0nMS4xJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJz5cIiArXG4gICAgICAgICAgXCI8ZyBpZD0nR3JvdXAnID48cmVjdCBpZD0nUmVjdGFuZ2xlLTMnIHg9JzAnIHk9JzUnIHdpZHRoPScxMicgaGVpZ2h0PScyJz48L3JlY3Q+XCIgK1xuICAgICAgICAgIFwiPHJlY3QgaWQ9J1JlY3RhbmdsZS0zJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSg2LjAwMDAwMCwgNi4wMDAwMDApIHJvdGF0ZSg5MC4wMDAwMDApIHRyYW5zbGF0ZSgtNi4wMDAwMDAsIC02LjAwMDAwMCkgJyB4PScwJyB5PSc1JyB3aWR0aD0nMTInIGhlaWdodD0nMic+PC9yZWN0PjwvZz5cIiArXG4gICAgICAgICAgXCI8L3N2Zz48L2Rpdj48YnI+XCIgK1xuICAgICAgICAgIFwiPGRpdiBpZD0nem9vbS1vdXQnIGNsYXNzPSdtYXBfX3pvb20gbWFwX196b29tLS1taW51cyB1LWpjLWNlIHUtYWktY2UnPlwiICtcbiAgICAgICAgICBcIjxzdmcgY2xhc3M9J3N2Zycgd2lkdGg9JzhweCcgaGVpZ2h0PScycHgnIHZpZXdCb3g9JzAgMCA4IDInIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+XCIgK1xuICAgICAgICAgIFwiPHJlY3QgaWQ9J21hcF9fbWludXMnIHdpZHRoPSc4JyBoZWlnaHQ9JzInPjwvcmVjdD5cIiArXG4gICAgICAgICAgXCI8L3N2Zz48L2Rpdj5cIiwge1xuICAgICAgICAgICAgICBidWlsZDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgWm9vbUxheW91dC5zdXBlcmNsYXNzLmJ1aWxkLmNhbGwodGhpcyk7XG4gIFxuICAgICAgICAgICAgICAgICAgdGhpcy56b29tSW5DYWxsYmFjayA9IHltYXBzLnV0aWwuYmluZCh0aGlzLnpvb21JbiwgdGhpcyk7XG4gICAgICAgICAgICAgICAgICB0aGlzLnpvb21PdXRDYWxsYmFjayA9IHltYXBzLnV0aWwuYmluZCh0aGlzLnpvb21PdXQsIHRoaXMpO1xuICBcbiAgICAgICAgICAgICAgICAgICQoJyN6b29tLWluJykuYmluZCgnY2xpY2snLCB0aGlzLnpvb21JbkNhbGxiYWNrKTtcbiAgICAgICAgICAgICAgICAgICQoJyN6b29tLW91dCcpLmJpbmQoJ2NsaWNrJywgdGhpcy56b29tT3V0Q2FsbGJhY2spO1xuICAgICAgICAgICAgICB9LFxuICBcbiAgICAgICAgICAgICAgY2xlYXI6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICQoJyN6b29tLWluJykudW5iaW5kKCdjbGljaycsIHRoaXMuem9vbUluQ2FsbGJhY2spO1xuICAgICAgICAgICAgICAgICAgJCgnI3pvb20tb3V0JykudW5iaW5kKCdjbGljaycsIHRoaXMuem9vbU91dENhbGxiYWNrKTtcbiAgXG4gICAgICAgICAgICAgICAgICBab29tTGF5b3V0LnN1cGVyY2xhc3MuY2xlYXIuY2FsbCh0aGlzKTtcbiAgICAgICAgICAgICAgfSxcbiAgXG4gICAgICAgICAgICAgIHpvb21JbjogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgdmFyIG1hcCA9IHRoaXMuZ2V0RGF0YSgpLmNvbnRyb2wuZ2V0TWFwKCk7XG4gICAgICAgICAgICAgICAgICBtYXAuc2V0Wm9vbShtYXAuZ2V0Wm9vbSgpICsgMSwge2NoZWNrWm9vbVJhbmdlOiB0cnVlfSk7XG4gICAgICAgICAgICAgIH0sXG4gIFxuICAgICAgICAgICAgICB6b29tT3V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICB2YXIgbWFwID0gdGhpcy5nZXREYXRhKCkuY29udHJvbC5nZXRNYXAoKTtcbiAgICAgICAgICAgICAgICAgIG1hcC5zZXRab29tKG1hcC5nZXRab29tKCkgLSAxLCB7Y2hlY2tab29tUmFuZ2U6IHRydWV9KTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICBcbiAgICAgICAgICAkKCB3aW5kb3cgKS5vbigncmVzaXplJywgZnVuY3Rpb24oKSB7ICAgXG4gICAgICAgICAgICAgIHZhciBjZW50ZXJQb3MgPSAoIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiaXRlbS1tYXBcIikub2Zmc2V0SGVpZ2h0IC8gMiApIC0gNTA7ICAgIFxuICBcbiAgICAgICAgICAgICAgbXlNYXAuY29udHJvbHMucmVtb3ZlKCd6b29tQ29udHJvbCcpO1xuICAgICAgICAgICAgICBteU1hcC5jb250cm9scy5hZGQoJ3pvb21Db250cm9sJywge1xuICAgICAgICAgICAgICAgICAgbGF5b3V0OiBab29tTGF5b3V0LFxuICAgICAgICAgICAgICAgICAgcG9zaXRpb246IHtcbiAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiAnMzBweCcsXG4gICAgICAgICAgICAgICAgICAgICAgdG9wOiBjZW50ZXJQb3NcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSk7ICAgICAgICBcbiAgICAgICAgICB9KS5yZXNpemUoKTtcbiAgICAgICAgICBcbiAgICAgICAgICBteU1hcC5nZW9PYmplY3RzLmFkZChwbGFjZW1hcmspO1xuICAgICAgfVxuICB9XG4gICQoJyNtb2RhbC1jbG9zZS1idG4nKS5vbignY2xpY2snLGZ1bmN0aW9uKCkge1xuICAgIHZhciAkdGhpcyA9ICQoIHRoaXMgKTtcbiAgXG4gICAgJHRoaXMuY2xvc2VzdCgnLmpzLW1vZGFsJykucmVtb3ZlQ2xhc3MoJ2lzT3BlbmVkJyk7XG4gIH0pO1xuICAkKCcuanMtbW9kYWxfX2J0bicpLm9uKCdjbGljaycsZnVuY3Rpb24oZSkge1xuICAgIHZhciB2YWwgPSAkKCB0aGlzICkuYXR0cignZGF0YS1tb2RhbCcpO1xuICAgIFxuICAgIC8vIHZhciBzdHlsZXMgPSB7XG4gICAgLy8gICBkaXNwbGF5IDogXCJibG9ja1wiLFxuICAgIC8vICAgd2lkdGg6IFwiMTAwJVwiLFxuICAgIC8vICAgdG9wOiAtaGVhZGVIZWlnaHRcbiAgICAvLyB9O1xuICAgIFxuICAgICQoJyMnK3ZhbCkuYWRkQ2xhc3MoJ2lzT3BlbmVkJyk7XG4gIH0pO1xuICAkKCB3aW5kb3cgKS5vbigncmVzaXplJywgZnVuY3Rpb24oKSB7ICAgXG4gICAgaWYgKCQoJy5zY3JvbGxhYmxlLWlubmVyJykgIT09IG51bGwpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgICQoJy5zY3JvbGxhYmxlLWlubmVyJykubGVuZ3RoOyBpICsrKSB7XG4gICAgICAgIHZhciBzY3JJbiA9ICQoJy5zY3JvbGxhYmxlLWlubmVyJylbaV07XG4gICAgICAgIHZhciBzY3JFbCA9ICQoc2NySW4pLmF0dHIoJ2RhdGEtaXNjcm9sbCcpO1xuICAgICAgICB2YXIgc2NyUGFyID0gJCgnLnNjcm9sbGFibGUtcGFyZW50W2RhdGEtcHNjcm9sbD1cIicgKyBzY3JFbCArICdcIl0nKVxuICAgICAgICB2YXIgc2NySGVpZ2h0ID0gc2NySW4uY2xpZW50SGVpZ2h0O1xuICAgICAgICAvLyBjb25zb2xlLmxvZyhzY3JIZWlnaHQpO1xuICAgICAgICBzY3JQYXIuaGVpZ2h0KHNjckhlaWdodCk7XG4gICAgICB9O1xuICAgIH07XG4gIH0pLnJlc2l6ZSgpO1xuICAkKHdpbmRvdykub24oXCJzY3JvbGwgbG9hZFwiLGZ1bmN0aW9uKCl7XG4gICAgdmFyIHN0aWNrYmxvY2sgPSAkKCcuanMtaGVhZGVyJyk7XG4gIFxuICAgIGlmICggJCh3aW5kb3cpLnNjcm9sbFRvcCgpID49IDYwKSB7XG4gICAgICBzdGlja2Jsb2NrLmFkZENsYXNzKCdzdGlja2VkJyk7IFxuICAgIH0gZWxzZSB7XG4gICAgICBzdGlja2Jsb2NrLnJlbW92ZUNsYXNzKCdzdGlja2VkJyk7IFxuICAgIH07XG4gIH0pXG4gICQoJy5qcy10YWJfX2l0ZW0nKS5vbignY2xpY2snLGZ1bmN0aW9uKGUpIHtcbiAgICB2YXIgJHRoaXMgPSAkKCB0aGlzICk7XG4gIFxuICAgICR0aGlzLmNsb3Nlc3QoJy50YWInKS5maW5kKCcuanMtdGFiX19pdGVtJykucmVtb3ZlQ2xhc3MoJ2pzLWFjdGl2ZScpO1xuICAgICR0aGlzLmFkZENsYXNzKCdqcy1hY3RpdmUnKTtcbiAgXG4gICAgdmFyIHZhbCA9ICR0aGlzLmF0dHIoJ2RhdGEtdGFiJyk7ICAgIFxuICBcbiAgICAkdGhpcy5jbG9zZXN0KCcudGFiJykuZmluZCgnLnRhYl9fYmxvY2snKS5yZW1vdmVDbGFzcygnanMtYWN0aXZlJyk7XG4gICAgJCgnW2RhdGEtY29udGVudD1cIicrdmFsKydcIl0nKS5hZGRDbGFzcygnanMtYWN0aXZlJyk7XG4gIH0pO1xuICAkLmFqYXgoe1xuICAgIHVybDogJy4vanMvdGhlbWUuanNvbicsICAgICAgICAgICAgIFxuICAgIGRhdGFUeXBlIDogXCJqc29uXCIsICAgICAgICAgICAgICAgICAgICBcbiAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgJCgnLnNpZGUtbW9kYWxfX2NvbnRlbnQnKS5hcHBlbmQoJzx1bCBjbGFzcz1cInNpZGUtbW9kYWxfX2xpc3RcIj48L3VsPicpO1xuICAgICAgJC5lYWNoKGRhdGEsIGZ1bmN0aW9uKGksIHZhbCkgeyBcbiAgICAgICAgJCgnLnNpZGUtbW9kYWxfX2xpc3QnKVxuICAgICAgICAgIC5hcHBlbmQoJzxsaSBjbGFzcz1cInNpZGUtbW9kYWxfX3RoZW1lXCI+PGEgaHJlZj1cImphdmFzY3JpcHQ6O1wiIGRhdGEtbGluaz1cInN1YnRoZW1lJyArXG4gICAgICAgICAgICB2YWwuaWQgK1xuICAgICAgICAgICAgJ1wiIGNsYXNzPVwic2lkZS1tb2RhbF9fdGhlbWUtbGluayBqcy1vcGVuLXN1YnRoZW1lXCI+JytcbiAgICAgICAgICAgIHZhbC50aGVtZSArXG4gICAgICAgICAgICAnPC9hPjwvbGk+JylcbiAgICAgIH0pO1xuICAgIH0gXG4gIH0pO1xuICAkKCBcIi5qcy10b2dnbGUtaXRlbVwiICkuY2xpY2soZnVuY3Rpb24oKSB7XG4gICAgJCggdGhpcyApLnRvZ2dsZUNsYXNzKCBcImlzQWN0aXZlXCIgKTtcbiAgfSk7XG59KTtcbiQoZG9jdW1lbnQpLmFqYXhDb21wbGV0ZShmdW5jdGlvbiAoKSB7XG4gICQoJy5qcy1vcGVuLXN1YnRoZW1lLWNvbnRlbnQnKS5vbignY2xpY2snLCBmdW5jdGlvbigpIHtcbiAgICB2YXIgJHRoaXMgPSAkKCB0aGlzICk7XG4gICAgdmFyIGxpbmsgPSAkdGhpcy5hdHRyKCdkYXRhLWxpbmsnKTtcbiAgICB2YXIgdGV4dCA9ICR0aGlzLnRleHQoKTtcbiAgXG4gICAgJCgnLnNpZGUtbW9kYWxfX2JyZWFkY3J1bWJzJykuYXBwZW5kKCc8bGkgY2xhc3M9XCJicmVhZGNydW1ic19faXRlbVwiPicrXG4gICAgJzxhIGhyZWY9XCIjXCIgY2xhc3M9XCJicmVhZGNydW1ic19fbGlua1wiPicrdGV4dCsnPC9hPjwvbGk+Jyk7XG4gIFxuICAgICQuYWpheCh7XG4gICAgICB1cmw6ICcuLycgKyBsaW5rICsgJy5odG1sJywgICAgICAgICAgICAgXG4gICAgICBkYXRhVHlwZSA6IFwiaHRtbFwiLCAgICAgICAgICAgICAgICAgICAgXG4gICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAkKCcuc2lkZS1tb2RhbF9fY29udGVudCcpLmh0bWwoIGRhdGEgKTtcbiAgICAgIH0gXG4gICAgfSk7XG4gIH0pO1xuICAkKCcuanMtb3Blbi1zdWJ0aGVtZScpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuICAgIHZhciAkdGhpcyA9ICQoIHRoaXMgKTtcbiAgICB2YXIgbGluayA9ICR0aGlzLmF0dHIoJ2RhdGEtbGluaycpO1xuICAgIHZhciB0ZXh0ID0gJHRoaXMudGV4dCgpO1xuICAgIHZhciBicmVhZGNydW1icyA9ICc8dWwgY2xhc3M9XCJicmVhZGNydW1ic19fbGlzdCBzaWRlLW1vZGFsX19icmVhZGNydW1icyB1LWpjLWZzXCI+JytcbiAgICAnPGxpIGNsYXNzPVwiYnJlYWRjcnVtYnNfX2l0ZW1cIj48YSBocmVmPVwiI1wiIGNsYXNzPVwiYnJlYWRjcnVtYnNfX2xpbmtcIj7QrtGA0LjQtNC40YfQtdGB0LrQsNGPINC/0L7QvNC+0YnRjDwvYT48L2xpPicgK1xuICAgICc8L3VsPic7XG4gICAgXG4gICAgJCgnLnNpZGUtbW9kYWxfX2hlYWRlci13cmFwcGVyJykuaHRtbChicmVhZGNydW1icyk7XG4gICAgXG4gICAgJCgnLnNpZGUtbW9kYWxfX2JyZWFkY3J1bWJzJykuYXBwZW5kKCc8bGkgY2xhc3M9XCJicmVhZGNydW1ic19faXRlbVwiPicrXG4gICAgJzxhIGhyZWY9XCIjXCIgY2xhc3M9XCJicmVhZGNydW1ic19fbGlua1wiPicrdGV4dCsnPC9hPjwvbGk+Jyk7XG4gIFxuICAgICQuYWpheCh7XG4gICAgICB1cmw6ICcuL2pzLycrbGluaysnLmpzb24nLFxuICAgICAgZGF0YVR5cGUgOiBcImpzb25cIiwgICAgICAgICAgICAgICAgICAgIFxuICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgJCgnLnNpZGUtbW9kYWxfX2NvbnRlbnQnKS5odG1sKCc8dWwgY2xhc3M9XCJzaWRlLW1vZGFsX19saXN0XCI+PC91bD4nKTtcbiAgICAgICAgJC5lYWNoKGRhdGEsIGZ1bmN0aW9uKGksIHZhbCkgeyBcbiAgICAgICAgICAkKCcuc2lkZS1tb2RhbF9fbGlzdCcpXG4gICAgICAgICAgICAuYXBwZW5kKCc8bGkgY2xhc3M9XCJzaWRlLW1vZGFsX190aGVtZVwiPjxhIGhyZWY9XCJqYXZhc2NyaXB0OjtcIiBkYXRhLWxpbms9XCJzdWJ0aGVtZScgK1xuICAgICAgICAgICAgICB2YWwuaWQgK1xuICAgICAgICAgICAgICAnXCIgY2xhc3M9XCJzaWRlLW1vZGFsX190aGVtZS1saW5rIGpzLW9wZW4tc3VidGhlbWUtY29udGVudFwiPicrXG4gICAgICAgICAgICAgIHZhbC50aGVtZSArXG4gICAgICAgICAgICAgICc8L2E+PC9saT4nKVxuICAgICAgICB9KTtcbiAgICAgIH0gXG4gICAgfSk7XG4gIH0pO1xuICAkKCcuanMtYnRuLXllcycpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuICAgICQuYWpheCh7XG4gICAgICB1cmw6ICcuL3N1YnRoZW1lX3llcy5odG1sJywgICAgICAgICAgICAgXG4gICAgICBkYXRhVHlwZSA6IFwiaHRtbFwiLCAgICAgICAgICAgICAgICAgICAgXG4gICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAkKCcuc3VidGhlbWVfX2Jsb2NrJykuaHRtbCggZGF0YSApO1xuICAgICAgfSBcbiAgICB9KTtcbiAgfSk7XG4gIFxuICAkKCcuanMtYnRuLW5vJykub24oJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gICAgJC5hamF4KHtcbiAgICAgIHVybDogJy4vc3VidGhlbWVfZm9ybS5odG1sJywgICAgICAgICAgICAgXG4gICAgICBkYXRhVHlwZSA6IFwiaHRtbFwiLCAgICAgICAgICAgICAgICAgICAgXG4gICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAkKCcuc3VidGhlbWVfX2Jsb2NrJykuaHRtbCggZGF0YSApO1xuICAgICAgfSBcbiAgICB9KTtcbiAgfSk7XG59KSJdfQ==
